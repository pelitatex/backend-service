
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Nd_barangScalarFieldEnum = {
  id: 'id',
  jenis_barang: 'jenis_barang',
  nama_jual: 'nama_jual',
  satuan_id: 'satuan_id',
  qty_warning: 'qty_warning',
  deskripsi_info: 'deskripsi_info',
  status_aktif: 'status_aktif',
  tipe_qty: 'tipe_qty',
  grade: 'grade',
  bahan: 'bahan',
  fitur: 'fitur',
  tipe: 'tipe',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_barang_bahanScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_barang_beliScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  barang_id: 'barang_id',
  status_aktif: 'status_aktif',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_barang_fiturScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_barang_gradeScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_barang_skuScalarFieldEnum = {
  id: 'id',
  sku_id: 'sku_id',
  nama_barang: 'nama_barang',
  nama_jual: 'nama_jual',
  barang_id: 'barang_id',
  warna_id: 'warna_id',
  satuan_id: 'satuan_id',
  status_aktif: 'status_aktif',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_barang_tipeScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_customerScalarFieldEnum = {
  id: 'id',
  customer_type_id: 'customer_type_id',
  nama: 'nama',
  alias: 'alias',
  alamat: 'alamat',
  telepon: 'telepon',
  telepon1: 'telepon1',
  telepon2: 'telepon2',
  npwp: 'npwp',
  nik: 'nik',
  kota: 'kota',
  provinsi: 'provinsi',
  kode_pos: 'kode_pos',
  email: 'email',
  contact_person: 'contact_person',
  tempo_kredit: 'tempo_kredit',
  warning_kredit: 'warning_kredit',
  limit_warning_type: 'limit_warning_type',
  limit_amount: 'limit_amount',
  limit_atas: 'limit_atas',
  limit_warning_amount: 'limit_warning_amount',
  status_aktif: 'status_aktif',
  img_link: 'img_link',
  npwp_link: 'npwp_link',
  ktp_link: 'ktp_link',
  medsos_link: 'medsos_link',
  updated_at: 'updated_at',
  tipe_company: 'tipe_company',
  blok: 'blok',
  no: 'no',
  rt: 'rt',
  rw: 'rw',
  kecamatan: 'kecamatan',
  kelurahan: 'kelurahan',
  locked_status: 'locked_status',
  jenis_pekerjaan: 'jenis_pekerjaan',
  jenis_produk: 'jenis_produk',
  user_id: 'user_id'
};

exports.Prisma.Nd_departmentScalarFieldEnum = {
  id: 'id',
  kode: 'kode',
  nama: 'nama',
  status_aktif: 'status_aktif',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_documentScalarFieldEnum = {
  id: 'id',
  toko_id: 'toko_id',
  tanggal: 'tanggal',
  document_control_id: 'document_control_id',
  document_number_raw: 'document_number_raw',
  document_number: 'document_number',
  document_status: 'document_status',
  judul: 'judul',
  dari: 'dari',
  kepada: 'kepada',
  keterangan: 'keterangan',
  penanggung_jawab: 'penanggung_jawab',
  username: 'username',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_document_controlScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  tipe_dokumen: 'tipe_dokumen',
  no_kode: 'no_kode',
  kode: 'kode',
  nama: 'nama',
  keterangan: 'keterangan',
  status_aktif: 'status_aktif',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_gudangScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  lokasi: 'lokasi',
  status_default: 'status_default',
  visible: 'visible',
  gudang_group_id: 'gudang_group_id',
  urutan: 'urutan',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_posisiScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Nd_satuanScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_supplierScalarFieldEnum = {
  id: 'id',
  kode: 'kode',
  nama: 'nama',
  alamat: 'alamat',
  telepon: 'telepon',
  kota: 'kota',
  fax: 'fax',
  kode_pos: 'kode_pos',
  nama_bank: 'nama_bank',
  no_rek_bank: 'no_rek_bank',
  email: 'email',
  website: 'website',
  status_aktif: 'status_aktif'
};

exports.Prisma.Nd_tokoScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  alias: 'alias',
  alamat: 'alamat',
  telepon: 'telepon',
  email: 'email',
  fax: 'fax',
  kota: 'kota',
  kode_pos: 'kode_pos',
  NPWP: 'NPWP',
  pre_faktur: 'pre_faktur',
  kode_toko: 'kode_toko',
  status_aktif: 'status_aktif',
  nama_domain: 'nama_domain',
  email_pajak: 'email_pajak',
  index: 'index'
};

exports.Prisma.Nd_toko_barang_assignmentScalarFieldEnum = {
  id: 'id',
  toko_id: 'toko_id',
  barang_id: 'barang_id',
  is_synced: 'is_synced',
  last_synced: 'last_synced',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Nd_toko_userScalarFieldEnum = {
  id: 'id',
  toko_id: 'toko_id',
  user_id: 'user_id',
  user_id_creator: 'user_id_creator',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_userScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  roles: 'roles',
  has_account: 'has_account',
  nama: 'nama',
  alamat: 'alamat',
  telepon: 'telepon',
  jenis_kelamin: 'jenis_kelamin',
  kota_lahir: 'kota_lahir',
  tgl_lahir: 'tgl_lahir',
  status_perkawinan: 'status_perkawinan',
  jumlah_anak: 'jumlah_anak',
  agama: 'agama',
  nik: 'nik',
  npwp: 'npwp',
  profile_picture: 'profile_picture',
  ktp_picture: 'ktp_picture',
  npwp_picture: 'npwp_picture',
  posisi_id: 'posisi_id',
  time_start: 'time_start',
  time_end: 'time_end',
  printer_list_id: 'printer_list_id',
  status_aktif: 'status_aktif',
  PIN: 'PIN',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Nd_warnaScalarFieldEnum = {
  id: 'id',
  warna_beli: 'warna_beli',
  warna_jual: 'warna_jual',
  kode_warna: 'kode_warna',
  status_aktif: 'status_aktif'
};

exports.Prisma.Query_logScalarFieldEnum = {
  id: 'id',
  table_name: 'table_name',
  affected_id: 'affected_id',
  query: 'query',
  params: 'params',
  username: 'username',
  timestamp: 'timestamp'
};

exports.Prisma.User_logScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  activity: 'activity',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.nd_barangOrderByRelevanceFieldEnum = {
  jenis_barang: 'jenis_barang',
  nama_jual: 'nama_jual',
  deskripsi_info: 'deskripsi_info',
  grade: 'grade',
  bahan: 'bahan',
  fitur: 'fitur',
  tipe: 'tipe'
};

exports.Prisma.nd_barang_bahanOrderByRelevanceFieldEnum = {
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan'
};

exports.Prisma.nd_barang_beliOrderByRelevanceFieldEnum = {
  nama: 'nama'
};

exports.Prisma.nd_barang_fiturOrderByRelevanceFieldEnum = {
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan'
};

exports.Prisma.nd_barang_gradeOrderByRelevanceFieldEnum = {
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan'
};

exports.Prisma.nd_barang_skuOrderByRelevanceFieldEnum = {
  sku_id: 'sku_id',
  nama_barang: 'nama_barang',
  nama_jual: 'nama_jual'
};

exports.Prisma.nd_barang_tipeOrderByRelevanceFieldEnum = {
  nama: 'nama',
  kode: 'kode',
  keterangan: 'keterangan'
};

exports.Prisma.nd_customerOrderByRelevanceFieldEnum = {
  nama: 'nama',
  alias: 'alias',
  alamat: 'alamat',
  telepon: 'telepon',
  telepon1: 'telepon1',
  telepon2: 'telepon2',
  npwp: 'npwp',
  nik: 'nik',
  kota: 'kota',
  provinsi: 'provinsi',
  kode_pos: 'kode_pos',
  email: 'email',
  contact_person: 'contact_person',
  img_link: 'img_link',
  npwp_link: 'npwp_link',
  ktp_link: 'ktp_link',
  medsos_link: 'medsos_link',
  tipe_company: 'tipe_company',
  blok: 'blok',
  no: 'no',
  rt: 'rt',
  rw: 'rw',
  kecamatan: 'kecamatan',
  kelurahan: 'kelurahan',
  jenis_pekerjaan: 'jenis_pekerjaan',
  jenis_produk: 'jenis_produk'
};

exports.Prisma.nd_departmentOrderByRelevanceFieldEnum = {
  kode: 'kode',
  nama: 'nama'
};

exports.Prisma.nd_documentOrderByRelevanceFieldEnum = {
  document_number: 'document_number',
  document_status: 'document_status',
  judul: 'judul',
  dari: 'dari',
  kepada: 'kepada',
  keterangan: 'keterangan',
  penanggung_jawab: 'penanggung_jawab',
  username: 'username'
};

exports.Prisma.nd_document_controlOrderByRelevanceFieldEnum = {
  tipe_dokumen: 'tipe_dokumen',
  kode: 'kode',
  nama: 'nama',
  keterangan: 'keterangan'
};

exports.Prisma.nd_gudangOrderByRelevanceFieldEnum = {
  nama: 'nama',
  lokasi: 'lokasi'
};

exports.Prisma.nd_posisiOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.nd_satuanOrderByRelevanceFieldEnum = {
  nama: 'nama'
};

exports.Prisma.nd_supplierOrderByRelevanceFieldEnum = {
  kode: 'kode',
  nama: 'nama',
  alamat: 'alamat',
  telepon: 'telepon',
  kota: 'kota',
  fax: 'fax',
  kode_pos: 'kode_pos',
  nama_bank: 'nama_bank',
  no_rek_bank: 'no_rek_bank',
  email: 'email',
  website: 'website'
};

exports.Prisma.nd_tokoOrderByRelevanceFieldEnum = {
  nama: 'nama',
  alias: 'alias',
  alamat: 'alamat',
  telepon: 'telepon',
  email: 'email',
  fax: 'fax',
  kota: 'kota',
  kode_pos: 'kode_pos',
  NPWP: 'NPWP',
  pre_faktur: 'pre_faktur',
  kode_toko: 'kode_toko',
  nama_domain: 'nama_domain',
  email_pajak: 'email_pajak'
};

exports.Prisma.nd_userOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  roles: 'roles',
  nama: 'nama',
  alamat: 'alamat',
  telepon: 'telepon',
  jenis_kelamin: 'jenis_kelamin',
  kota_lahir: 'kota_lahir',
  status_perkawinan: 'status_perkawinan',
  agama: 'agama',
  nik: 'nik',
  npwp: 'npwp',
  profile_picture: 'profile_picture',
  ktp_picture: 'ktp_picture',
  npwp_picture: 'npwp_picture',
  PIN: 'PIN'
};

exports.Prisma.nd_warnaOrderByRelevanceFieldEnum = {
  warna_beli: 'warna_beli',
  warna_jual: 'warna_jual',
  kode_warna: 'kode_warna'
};

exports.Prisma.query_logOrderByRelevanceFieldEnum = {
  table_name: 'table_name',
  query: 'query',
  params: 'params',
  username: 'username'
};

exports.Prisma.user_logOrderByRelevanceFieldEnum = {
  activity: 'activity'
};


exports.Prisma.ModelName = {
  nd_barang: 'nd_barang',
  nd_barang_bahan: 'nd_barang_bahan',
  nd_barang_beli: 'nd_barang_beli',
  nd_barang_fitur: 'nd_barang_fitur',
  nd_barang_grade: 'nd_barang_grade',
  nd_barang_sku: 'nd_barang_sku',
  nd_barang_tipe: 'nd_barang_tipe',
  nd_customer: 'nd_customer',
  nd_department: 'nd_department',
  nd_document: 'nd_document',
  nd_document_control: 'nd_document_control',
  nd_gudang: 'nd_gudang',
  nd_posisi: 'nd_posisi',
  nd_satuan: 'nd_satuan',
  nd_supplier: 'nd_supplier',
  nd_toko: 'nd_toko',
  nd_toko_barang_assignment: 'nd_toko_barang_assignment',
  nd_toko_user: 'nd_toko_user',
  nd_user: 'nd_user',
  nd_warna: 'nd_warna',
  query_log: 'query_log',
  user_log: 'user_log'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
