
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model nd_barang
 * 
 */
export type nd_barang = $Result.DefaultSelection<Prisma.$nd_barangPayload>
/**
 * Model nd_barang_bahan
 * 
 */
export type nd_barang_bahan = $Result.DefaultSelection<Prisma.$nd_barang_bahanPayload>
/**
 * Model nd_barang_beli
 * 
 */
export type nd_barang_beli = $Result.DefaultSelection<Prisma.$nd_barang_beliPayload>
/**
 * Model nd_barang_fitur
 * 
 */
export type nd_barang_fitur = $Result.DefaultSelection<Prisma.$nd_barang_fiturPayload>
/**
 * Model nd_barang_grade
 * 
 */
export type nd_barang_grade = $Result.DefaultSelection<Prisma.$nd_barang_gradePayload>
/**
 * Model nd_barang_sku
 * 
 */
export type nd_barang_sku = $Result.DefaultSelection<Prisma.$nd_barang_skuPayload>
/**
 * Model nd_barang_tipe
 * 
 */
export type nd_barang_tipe = $Result.DefaultSelection<Prisma.$nd_barang_tipePayload>
/**
 * Model nd_customer
 * 
 */
export type nd_customer = $Result.DefaultSelection<Prisma.$nd_customerPayload>
/**
 * Model nd_department
 * 
 */
export type nd_department = $Result.DefaultSelection<Prisma.$nd_departmentPayload>
/**
 * Model nd_document
 * 
 */
export type nd_document = $Result.DefaultSelection<Prisma.$nd_documentPayload>
/**
 * Model nd_document_control
 * 
 */
export type nd_document_control = $Result.DefaultSelection<Prisma.$nd_document_controlPayload>
/**
 * Model nd_gudang
 * 
 */
export type nd_gudang = $Result.DefaultSelection<Prisma.$nd_gudangPayload>
/**
 * Model nd_posisi
 * 
 */
export type nd_posisi = $Result.DefaultSelection<Prisma.$nd_posisiPayload>
/**
 * Model nd_satuan
 * 
 */
export type nd_satuan = $Result.DefaultSelection<Prisma.$nd_satuanPayload>
/**
 * Model nd_supplier
 * 
 */
export type nd_supplier = $Result.DefaultSelection<Prisma.$nd_supplierPayload>
/**
 * Model nd_toko
 * 
 */
export type nd_toko = $Result.DefaultSelection<Prisma.$nd_tokoPayload>
/**
 * Model nd_toko_barang_assignment
 * 
 */
export type nd_toko_barang_assignment = $Result.DefaultSelection<Prisma.$nd_toko_barang_assignmentPayload>
/**
 * Model nd_toko_user
 * 
 */
export type nd_toko_user = $Result.DefaultSelection<Prisma.$nd_toko_userPayload>
/**
 * Model nd_user
 * 
 */
export type nd_user = $Result.DefaultSelection<Prisma.$nd_userPayload>
/**
 * Model nd_warna
 * 
 */
export type nd_warna = $Result.DefaultSelection<Prisma.$nd_warnaPayload>
/**
 * Model query_log
 * 
 */
export type query_log = $Result.DefaultSelection<Prisma.$query_logPayload>
/**
 * Model user_log
 * 
 */
export type user_log = $Result.DefaultSelection<Prisma.$user_logPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Nd_barangs
 * const nd_barangs = await prisma.nd_barang.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Nd_barangs
   * const nd_barangs = await prisma.nd_barang.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.nd_barang`: Exposes CRUD operations for the **nd_barang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barangs
    * const nd_barangs = await prisma.nd_barang.findMany()
    * ```
    */
  get nd_barang(): Prisma.nd_barangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_bahan`: Exposes CRUD operations for the **nd_barang_bahan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_bahans
    * const nd_barang_bahans = await prisma.nd_barang_bahan.findMany()
    * ```
    */
  get nd_barang_bahan(): Prisma.nd_barang_bahanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_beli`: Exposes CRUD operations for the **nd_barang_beli** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_belis
    * const nd_barang_belis = await prisma.nd_barang_beli.findMany()
    * ```
    */
  get nd_barang_beli(): Prisma.nd_barang_beliDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_fitur`: Exposes CRUD operations for the **nd_barang_fitur** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_fiturs
    * const nd_barang_fiturs = await prisma.nd_barang_fitur.findMany()
    * ```
    */
  get nd_barang_fitur(): Prisma.nd_barang_fiturDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_grade`: Exposes CRUD operations for the **nd_barang_grade** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_grades
    * const nd_barang_grades = await prisma.nd_barang_grade.findMany()
    * ```
    */
  get nd_barang_grade(): Prisma.nd_barang_gradeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_sku`: Exposes CRUD operations for the **nd_barang_sku** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_skus
    * const nd_barang_skus = await prisma.nd_barang_sku.findMany()
    * ```
    */
  get nd_barang_sku(): Prisma.nd_barang_skuDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_barang_tipe`: Exposes CRUD operations for the **nd_barang_tipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_barang_tipes
    * const nd_barang_tipes = await prisma.nd_barang_tipe.findMany()
    * ```
    */
  get nd_barang_tipe(): Prisma.nd_barang_tipeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_customer`: Exposes CRUD operations for the **nd_customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_customers
    * const nd_customers = await prisma.nd_customer.findMany()
    * ```
    */
  get nd_customer(): Prisma.nd_customerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_department`: Exposes CRUD operations for the **nd_department** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_departments
    * const nd_departments = await prisma.nd_department.findMany()
    * ```
    */
  get nd_department(): Prisma.nd_departmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_document`: Exposes CRUD operations for the **nd_document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_documents
    * const nd_documents = await prisma.nd_document.findMany()
    * ```
    */
  get nd_document(): Prisma.nd_documentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_document_control`: Exposes CRUD operations for the **nd_document_control** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_document_controls
    * const nd_document_controls = await prisma.nd_document_control.findMany()
    * ```
    */
  get nd_document_control(): Prisma.nd_document_controlDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_gudang`: Exposes CRUD operations for the **nd_gudang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_gudangs
    * const nd_gudangs = await prisma.nd_gudang.findMany()
    * ```
    */
  get nd_gudang(): Prisma.nd_gudangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_posisi`: Exposes CRUD operations for the **nd_posisi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_posisis
    * const nd_posisis = await prisma.nd_posisi.findMany()
    * ```
    */
  get nd_posisi(): Prisma.nd_posisiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_satuan`: Exposes CRUD operations for the **nd_satuan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_satuans
    * const nd_satuans = await prisma.nd_satuan.findMany()
    * ```
    */
  get nd_satuan(): Prisma.nd_satuanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_supplier`: Exposes CRUD operations for the **nd_supplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_suppliers
    * const nd_suppliers = await prisma.nd_supplier.findMany()
    * ```
    */
  get nd_supplier(): Prisma.nd_supplierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_toko`: Exposes CRUD operations for the **nd_toko** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_tokos
    * const nd_tokos = await prisma.nd_toko.findMany()
    * ```
    */
  get nd_toko(): Prisma.nd_tokoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_toko_barang_assignment`: Exposes CRUD operations for the **nd_toko_barang_assignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_toko_barang_assignments
    * const nd_toko_barang_assignments = await prisma.nd_toko_barang_assignment.findMany()
    * ```
    */
  get nd_toko_barang_assignment(): Prisma.nd_toko_barang_assignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_toko_user`: Exposes CRUD operations for the **nd_toko_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_toko_users
    * const nd_toko_users = await prisma.nd_toko_user.findMany()
    * ```
    */
  get nd_toko_user(): Prisma.nd_toko_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_user`: Exposes CRUD operations for the **nd_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_users
    * const nd_users = await prisma.nd_user.findMany()
    * ```
    */
  get nd_user(): Prisma.nd_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.nd_warna`: Exposes CRUD operations for the **nd_warna** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nd_warnas
    * const nd_warnas = await prisma.nd_warna.findMany()
    * ```
    */
  get nd_warna(): Prisma.nd_warnaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.query_log`: Exposes CRUD operations for the **query_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Query_logs
    * const query_logs = await prisma.query_log.findMany()
    * ```
    */
  get query_log(): Prisma.query_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_log`: Exposes CRUD operations for the **user_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_logs
    * const user_logs = await prisma.user_log.findMany()
    * ```
    */
  get user_log(): Prisma.user_logDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    nd_barang: 'nd_barang',
    nd_barang_bahan: 'nd_barang_bahan',
    nd_barang_beli: 'nd_barang_beli',
    nd_barang_fitur: 'nd_barang_fitur',
    nd_barang_grade: 'nd_barang_grade',
    nd_barang_sku: 'nd_barang_sku',
    nd_barang_tipe: 'nd_barang_tipe',
    nd_customer: 'nd_customer',
    nd_department: 'nd_department',
    nd_document: 'nd_document',
    nd_document_control: 'nd_document_control',
    nd_gudang: 'nd_gudang',
    nd_posisi: 'nd_posisi',
    nd_satuan: 'nd_satuan',
    nd_supplier: 'nd_supplier',
    nd_toko: 'nd_toko',
    nd_toko_barang_assignment: 'nd_toko_barang_assignment',
    nd_toko_user: 'nd_toko_user',
    nd_user: 'nd_user',
    nd_warna: 'nd_warna',
    query_log: 'query_log',
    user_log: 'user_log'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "nd_barang" | "nd_barang_bahan" | "nd_barang_beli" | "nd_barang_fitur" | "nd_barang_grade" | "nd_barang_sku" | "nd_barang_tipe" | "nd_customer" | "nd_department" | "nd_document" | "nd_document_control" | "nd_gudang" | "nd_posisi" | "nd_satuan" | "nd_supplier" | "nd_toko" | "nd_toko_barang_assignment" | "nd_toko_user" | "nd_user" | "nd_warna" | "query_log" | "user_log"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      nd_barang: {
        payload: Prisma.$nd_barangPayload<ExtArgs>
        fields: Prisma.nd_barangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          findFirst: {
            args: Prisma.nd_barangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          findMany: {
            args: Prisma.nd_barangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>[]
          }
          create: {
            args: Prisma.nd_barangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          createMany: {
            args: Prisma.nd_barangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          update: {
            args: Prisma.nd_barangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          deleteMany: {
            args: Prisma.nd_barangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barangPayload>
          }
          aggregate: {
            args: Prisma.Nd_barangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang>
          }
          groupBy: {
            args: Prisma.nd_barangGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barangGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barangCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barangCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_bahan: {
        payload: Prisma.$nd_barang_bahanPayload<ExtArgs>
        fields: Prisma.nd_barang_bahanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_bahanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_bahanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          findFirst: {
            args: Prisma.nd_barang_bahanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_bahanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          findMany: {
            args: Prisma.nd_barang_bahanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>[]
          }
          create: {
            args: Prisma.nd_barang_bahanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          createMany: {
            args: Prisma.nd_barang_bahanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_bahanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          update: {
            args: Prisma.nd_barang_bahanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_bahanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_bahanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_bahanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_bahanPayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_bahanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_bahan>
          }
          groupBy: {
            args: Prisma.nd_barang_bahanGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_bahanGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_bahanCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_bahanCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_beli: {
        payload: Prisma.$nd_barang_beliPayload<ExtArgs>
        fields: Prisma.nd_barang_beliFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_beliFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_beliFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          findFirst: {
            args: Prisma.nd_barang_beliFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_beliFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          findMany: {
            args: Prisma.nd_barang_beliFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>[]
          }
          create: {
            args: Prisma.nd_barang_beliCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          createMany: {
            args: Prisma.nd_barang_beliCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_beliDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          update: {
            args: Prisma.nd_barang_beliUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_beliDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_beliUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_beliUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_beliPayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_beliAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_beli>
          }
          groupBy: {
            args: Prisma.nd_barang_beliGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_beliGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_beliCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_beliCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_fitur: {
        payload: Prisma.$nd_barang_fiturPayload<ExtArgs>
        fields: Prisma.nd_barang_fiturFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_fiturFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_fiturFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          findFirst: {
            args: Prisma.nd_barang_fiturFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_fiturFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          findMany: {
            args: Prisma.nd_barang_fiturFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>[]
          }
          create: {
            args: Prisma.nd_barang_fiturCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          createMany: {
            args: Prisma.nd_barang_fiturCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_fiturDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          update: {
            args: Prisma.nd_barang_fiturUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_fiturDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_fiturUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_fiturUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_fiturPayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_fiturAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_fitur>
          }
          groupBy: {
            args: Prisma.nd_barang_fiturGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_fiturGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_fiturCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_fiturCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_grade: {
        payload: Prisma.$nd_barang_gradePayload<ExtArgs>
        fields: Prisma.nd_barang_gradeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_gradeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_gradeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          findFirst: {
            args: Prisma.nd_barang_gradeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_gradeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          findMany: {
            args: Prisma.nd_barang_gradeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>[]
          }
          create: {
            args: Prisma.nd_barang_gradeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          createMany: {
            args: Prisma.nd_barang_gradeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_gradeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          update: {
            args: Prisma.nd_barang_gradeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_gradeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_gradeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_gradeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_gradePayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_gradeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_grade>
          }
          groupBy: {
            args: Prisma.nd_barang_gradeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_gradeGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_gradeCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_gradeCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_sku: {
        payload: Prisma.$nd_barang_skuPayload<ExtArgs>
        fields: Prisma.nd_barang_skuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_skuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_skuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          findFirst: {
            args: Prisma.nd_barang_skuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_skuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          findMany: {
            args: Prisma.nd_barang_skuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>[]
          }
          create: {
            args: Prisma.nd_barang_skuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          createMany: {
            args: Prisma.nd_barang_skuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_skuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          update: {
            args: Prisma.nd_barang_skuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_skuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_skuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_skuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_skuPayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_skuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_sku>
          }
          groupBy: {
            args: Prisma.nd_barang_skuGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_skuGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_skuCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_skuCountAggregateOutputType> | number
          }
        }
      }
      nd_barang_tipe: {
        payload: Prisma.$nd_barang_tipePayload<ExtArgs>
        fields: Prisma.nd_barang_tipeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_barang_tipeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_barang_tipeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          findFirst: {
            args: Prisma.nd_barang_tipeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_barang_tipeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          findMany: {
            args: Prisma.nd_barang_tipeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>[]
          }
          create: {
            args: Prisma.nd_barang_tipeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          createMany: {
            args: Prisma.nd_barang_tipeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_barang_tipeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          update: {
            args: Prisma.nd_barang_tipeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          deleteMany: {
            args: Prisma.nd_barang_tipeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_barang_tipeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_barang_tipeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_barang_tipePayload>
          }
          aggregate: {
            args: Prisma.Nd_barang_tipeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_barang_tipe>
          }
          groupBy: {
            args: Prisma.nd_barang_tipeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_tipeGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_barang_tipeCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_barang_tipeCountAggregateOutputType> | number
          }
        }
      }
      nd_customer: {
        payload: Prisma.$nd_customerPayload<ExtArgs>
        fields: Prisma.nd_customerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_customerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_customerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          findFirst: {
            args: Prisma.nd_customerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_customerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          findMany: {
            args: Prisma.nd_customerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>[]
          }
          create: {
            args: Prisma.nd_customerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          createMany: {
            args: Prisma.nd_customerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_customerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          update: {
            args: Prisma.nd_customerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          deleteMany: {
            args: Prisma.nd_customerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_customerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_customerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_customerPayload>
          }
          aggregate: {
            args: Prisma.Nd_customerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_customer>
          }
          groupBy: {
            args: Prisma.nd_customerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_customerGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_customerCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_customerCountAggregateOutputType> | number
          }
        }
      }
      nd_department: {
        payload: Prisma.$nd_departmentPayload<ExtArgs>
        fields: Prisma.nd_departmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_departmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_departmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          findFirst: {
            args: Prisma.nd_departmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_departmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          findMany: {
            args: Prisma.nd_departmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>[]
          }
          create: {
            args: Prisma.nd_departmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          createMany: {
            args: Prisma.nd_departmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_departmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          update: {
            args: Prisma.nd_departmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          deleteMany: {
            args: Prisma.nd_departmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_departmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_departmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_departmentPayload>
          }
          aggregate: {
            args: Prisma.Nd_departmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_department>
          }
          groupBy: {
            args: Prisma.nd_departmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_departmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_departmentCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_departmentCountAggregateOutputType> | number
          }
        }
      }
      nd_document: {
        payload: Prisma.$nd_documentPayload<ExtArgs>
        fields: Prisma.nd_documentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_documentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_documentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          findFirst: {
            args: Prisma.nd_documentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_documentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          findMany: {
            args: Prisma.nd_documentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>[]
          }
          create: {
            args: Prisma.nd_documentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          createMany: {
            args: Prisma.nd_documentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_documentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          update: {
            args: Prisma.nd_documentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          deleteMany: {
            args: Prisma.nd_documentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_documentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_documentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_documentPayload>
          }
          aggregate: {
            args: Prisma.Nd_documentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_document>
          }
          groupBy: {
            args: Prisma.nd_documentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_documentGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_documentCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_documentCountAggregateOutputType> | number
          }
        }
      }
      nd_document_control: {
        payload: Prisma.$nd_document_controlPayload<ExtArgs>
        fields: Prisma.nd_document_controlFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_document_controlFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_document_controlFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          findFirst: {
            args: Prisma.nd_document_controlFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_document_controlFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          findMany: {
            args: Prisma.nd_document_controlFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>[]
          }
          create: {
            args: Prisma.nd_document_controlCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          createMany: {
            args: Prisma.nd_document_controlCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_document_controlDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          update: {
            args: Prisma.nd_document_controlUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          deleteMany: {
            args: Prisma.nd_document_controlDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_document_controlUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_document_controlUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_document_controlPayload>
          }
          aggregate: {
            args: Prisma.Nd_document_controlAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_document_control>
          }
          groupBy: {
            args: Prisma.nd_document_controlGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_document_controlGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_document_controlCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_document_controlCountAggregateOutputType> | number
          }
        }
      }
      nd_gudang: {
        payload: Prisma.$nd_gudangPayload<ExtArgs>
        fields: Prisma.nd_gudangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_gudangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_gudangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          findFirst: {
            args: Prisma.nd_gudangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_gudangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          findMany: {
            args: Prisma.nd_gudangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>[]
          }
          create: {
            args: Prisma.nd_gudangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          createMany: {
            args: Prisma.nd_gudangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_gudangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          update: {
            args: Prisma.nd_gudangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          deleteMany: {
            args: Prisma.nd_gudangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_gudangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_gudangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_gudangPayload>
          }
          aggregate: {
            args: Prisma.Nd_gudangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_gudang>
          }
          groupBy: {
            args: Prisma.nd_gudangGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_gudangGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_gudangCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_gudangCountAggregateOutputType> | number
          }
        }
      }
      nd_posisi: {
        payload: Prisma.$nd_posisiPayload<ExtArgs>
        fields: Prisma.nd_posisiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_posisiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_posisiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          findFirst: {
            args: Prisma.nd_posisiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_posisiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          findMany: {
            args: Prisma.nd_posisiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>[]
          }
          create: {
            args: Prisma.nd_posisiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          createMany: {
            args: Prisma.nd_posisiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_posisiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          update: {
            args: Prisma.nd_posisiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          deleteMany: {
            args: Prisma.nd_posisiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_posisiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_posisiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_posisiPayload>
          }
          aggregate: {
            args: Prisma.Nd_posisiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_posisi>
          }
          groupBy: {
            args: Prisma.nd_posisiGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_posisiGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_posisiCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_posisiCountAggregateOutputType> | number
          }
        }
      }
      nd_satuan: {
        payload: Prisma.$nd_satuanPayload<ExtArgs>
        fields: Prisma.nd_satuanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_satuanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_satuanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          findFirst: {
            args: Prisma.nd_satuanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_satuanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          findMany: {
            args: Prisma.nd_satuanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>[]
          }
          create: {
            args: Prisma.nd_satuanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          createMany: {
            args: Prisma.nd_satuanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_satuanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          update: {
            args: Prisma.nd_satuanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          deleteMany: {
            args: Prisma.nd_satuanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_satuanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_satuanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_satuanPayload>
          }
          aggregate: {
            args: Prisma.Nd_satuanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_satuan>
          }
          groupBy: {
            args: Prisma.nd_satuanGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_satuanGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_satuanCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_satuanCountAggregateOutputType> | number
          }
        }
      }
      nd_supplier: {
        payload: Prisma.$nd_supplierPayload<ExtArgs>
        fields: Prisma.nd_supplierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_supplierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_supplierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          findFirst: {
            args: Prisma.nd_supplierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_supplierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          findMany: {
            args: Prisma.nd_supplierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>[]
          }
          create: {
            args: Prisma.nd_supplierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          createMany: {
            args: Prisma.nd_supplierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_supplierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          update: {
            args: Prisma.nd_supplierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          deleteMany: {
            args: Prisma.nd_supplierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_supplierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_supplierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_supplierPayload>
          }
          aggregate: {
            args: Prisma.Nd_supplierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_supplier>
          }
          groupBy: {
            args: Prisma.nd_supplierGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_supplierGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_supplierCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_supplierCountAggregateOutputType> | number
          }
        }
      }
      nd_toko: {
        payload: Prisma.$nd_tokoPayload<ExtArgs>
        fields: Prisma.nd_tokoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_tokoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_tokoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          findFirst: {
            args: Prisma.nd_tokoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_tokoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          findMany: {
            args: Prisma.nd_tokoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>[]
          }
          create: {
            args: Prisma.nd_tokoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          createMany: {
            args: Prisma.nd_tokoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_tokoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          update: {
            args: Prisma.nd_tokoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          deleteMany: {
            args: Prisma.nd_tokoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_tokoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_tokoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_tokoPayload>
          }
          aggregate: {
            args: Prisma.Nd_tokoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_toko>
          }
          groupBy: {
            args: Prisma.nd_tokoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_tokoGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_tokoCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_tokoCountAggregateOutputType> | number
          }
        }
      }
      nd_toko_barang_assignment: {
        payload: Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>
        fields: Prisma.nd_toko_barang_assignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_toko_barang_assignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_toko_barang_assignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          findFirst: {
            args: Prisma.nd_toko_barang_assignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_toko_barang_assignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          findMany: {
            args: Prisma.nd_toko_barang_assignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>[]
          }
          create: {
            args: Prisma.nd_toko_barang_assignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          createMany: {
            args: Prisma.nd_toko_barang_assignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_toko_barang_assignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          update: {
            args: Prisma.nd_toko_barang_assignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          deleteMany: {
            args: Prisma.nd_toko_barang_assignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_toko_barang_assignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_toko_barang_assignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_barang_assignmentPayload>
          }
          aggregate: {
            args: Prisma.Nd_toko_barang_assignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_toko_barang_assignment>
          }
          groupBy: {
            args: Prisma.nd_toko_barang_assignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_toko_barang_assignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_toko_barang_assignmentCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_toko_barang_assignmentCountAggregateOutputType> | number
          }
        }
      }
      nd_toko_user: {
        payload: Prisma.$nd_toko_userPayload<ExtArgs>
        fields: Prisma.nd_toko_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_toko_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_toko_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          findFirst: {
            args: Prisma.nd_toko_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_toko_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          findMany: {
            args: Prisma.nd_toko_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>[]
          }
          create: {
            args: Prisma.nd_toko_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          createMany: {
            args: Prisma.nd_toko_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_toko_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          update: {
            args: Prisma.nd_toko_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          deleteMany: {
            args: Prisma.nd_toko_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_toko_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_toko_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_toko_userPayload>
          }
          aggregate: {
            args: Prisma.Nd_toko_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_toko_user>
          }
          groupBy: {
            args: Prisma.nd_toko_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_toko_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_toko_userCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_toko_userCountAggregateOutputType> | number
          }
        }
      }
      nd_user: {
        payload: Prisma.$nd_userPayload<ExtArgs>
        fields: Prisma.nd_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          findFirst: {
            args: Prisma.nd_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          findMany: {
            args: Prisma.nd_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>[]
          }
          create: {
            args: Prisma.nd_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          createMany: {
            args: Prisma.nd_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          update: {
            args: Prisma.nd_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          deleteMany: {
            args: Prisma.nd_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_userPayload>
          }
          aggregate: {
            args: Prisma.Nd_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_user>
          }
          groupBy: {
            args: Prisma.nd_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_userCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_userCountAggregateOutputType> | number
          }
        }
      }
      nd_warna: {
        payload: Prisma.$nd_warnaPayload<ExtArgs>
        fields: Prisma.nd_warnaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.nd_warnaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.nd_warnaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          findFirst: {
            args: Prisma.nd_warnaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.nd_warnaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          findMany: {
            args: Prisma.nd_warnaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>[]
          }
          create: {
            args: Prisma.nd_warnaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          createMany: {
            args: Prisma.nd_warnaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.nd_warnaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          update: {
            args: Prisma.nd_warnaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          deleteMany: {
            args: Prisma.nd_warnaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.nd_warnaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.nd_warnaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$nd_warnaPayload>
          }
          aggregate: {
            args: Prisma.Nd_warnaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNd_warna>
          }
          groupBy: {
            args: Prisma.nd_warnaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Nd_warnaGroupByOutputType>[]
          }
          count: {
            args: Prisma.nd_warnaCountArgs<ExtArgs>
            result: $Utils.Optional<Nd_warnaCountAggregateOutputType> | number
          }
        }
      }
      query_log: {
        payload: Prisma.$query_logPayload<ExtArgs>
        fields: Prisma.query_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.query_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.query_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          findFirst: {
            args: Prisma.query_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.query_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          findMany: {
            args: Prisma.query_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>[]
          }
          create: {
            args: Prisma.query_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          createMany: {
            args: Prisma.query_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.query_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          update: {
            args: Prisma.query_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          deleteMany: {
            args: Prisma.query_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.query_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.query_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$query_logPayload>
          }
          aggregate: {
            args: Prisma.Query_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQuery_log>
          }
          groupBy: {
            args: Prisma.query_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Query_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.query_logCountArgs<ExtArgs>
            result: $Utils.Optional<Query_logCountAggregateOutputType> | number
          }
        }
      }
      user_log: {
        payload: Prisma.$user_logPayload<ExtArgs>
        fields: Prisma.user_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          findFirst: {
            args: Prisma.user_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          findMany: {
            args: Prisma.user_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>[]
          }
          create: {
            args: Prisma.user_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          createMany: {
            args: Prisma.user_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          update: {
            args: Prisma.user_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          deleteMany: {
            args: Prisma.user_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_logPayload>
          }
          aggregate: {
            args: Prisma.User_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_log>
          }
          groupBy: {
            args: Prisma.user_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_logCountArgs<ExtArgs>
            result: $Utils.Optional<User_logCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    nd_barang?: nd_barangOmit
    nd_barang_bahan?: nd_barang_bahanOmit
    nd_barang_beli?: nd_barang_beliOmit
    nd_barang_fitur?: nd_barang_fiturOmit
    nd_barang_grade?: nd_barang_gradeOmit
    nd_barang_sku?: nd_barang_skuOmit
    nd_barang_tipe?: nd_barang_tipeOmit
    nd_customer?: nd_customerOmit
    nd_department?: nd_departmentOmit
    nd_document?: nd_documentOmit
    nd_document_control?: nd_document_controlOmit
    nd_gudang?: nd_gudangOmit
    nd_posisi?: nd_posisiOmit
    nd_satuan?: nd_satuanOmit
    nd_supplier?: nd_supplierOmit
    nd_toko?: nd_tokoOmit
    nd_toko_barang_assignment?: nd_toko_barang_assignmentOmit
    nd_toko_user?: nd_toko_userOmit
    nd_user?: nd_userOmit
    nd_warna?: nd_warnaOmit
    query_log?: query_logOmit
    user_log?: user_logOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Nd_posisiCountOutputType
   */

  export type Nd_posisiCountOutputType = {
    nd_user: number
  }

  export type Nd_posisiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_user?: boolean | Nd_posisiCountOutputTypeCountNd_userArgs
  }

  // Custom InputTypes
  /**
   * Nd_posisiCountOutputType without action
   */
  export type Nd_posisiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nd_posisiCountOutputType
     */
    select?: Nd_posisiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Nd_posisiCountOutputType without action
   */
  export type Nd_posisiCountOutputTypeCountNd_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_userWhereInput
  }


  /**
   * Count Type Nd_satuanCountOutputType
   */

  export type Nd_satuanCountOutputType = {
    nd_barang: number
  }

  export type Nd_satuanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_barang?: boolean | Nd_satuanCountOutputTypeCountNd_barangArgs
  }

  // Custom InputTypes
  /**
   * Nd_satuanCountOutputType without action
   */
  export type Nd_satuanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nd_satuanCountOutputType
     */
    select?: Nd_satuanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Nd_satuanCountOutputType without action
   */
  export type Nd_satuanCountOutputTypeCountNd_barangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barangWhereInput
  }


  /**
   * Models
   */

  /**
   * Model nd_barang
   */

  export type AggregateNd_barang = {
    _count: Nd_barangCountAggregateOutputType | null
    _avg: Nd_barangAvgAggregateOutputType | null
    _sum: Nd_barangSumAggregateOutputType | null
    _min: Nd_barangMinAggregateOutputType | null
    _max: Nd_barangMaxAggregateOutputType | null
  }

  export type Nd_barangAvgAggregateOutputType = {
    id: number | null
    satuan_id: number | null
    qty_warning: number | null
    status_aktif: number | null
  }

  export type Nd_barangSumAggregateOutputType = {
    id: number | null
    satuan_id: number | null
    qty_warning: number | null
    status_aktif: number | null
  }

  export type Nd_barangMinAggregateOutputType = {
    id: number | null
    jenis_barang: string | null
    nama_jual: string | null
    satuan_id: number | null
    qty_warning: number | null
    deskripsi_info: string | null
    status_aktif: number | null
    tipe_qty: boolean | null
    grade: string | null
    bahan: string | null
    fitur: string | null
    tipe: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barangMaxAggregateOutputType = {
    id: number | null
    jenis_barang: string | null
    nama_jual: string | null
    satuan_id: number | null
    qty_warning: number | null
    deskripsi_info: string | null
    status_aktif: number | null
    tipe_qty: boolean | null
    grade: string | null
    bahan: string | null
    fitur: string | null
    tipe: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barangCountAggregateOutputType = {
    id: number
    jenis_barang: number
    nama_jual: number
    satuan_id: number
    qty_warning: number
    deskripsi_info: number
    status_aktif: number
    tipe_qty: number
    grade: number
    bahan: number
    fitur: number
    tipe: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_barangAvgAggregateInputType = {
    id?: true
    satuan_id?: true
    qty_warning?: true
    status_aktif?: true
  }

  export type Nd_barangSumAggregateInputType = {
    id?: true
    satuan_id?: true
    qty_warning?: true
    status_aktif?: true
  }

  export type Nd_barangMinAggregateInputType = {
    id?: true
    jenis_barang?: true
    nama_jual?: true
    satuan_id?: true
    qty_warning?: true
    deskripsi_info?: true
    status_aktif?: true
    tipe_qty?: true
    grade?: true
    bahan?: true
    fitur?: true
    tipe?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barangMaxAggregateInputType = {
    id?: true
    jenis_barang?: true
    nama_jual?: true
    satuan_id?: true
    qty_warning?: true
    deskripsi_info?: true
    status_aktif?: true
    tipe_qty?: true
    grade?: true
    bahan?: true
    fitur?: true
    tipe?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barangCountAggregateInputType = {
    id?: true
    jenis_barang?: true
    nama_jual?: true
    satuan_id?: true
    qty_warning?: true
    deskripsi_info?: true
    status_aktif?: true
    tipe_qty?: true
    grade?: true
    bahan?: true
    fitur?: true
    tipe?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_barangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang to aggregate.
     */
    where?: nd_barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barangs to fetch.
     */
    orderBy?: nd_barangOrderByWithRelationInput | nd_barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barangs
    **/
    _count?: true | Nd_barangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barangAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barangSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barangMaxAggregateInputType
  }

  export type GetNd_barangAggregateType<T extends Nd_barangAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang[P]>
      : GetScalarType<T[P], AggregateNd_barang[P]>
  }




  export type nd_barangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barangWhereInput
    orderBy?: nd_barangOrderByWithAggregationInput | nd_barangOrderByWithAggregationInput[]
    by: Nd_barangScalarFieldEnum[] | Nd_barangScalarFieldEnum
    having?: nd_barangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barangCountAggregateInputType | true
    _avg?: Nd_barangAvgAggregateInputType
    _sum?: Nd_barangSumAggregateInputType
    _min?: Nd_barangMinAggregateInputType
    _max?: Nd_barangMaxAggregateInputType
  }

  export type Nd_barangGroupByOutputType = {
    id: number
    jenis_barang: string | null
    nama_jual: string | null
    satuan_id: number | null
    qty_warning: number
    deskripsi_info: string | null
    status_aktif: number | null
    tipe_qty: boolean | null
    grade: string | null
    bahan: string | null
    fitur: string | null
    tipe: string | null
    created_at: Date
    updated_at: Date
    _count: Nd_barangCountAggregateOutputType | null
    _avg: Nd_barangAvgAggregateOutputType | null
    _sum: Nd_barangSumAggregateOutputType | null
    _min: Nd_barangMinAggregateOutputType | null
    _max: Nd_barangMaxAggregateOutputType | null
  }

  type GetNd_barangGroupByPayload<T extends nd_barangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barangGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barangGroupByOutputType[P]>
        }
      >
    >


  export type nd_barangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    jenis_barang?: boolean
    nama_jual?: boolean
    satuan_id?: boolean
    qty_warning?: boolean
    deskripsi_info?: boolean
    status_aktif?: boolean
    tipe_qty?: boolean
    grade?: boolean
    bahan?: boolean
    fitur?: boolean
    tipe?: boolean
    created_at?: boolean
    updated_at?: boolean
    nd_satuan?: boolean | nd_barang$nd_satuanArgs<ExtArgs>
  }, ExtArgs["result"]["nd_barang"]>



  export type nd_barangSelectScalar = {
    id?: boolean
    jenis_barang?: boolean
    nama_jual?: boolean
    satuan_id?: boolean
    qty_warning?: boolean
    deskripsi_info?: boolean
    status_aktif?: boolean
    tipe_qty?: boolean
    grade?: boolean
    bahan?: boolean
    fitur?: boolean
    tipe?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_barangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "jenis_barang" | "nama_jual" | "satuan_id" | "qty_warning" | "deskripsi_info" | "status_aktif" | "tipe_qty" | "grade" | "bahan" | "fitur" | "tipe" | "created_at" | "updated_at", ExtArgs["result"]["nd_barang"]>
  export type nd_barangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_satuan?: boolean | nd_barang$nd_satuanArgs<ExtArgs>
  }

  export type $nd_barangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang"
    objects: {
      nd_satuan: Prisma.$nd_satuanPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      jenis_barang: string | null
      nama_jual: string | null
      satuan_id: number | null
      qty_warning: number
      deskripsi_info: string | null
      status_aktif: number | null
      tipe_qty: boolean | null
      grade: string | null
      bahan: string | null
      fitur: string | null
      tipe: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_barang"]>
    composites: {}
  }

  type nd_barangGetPayload<S extends boolean | null | undefined | nd_barangDefaultArgs> = $Result.GetResult<Prisma.$nd_barangPayload, S>

  type nd_barangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barangCountAggregateInputType | true
    }

  export interface nd_barangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang'], meta: { name: 'nd_barang' } }
    /**
     * Find zero or one Nd_barang that matches the filter.
     * @param {nd_barangFindUniqueArgs} args - Arguments to find a Nd_barang
     * @example
     * // Get one Nd_barang
     * const nd_barang = await prisma.nd_barang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barangFindUniqueArgs>(args: SelectSubset<T, nd_barangFindUniqueArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barangFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang
     * @example
     * // Get one Nd_barang
     * const nd_barang = await prisma.nd_barang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barangFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangFindFirstArgs} args - Arguments to find a Nd_barang
     * @example
     * // Get one Nd_barang
     * const nd_barang = await prisma.nd_barang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barangFindFirstArgs>(args?: SelectSubset<T, nd_barangFindFirstArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangFindFirstOrThrowArgs} args - Arguments to find a Nd_barang
     * @example
     * // Get one Nd_barang
     * const nd_barang = await prisma.nd_barang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barangFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barangFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barangs
     * const nd_barangs = await prisma.nd_barang.findMany()
     * 
     * // Get first 10 Nd_barangs
     * const nd_barangs = await prisma.nd_barang.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barangWithIdOnly = await prisma.nd_barang.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barangFindManyArgs>(args?: SelectSubset<T, nd_barangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang.
     * @param {nd_barangCreateArgs} args - Arguments to create a Nd_barang.
     * @example
     * // Create one Nd_barang
     * const Nd_barang = await prisma.nd_barang.create({
     *   data: {
     *     // ... data to create a Nd_barang
     *   }
     * })
     * 
     */
    create<T extends nd_barangCreateArgs>(args: SelectSubset<T, nd_barangCreateArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barangs.
     * @param {nd_barangCreateManyArgs} args - Arguments to create many Nd_barangs.
     * @example
     * // Create many Nd_barangs
     * const nd_barang = await prisma.nd_barang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barangCreateManyArgs>(args?: SelectSubset<T, nd_barangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang.
     * @param {nd_barangDeleteArgs} args - Arguments to delete one Nd_barang.
     * @example
     * // Delete one Nd_barang
     * const Nd_barang = await prisma.nd_barang.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang
     *   }
     * })
     * 
     */
    delete<T extends nd_barangDeleteArgs>(args: SelectSubset<T, nd_barangDeleteArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang.
     * @param {nd_barangUpdateArgs} args - Arguments to update one Nd_barang.
     * @example
     * // Update one Nd_barang
     * const nd_barang = await prisma.nd_barang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barangUpdateArgs>(args: SelectSubset<T, nd_barangUpdateArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barangs.
     * @param {nd_barangDeleteManyArgs} args - Arguments to filter Nd_barangs to delete.
     * @example
     * // Delete a few Nd_barangs
     * const { count } = await prisma.nd_barang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barangDeleteManyArgs>(args?: SelectSubset<T, nd_barangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barangs
     * const nd_barang = await prisma.nd_barang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barangUpdateManyArgs>(args: SelectSubset<T, nd_barangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang.
     * @param {nd_barangUpsertArgs} args - Arguments to update or create a Nd_barang.
     * @example
     * // Update or create a Nd_barang
     * const nd_barang = await prisma.nd_barang.upsert({
     *   create: {
     *     // ... data to create a Nd_barang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang we want to update
     *   }
     * })
     */
    upsert<T extends nd_barangUpsertArgs>(args: SelectSubset<T, nd_barangUpsertArgs<ExtArgs>>): Prisma__nd_barangClient<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangCountArgs} args - Arguments to filter Nd_barangs to count.
     * @example
     * // Count the number of Nd_barangs
     * const count = await prisma.nd_barang.count({
     *   where: {
     *     // ... the filter for the Nd_barangs we want to count
     *   }
     * })
    **/
    count<T extends nd_barangCountArgs>(
      args?: Subset<T, nd_barangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barangAggregateArgs>(args: Subset<T, Nd_barangAggregateArgs>): Prisma.PrismaPromise<GetNd_barangAggregateType<T>>

    /**
     * Group by Nd_barang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barangGroupByArgs['orderBy'] }
        : { orderBy?: nd_barangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang model
   */
  readonly fields: nd_barangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    nd_satuan<T extends nd_barang$nd_satuanArgs<ExtArgs> = {}>(args?: Subset<T, nd_barang$nd_satuanArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang model
   */
  interface nd_barangFieldRefs {
    readonly id: FieldRef<"nd_barang", 'Int'>
    readonly jenis_barang: FieldRef<"nd_barang", 'String'>
    readonly nama_jual: FieldRef<"nd_barang", 'String'>
    readonly satuan_id: FieldRef<"nd_barang", 'Int'>
    readonly qty_warning: FieldRef<"nd_barang", 'Int'>
    readonly deskripsi_info: FieldRef<"nd_barang", 'String'>
    readonly status_aktif: FieldRef<"nd_barang", 'Int'>
    readonly tipe_qty: FieldRef<"nd_barang", 'Boolean'>
    readonly grade: FieldRef<"nd_barang", 'String'>
    readonly bahan: FieldRef<"nd_barang", 'String'>
    readonly fitur: FieldRef<"nd_barang", 'String'>
    readonly tipe: FieldRef<"nd_barang", 'String'>
    readonly created_at: FieldRef<"nd_barang", 'DateTime'>
    readonly updated_at: FieldRef<"nd_barang", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang findUnique
   */
  export type nd_barangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter, which nd_barang to fetch.
     */
    where: nd_barangWhereUniqueInput
  }

  /**
   * nd_barang findUniqueOrThrow
   */
  export type nd_barangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter, which nd_barang to fetch.
     */
    where: nd_barangWhereUniqueInput
  }

  /**
   * nd_barang findFirst
   */
  export type nd_barangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter, which nd_barang to fetch.
     */
    where?: nd_barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barangs to fetch.
     */
    orderBy?: nd_barangOrderByWithRelationInput | nd_barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barangs.
     */
    cursor?: nd_barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barangs.
     */
    distinct?: Nd_barangScalarFieldEnum | Nd_barangScalarFieldEnum[]
  }

  /**
   * nd_barang findFirstOrThrow
   */
  export type nd_barangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter, which nd_barang to fetch.
     */
    where?: nd_barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barangs to fetch.
     */
    orderBy?: nd_barangOrderByWithRelationInput | nd_barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barangs.
     */
    cursor?: nd_barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barangs.
     */
    distinct?: Nd_barangScalarFieldEnum | Nd_barangScalarFieldEnum[]
  }

  /**
   * nd_barang findMany
   */
  export type nd_barangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter, which nd_barangs to fetch.
     */
    where?: nd_barangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barangs to fetch.
     */
    orderBy?: nd_barangOrderByWithRelationInput | nd_barangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barangs.
     */
    cursor?: nd_barangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barangs.
     */
    skip?: number
    distinct?: Nd_barangScalarFieldEnum | Nd_barangScalarFieldEnum[]
  }

  /**
   * nd_barang create
   */
  export type nd_barangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * The data needed to create a nd_barang.
     */
    data?: XOR<nd_barangCreateInput, nd_barangUncheckedCreateInput>
  }

  /**
   * nd_barang createMany
   */
  export type nd_barangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barangs.
     */
    data: nd_barangCreateManyInput | nd_barangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang update
   */
  export type nd_barangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * The data needed to update a nd_barang.
     */
    data: XOR<nd_barangUpdateInput, nd_barangUncheckedUpdateInput>
    /**
     * Choose, which nd_barang to update.
     */
    where: nd_barangWhereUniqueInput
  }

  /**
   * nd_barang updateMany
   */
  export type nd_barangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barangs.
     */
    data: XOR<nd_barangUpdateManyMutationInput, nd_barangUncheckedUpdateManyInput>
    /**
     * Filter which nd_barangs to update
     */
    where?: nd_barangWhereInput
    /**
     * Limit how many nd_barangs to update.
     */
    limit?: number
  }

  /**
   * nd_barang upsert
   */
  export type nd_barangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * The filter to search for the nd_barang to update in case it exists.
     */
    where: nd_barangWhereUniqueInput
    /**
     * In case the nd_barang found by the `where` argument doesn't exist, create a new nd_barang with this data.
     */
    create: XOR<nd_barangCreateInput, nd_barangUncheckedCreateInput>
    /**
     * In case the nd_barang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barangUpdateInput, nd_barangUncheckedUpdateInput>
  }

  /**
   * nd_barang delete
   */
  export type nd_barangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    /**
     * Filter which nd_barang to delete.
     */
    where: nd_barangWhereUniqueInput
  }

  /**
   * nd_barang deleteMany
   */
  export type nd_barangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barangs to delete
     */
    where?: nd_barangWhereInput
    /**
     * Limit how many nd_barangs to delete.
     */
    limit?: number
  }

  /**
   * nd_barang.nd_satuan
   */
  export type nd_barang$nd_satuanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    where?: nd_satuanWhereInput
  }

  /**
   * nd_barang without action
   */
  export type nd_barangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
  }


  /**
   * Model nd_barang_bahan
   */

  export type AggregateNd_barang_bahan = {
    _count: Nd_barang_bahanCountAggregateOutputType | null
    _avg: Nd_barang_bahanAvgAggregateOutputType | null
    _sum: Nd_barang_bahanSumAggregateOutputType | null
    _min: Nd_barang_bahanMinAggregateOutputType | null
    _max: Nd_barang_bahanMaxAggregateOutputType | null
  }

  export type Nd_barang_bahanAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_bahanSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_bahanMinAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_bahanMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_bahanCountAggregateOutputType = {
    id: number
    nama: number
    kode: number
    keterangan: number
    status_aktif: number
    _all: number
  }


  export type Nd_barang_bahanAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_bahanSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_bahanMinAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_bahanMaxAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_bahanCountAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_barang_bahanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_bahan to aggregate.
     */
    where?: nd_barang_bahanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_bahans to fetch.
     */
    orderBy?: nd_barang_bahanOrderByWithRelationInput | nd_barang_bahanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_bahanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_bahans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_bahans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_bahans
    **/
    _count?: true | Nd_barang_bahanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_bahanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_bahanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_bahanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_bahanMaxAggregateInputType
  }

  export type GetNd_barang_bahanAggregateType<T extends Nd_barang_bahanAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_bahan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_bahan[P]>
      : GetScalarType<T[P], AggregateNd_barang_bahan[P]>
  }




  export type nd_barang_bahanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_bahanWhereInput
    orderBy?: nd_barang_bahanOrderByWithAggregationInput | nd_barang_bahanOrderByWithAggregationInput[]
    by: Nd_barang_bahanScalarFieldEnum[] | Nd_barang_bahanScalarFieldEnum
    having?: nd_barang_bahanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_bahanCountAggregateInputType | true
    _avg?: Nd_barang_bahanAvgAggregateInputType
    _sum?: Nd_barang_bahanSumAggregateInputType
    _min?: Nd_barang_bahanMinAggregateInputType
    _max?: Nd_barang_bahanMaxAggregateInputType
  }

  export type Nd_barang_bahanGroupByOutputType = {
    id: number
    nama: string
    kode: string
    keterangan: string | null
    status_aktif: number
    _count: Nd_barang_bahanCountAggregateOutputType | null
    _avg: Nd_barang_bahanAvgAggregateOutputType | null
    _sum: Nd_barang_bahanSumAggregateOutputType | null
    _min: Nd_barang_bahanMinAggregateOutputType | null
    _max: Nd_barang_bahanMaxAggregateOutputType | null
  }

  type GetNd_barang_bahanGroupByPayload<T extends nd_barang_bahanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_bahanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_bahanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_bahanGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_bahanGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_bahanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_barang_bahan"]>



  export type nd_barang_bahanSelectScalar = {
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }

  export type nd_barang_bahanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "kode" | "keterangan" | "status_aktif", ExtArgs["result"]["nd_barang_bahan"]>

  export type $nd_barang_bahanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_bahan"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      kode: string
      keterangan: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_barang_bahan"]>
    composites: {}
  }

  type nd_barang_bahanGetPayload<S extends boolean | null | undefined | nd_barang_bahanDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_bahanPayload, S>

  type nd_barang_bahanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_bahanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_bahanCountAggregateInputType | true
    }

  export interface nd_barang_bahanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_bahan'], meta: { name: 'nd_barang_bahan' } }
    /**
     * Find zero or one Nd_barang_bahan that matches the filter.
     * @param {nd_barang_bahanFindUniqueArgs} args - Arguments to find a Nd_barang_bahan
     * @example
     * // Get one Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_bahanFindUniqueArgs>(args: SelectSubset<T, nd_barang_bahanFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_bahan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_bahanFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_bahan
     * @example
     * // Get one Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_bahanFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_bahanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_bahan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanFindFirstArgs} args - Arguments to find a Nd_barang_bahan
     * @example
     * // Get one Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_bahanFindFirstArgs>(args?: SelectSubset<T, nd_barang_bahanFindFirstArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_bahan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_bahan
     * @example
     * // Get one Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_bahanFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_bahanFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_bahans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_bahans
     * const nd_barang_bahans = await prisma.nd_barang_bahan.findMany()
     * 
     * // Get first 10 Nd_barang_bahans
     * const nd_barang_bahans = await prisma.nd_barang_bahan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_bahanWithIdOnly = await prisma.nd_barang_bahan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_bahanFindManyArgs>(args?: SelectSubset<T, nd_barang_bahanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_bahan.
     * @param {nd_barang_bahanCreateArgs} args - Arguments to create a Nd_barang_bahan.
     * @example
     * // Create one Nd_barang_bahan
     * const Nd_barang_bahan = await prisma.nd_barang_bahan.create({
     *   data: {
     *     // ... data to create a Nd_barang_bahan
     *   }
     * })
     * 
     */
    create<T extends nd_barang_bahanCreateArgs>(args: SelectSubset<T, nd_barang_bahanCreateArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_bahans.
     * @param {nd_barang_bahanCreateManyArgs} args - Arguments to create many Nd_barang_bahans.
     * @example
     * // Create many Nd_barang_bahans
     * const nd_barang_bahan = await prisma.nd_barang_bahan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_bahanCreateManyArgs>(args?: SelectSubset<T, nd_barang_bahanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_bahan.
     * @param {nd_barang_bahanDeleteArgs} args - Arguments to delete one Nd_barang_bahan.
     * @example
     * // Delete one Nd_barang_bahan
     * const Nd_barang_bahan = await prisma.nd_barang_bahan.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_bahan
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_bahanDeleteArgs>(args: SelectSubset<T, nd_barang_bahanDeleteArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_bahan.
     * @param {nd_barang_bahanUpdateArgs} args - Arguments to update one Nd_barang_bahan.
     * @example
     * // Update one Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_bahanUpdateArgs>(args: SelectSubset<T, nd_barang_bahanUpdateArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_bahans.
     * @param {nd_barang_bahanDeleteManyArgs} args - Arguments to filter Nd_barang_bahans to delete.
     * @example
     * // Delete a few Nd_barang_bahans
     * const { count } = await prisma.nd_barang_bahan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_bahanDeleteManyArgs>(args?: SelectSubset<T, nd_barang_bahanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_bahans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_bahans
     * const nd_barang_bahan = await prisma.nd_barang_bahan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_bahanUpdateManyArgs>(args: SelectSubset<T, nd_barang_bahanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_bahan.
     * @param {nd_barang_bahanUpsertArgs} args - Arguments to update or create a Nd_barang_bahan.
     * @example
     * // Update or create a Nd_barang_bahan
     * const nd_barang_bahan = await prisma.nd_barang_bahan.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_bahan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_bahan we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_bahanUpsertArgs>(args: SelectSubset<T, nd_barang_bahanUpsertArgs<ExtArgs>>): Prisma__nd_barang_bahanClient<$Result.GetResult<Prisma.$nd_barang_bahanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_bahans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanCountArgs} args - Arguments to filter Nd_barang_bahans to count.
     * @example
     * // Count the number of Nd_barang_bahans
     * const count = await prisma.nd_barang_bahan.count({
     *   where: {
     *     // ... the filter for the Nd_barang_bahans we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_bahanCountArgs>(
      args?: Subset<T, nd_barang_bahanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_bahanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_bahan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_bahanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_bahanAggregateArgs>(args: Subset<T, Nd_barang_bahanAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_bahanAggregateType<T>>

    /**
     * Group by Nd_barang_bahan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_bahanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_bahanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_bahanGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_bahanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_bahanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_bahanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_bahan model
   */
  readonly fields: nd_barang_bahanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_bahan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_bahanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_bahan model
   */
  interface nd_barang_bahanFieldRefs {
    readonly id: FieldRef<"nd_barang_bahan", 'Int'>
    readonly nama: FieldRef<"nd_barang_bahan", 'String'>
    readonly kode: FieldRef<"nd_barang_bahan", 'String'>
    readonly keterangan: FieldRef<"nd_barang_bahan", 'String'>
    readonly status_aktif: FieldRef<"nd_barang_bahan", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_bahan findUnique
   */
  export type nd_barang_bahanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_bahan to fetch.
     */
    where: nd_barang_bahanWhereUniqueInput
  }

  /**
   * nd_barang_bahan findUniqueOrThrow
   */
  export type nd_barang_bahanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_bahan to fetch.
     */
    where: nd_barang_bahanWhereUniqueInput
  }

  /**
   * nd_barang_bahan findFirst
   */
  export type nd_barang_bahanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_bahan to fetch.
     */
    where?: nd_barang_bahanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_bahans to fetch.
     */
    orderBy?: nd_barang_bahanOrderByWithRelationInput | nd_barang_bahanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_bahans.
     */
    cursor?: nd_barang_bahanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_bahans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_bahans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_bahans.
     */
    distinct?: Nd_barang_bahanScalarFieldEnum | Nd_barang_bahanScalarFieldEnum[]
  }

  /**
   * nd_barang_bahan findFirstOrThrow
   */
  export type nd_barang_bahanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_bahan to fetch.
     */
    where?: nd_barang_bahanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_bahans to fetch.
     */
    orderBy?: nd_barang_bahanOrderByWithRelationInput | nd_barang_bahanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_bahans.
     */
    cursor?: nd_barang_bahanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_bahans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_bahans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_bahans.
     */
    distinct?: Nd_barang_bahanScalarFieldEnum | Nd_barang_bahanScalarFieldEnum[]
  }

  /**
   * nd_barang_bahan findMany
   */
  export type nd_barang_bahanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_bahans to fetch.
     */
    where?: nd_barang_bahanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_bahans to fetch.
     */
    orderBy?: nd_barang_bahanOrderByWithRelationInput | nd_barang_bahanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_bahans.
     */
    cursor?: nd_barang_bahanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_bahans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_bahans.
     */
    skip?: number
    distinct?: Nd_barang_bahanScalarFieldEnum | Nd_barang_bahanScalarFieldEnum[]
  }

  /**
   * nd_barang_bahan create
   */
  export type nd_barang_bahanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_bahan.
     */
    data?: XOR<nd_barang_bahanCreateInput, nd_barang_bahanUncheckedCreateInput>
  }

  /**
   * nd_barang_bahan createMany
   */
  export type nd_barang_bahanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_bahans.
     */
    data: nd_barang_bahanCreateManyInput | nd_barang_bahanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_bahan update
   */
  export type nd_barang_bahanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_bahan.
     */
    data: XOR<nd_barang_bahanUpdateInput, nd_barang_bahanUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_bahan to update.
     */
    where: nd_barang_bahanWhereUniqueInput
  }

  /**
   * nd_barang_bahan updateMany
   */
  export type nd_barang_bahanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_bahans.
     */
    data: XOR<nd_barang_bahanUpdateManyMutationInput, nd_barang_bahanUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_bahans to update
     */
    where?: nd_barang_bahanWhereInput
    /**
     * Limit how many nd_barang_bahans to update.
     */
    limit?: number
  }

  /**
   * nd_barang_bahan upsert
   */
  export type nd_barang_bahanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_bahan to update in case it exists.
     */
    where: nd_barang_bahanWhereUniqueInput
    /**
     * In case the nd_barang_bahan found by the `where` argument doesn't exist, create a new nd_barang_bahan with this data.
     */
    create: XOR<nd_barang_bahanCreateInput, nd_barang_bahanUncheckedCreateInput>
    /**
     * In case the nd_barang_bahan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_bahanUpdateInput, nd_barang_bahanUncheckedUpdateInput>
  }

  /**
   * nd_barang_bahan delete
   */
  export type nd_barang_bahanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_bahan to delete.
     */
    where: nd_barang_bahanWhereUniqueInput
  }

  /**
   * nd_barang_bahan deleteMany
   */
  export type nd_barang_bahanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_bahans to delete
     */
    where?: nd_barang_bahanWhereInput
    /**
     * Limit how many nd_barang_bahans to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_bahan without action
   */
  export type nd_barang_bahanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_bahan
     */
    select?: nd_barang_bahanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_bahan
     */
    omit?: nd_barang_bahanOmit<ExtArgs> | null
  }


  /**
   * Model nd_barang_beli
   */

  export type AggregateNd_barang_beli = {
    _count: Nd_barang_beliCountAggregateOutputType | null
    _avg: Nd_barang_beliAvgAggregateOutputType | null
    _sum: Nd_barang_beliSumAggregateOutputType | null
    _min: Nd_barang_beliMinAggregateOutputType | null
    _max: Nd_barang_beliMaxAggregateOutputType | null
  }

  export type Nd_barang_beliAvgAggregateOutputType = {
    id: number | null
    barang_id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_beliSumAggregateOutputType = {
    id: number | null
    barang_id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_beliMinAggregateOutputType = {
    id: number | null
    nama: string | null
    barang_id: number | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barang_beliMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    barang_id: number | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barang_beliCountAggregateOutputType = {
    id: number
    nama: number
    barang_id: number
    status_aktif: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_barang_beliAvgAggregateInputType = {
    id?: true
    barang_id?: true
    status_aktif?: true
  }

  export type Nd_barang_beliSumAggregateInputType = {
    id?: true
    barang_id?: true
    status_aktif?: true
  }

  export type Nd_barang_beliMinAggregateInputType = {
    id?: true
    nama?: true
    barang_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barang_beliMaxAggregateInputType = {
    id?: true
    nama?: true
    barang_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barang_beliCountAggregateInputType = {
    id?: true
    nama?: true
    barang_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_barang_beliAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_beli to aggregate.
     */
    where?: nd_barang_beliWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_belis to fetch.
     */
    orderBy?: nd_barang_beliOrderByWithRelationInput | nd_barang_beliOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_beliWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_belis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_belis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_belis
    **/
    _count?: true | Nd_barang_beliCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_beliAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_beliSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_beliMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_beliMaxAggregateInputType
  }

  export type GetNd_barang_beliAggregateType<T extends Nd_barang_beliAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_beli]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_beli[P]>
      : GetScalarType<T[P], AggregateNd_barang_beli[P]>
  }




  export type nd_barang_beliGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_beliWhereInput
    orderBy?: nd_barang_beliOrderByWithAggregationInput | nd_barang_beliOrderByWithAggregationInput[]
    by: Nd_barang_beliScalarFieldEnum[] | Nd_barang_beliScalarFieldEnum
    having?: nd_barang_beliScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_beliCountAggregateInputType | true
    _avg?: Nd_barang_beliAvgAggregateInputType
    _sum?: Nd_barang_beliSumAggregateInputType
    _min?: Nd_barang_beliMinAggregateInputType
    _max?: Nd_barang_beliMaxAggregateInputType
  }

  export type Nd_barang_beliGroupByOutputType = {
    id: number
    nama: string | null
    barang_id: number | null
    status_aktif: number | null
    created_at: Date
    updated_at: Date
    _count: Nd_barang_beliCountAggregateOutputType | null
    _avg: Nd_barang_beliAvgAggregateOutputType | null
    _sum: Nd_barang_beliSumAggregateOutputType | null
    _min: Nd_barang_beliMinAggregateOutputType | null
    _max: Nd_barang_beliMaxAggregateOutputType | null
  }

  type GetNd_barang_beliGroupByPayload<T extends nd_barang_beliGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_beliGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_beliGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_beliGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_beliGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_beliSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    barang_id?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["nd_barang_beli"]>



  export type nd_barang_beliSelectScalar = {
    id?: boolean
    nama?: boolean
    barang_id?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_barang_beliOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "barang_id" | "status_aktif" | "created_at" | "updated_at", ExtArgs["result"]["nd_barang_beli"]>

  export type $nd_barang_beliPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_beli"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string | null
      barang_id: number | null
      status_aktif: number | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_barang_beli"]>
    composites: {}
  }

  type nd_barang_beliGetPayload<S extends boolean | null | undefined | nd_barang_beliDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_beliPayload, S>

  type nd_barang_beliCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_beliFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_beliCountAggregateInputType | true
    }

  export interface nd_barang_beliDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_beli'], meta: { name: 'nd_barang_beli' } }
    /**
     * Find zero or one Nd_barang_beli that matches the filter.
     * @param {nd_barang_beliFindUniqueArgs} args - Arguments to find a Nd_barang_beli
     * @example
     * // Get one Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_beliFindUniqueArgs>(args: SelectSubset<T, nd_barang_beliFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_beli that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_beliFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_beli
     * @example
     * // Get one Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_beliFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_beliFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_beli that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliFindFirstArgs} args - Arguments to find a Nd_barang_beli
     * @example
     * // Get one Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_beliFindFirstArgs>(args?: SelectSubset<T, nd_barang_beliFindFirstArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_beli that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_beli
     * @example
     * // Get one Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_beliFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_beliFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_belis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_belis
     * const nd_barang_belis = await prisma.nd_barang_beli.findMany()
     * 
     * // Get first 10 Nd_barang_belis
     * const nd_barang_belis = await prisma.nd_barang_beli.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_beliWithIdOnly = await prisma.nd_barang_beli.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_beliFindManyArgs>(args?: SelectSubset<T, nd_barang_beliFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_beli.
     * @param {nd_barang_beliCreateArgs} args - Arguments to create a Nd_barang_beli.
     * @example
     * // Create one Nd_barang_beli
     * const Nd_barang_beli = await prisma.nd_barang_beli.create({
     *   data: {
     *     // ... data to create a Nd_barang_beli
     *   }
     * })
     * 
     */
    create<T extends nd_barang_beliCreateArgs>(args: SelectSubset<T, nd_barang_beliCreateArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_belis.
     * @param {nd_barang_beliCreateManyArgs} args - Arguments to create many Nd_barang_belis.
     * @example
     * // Create many Nd_barang_belis
     * const nd_barang_beli = await prisma.nd_barang_beli.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_beliCreateManyArgs>(args?: SelectSubset<T, nd_barang_beliCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_beli.
     * @param {nd_barang_beliDeleteArgs} args - Arguments to delete one Nd_barang_beli.
     * @example
     * // Delete one Nd_barang_beli
     * const Nd_barang_beli = await prisma.nd_barang_beli.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_beli
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_beliDeleteArgs>(args: SelectSubset<T, nd_barang_beliDeleteArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_beli.
     * @param {nd_barang_beliUpdateArgs} args - Arguments to update one Nd_barang_beli.
     * @example
     * // Update one Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_beliUpdateArgs>(args: SelectSubset<T, nd_barang_beliUpdateArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_belis.
     * @param {nd_barang_beliDeleteManyArgs} args - Arguments to filter Nd_barang_belis to delete.
     * @example
     * // Delete a few Nd_barang_belis
     * const { count } = await prisma.nd_barang_beli.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_beliDeleteManyArgs>(args?: SelectSubset<T, nd_barang_beliDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_belis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_belis
     * const nd_barang_beli = await prisma.nd_barang_beli.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_beliUpdateManyArgs>(args: SelectSubset<T, nd_barang_beliUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_beli.
     * @param {nd_barang_beliUpsertArgs} args - Arguments to update or create a Nd_barang_beli.
     * @example
     * // Update or create a Nd_barang_beli
     * const nd_barang_beli = await prisma.nd_barang_beli.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_beli
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_beli we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_beliUpsertArgs>(args: SelectSubset<T, nd_barang_beliUpsertArgs<ExtArgs>>): Prisma__nd_barang_beliClient<$Result.GetResult<Prisma.$nd_barang_beliPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_belis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliCountArgs} args - Arguments to filter Nd_barang_belis to count.
     * @example
     * // Count the number of Nd_barang_belis
     * const count = await prisma.nd_barang_beli.count({
     *   where: {
     *     // ... the filter for the Nd_barang_belis we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_beliCountArgs>(
      args?: Subset<T, nd_barang_beliCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_beliCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_beli.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_beliAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_beliAggregateArgs>(args: Subset<T, Nd_barang_beliAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_beliAggregateType<T>>

    /**
     * Group by Nd_barang_beli.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_beliGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_beliGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_beliGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_beliGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_beliGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_beliGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_beli model
   */
  readonly fields: nd_barang_beliFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_beli.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_beliClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_beli model
   */
  interface nd_barang_beliFieldRefs {
    readonly id: FieldRef<"nd_barang_beli", 'Int'>
    readonly nama: FieldRef<"nd_barang_beli", 'String'>
    readonly barang_id: FieldRef<"nd_barang_beli", 'Int'>
    readonly status_aktif: FieldRef<"nd_barang_beli", 'Int'>
    readonly created_at: FieldRef<"nd_barang_beli", 'DateTime'>
    readonly updated_at: FieldRef<"nd_barang_beli", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_beli findUnique
   */
  export type nd_barang_beliFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_beli to fetch.
     */
    where: nd_barang_beliWhereUniqueInput
  }

  /**
   * nd_barang_beli findUniqueOrThrow
   */
  export type nd_barang_beliFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_beli to fetch.
     */
    where: nd_barang_beliWhereUniqueInput
  }

  /**
   * nd_barang_beli findFirst
   */
  export type nd_barang_beliFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_beli to fetch.
     */
    where?: nd_barang_beliWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_belis to fetch.
     */
    orderBy?: nd_barang_beliOrderByWithRelationInput | nd_barang_beliOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_belis.
     */
    cursor?: nd_barang_beliWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_belis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_belis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_belis.
     */
    distinct?: Nd_barang_beliScalarFieldEnum | Nd_barang_beliScalarFieldEnum[]
  }

  /**
   * nd_barang_beli findFirstOrThrow
   */
  export type nd_barang_beliFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_beli to fetch.
     */
    where?: nd_barang_beliWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_belis to fetch.
     */
    orderBy?: nd_barang_beliOrderByWithRelationInput | nd_barang_beliOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_belis.
     */
    cursor?: nd_barang_beliWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_belis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_belis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_belis.
     */
    distinct?: Nd_barang_beliScalarFieldEnum | Nd_barang_beliScalarFieldEnum[]
  }

  /**
   * nd_barang_beli findMany
   */
  export type nd_barang_beliFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_belis to fetch.
     */
    where?: nd_barang_beliWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_belis to fetch.
     */
    orderBy?: nd_barang_beliOrderByWithRelationInput | nd_barang_beliOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_belis.
     */
    cursor?: nd_barang_beliWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_belis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_belis.
     */
    skip?: number
    distinct?: Nd_barang_beliScalarFieldEnum | Nd_barang_beliScalarFieldEnum[]
  }

  /**
   * nd_barang_beli create
   */
  export type nd_barang_beliCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_beli.
     */
    data?: XOR<nd_barang_beliCreateInput, nd_barang_beliUncheckedCreateInput>
  }

  /**
   * nd_barang_beli createMany
   */
  export type nd_barang_beliCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_belis.
     */
    data: nd_barang_beliCreateManyInput | nd_barang_beliCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_beli update
   */
  export type nd_barang_beliUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_beli.
     */
    data: XOR<nd_barang_beliUpdateInput, nd_barang_beliUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_beli to update.
     */
    where: nd_barang_beliWhereUniqueInput
  }

  /**
   * nd_barang_beli updateMany
   */
  export type nd_barang_beliUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_belis.
     */
    data: XOR<nd_barang_beliUpdateManyMutationInput, nd_barang_beliUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_belis to update
     */
    where?: nd_barang_beliWhereInput
    /**
     * Limit how many nd_barang_belis to update.
     */
    limit?: number
  }

  /**
   * nd_barang_beli upsert
   */
  export type nd_barang_beliUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_beli to update in case it exists.
     */
    where: nd_barang_beliWhereUniqueInput
    /**
     * In case the nd_barang_beli found by the `where` argument doesn't exist, create a new nd_barang_beli with this data.
     */
    create: XOR<nd_barang_beliCreateInput, nd_barang_beliUncheckedCreateInput>
    /**
     * In case the nd_barang_beli was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_beliUpdateInput, nd_barang_beliUncheckedUpdateInput>
  }

  /**
   * nd_barang_beli delete
   */
  export type nd_barang_beliDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_beli to delete.
     */
    where: nd_barang_beliWhereUniqueInput
  }

  /**
   * nd_barang_beli deleteMany
   */
  export type nd_barang_beliDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_belis to delete
     */
    where?: nd_barang_beliWhereInput
    /**
     * Limit how many nd_barang_belis to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_beli without action
   */
  export type nd_barang_beliDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_beli
     */
    select?: nd_barang_beliSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_beli
     */
    omit?: nd_barang_beliOmit<ExtArgs> | null
  }


  /**
   * Model nd_barang_fitur
   */

  export type AggregateNd_barang_fitur = {
    _count: Nd_barang_fiturCountAggregateOutputType | null
    _avg: Nd_barang_fiturAvgAggregateOutputType | null
    _sum: Nd_barang_fiturSumAggregateOutputType | null
    _min: Nd_barang_fiturMinAggregateOutputType | null
    _max: Nd_barang_fiturMaxAggregateOutputType | null
  }

  export type Nd_barang_fiturAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_fiturSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_fiturMinAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_fiturMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_fiturCountAggregateOutputType = {
    id: number
    nama: number
    kode: number
    keterangan: number
    status_aktif: number
    _all: number
  }


  export type Nd_barang_fiturAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_fiturSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_fiturMinAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_fiturMaxAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_fiturCountAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_barang_fiturAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_fitur to aggregate.
     */
    where?: nd_barang_fiturWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_fiturs to fetch.
     */
    orderBy?: nd_barang_fiturOrderByWithRelationInput | nd_barang_fiturOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_fiturWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_fiturs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_fiturs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_fiturs
    **/
    _count?: true | Nd_barang_fiturCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_fiturAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_fiturSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_fiturMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_fiturMaxAggregateInputType
  }

  export type GetNd_barang_fiturAggregateType<T extends Nd_barang_fiturAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_fitur]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_fitur[P]>
      : GetScalarType<T[P], AggregateNd_barang_fitur[P]>
  }




  export type nd_barang_fiturGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_fiturWhereInput
    orderBy?: nd_barang_fiturOrderByWithAggregationInput | nd_barang_fiturOrderByWithAggregationInput[]
    by: Nd_barang_fiturScalarFieldEnum[] | Nd_barang_fiturScalarFieldEnum
    having?: nd_barang_fiturScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_fiturCountAggregateInputType | true
    _avg?: Nd_barang_fiturAvgAggregateInputType
    _sum?: Nd_barang_fiturSumAggregateInputType
    _min?: Nd_barang_fiturMinAggregateInputType
    _max?: Nd_barang_fiturMaxAggregateInputType
  }

  export type Nd_barang_fiturGroupByOutputType = {
    id: number
    nama: string
    kode: string
    keterangan: string | null
    status_aktif: number
    _count: Nd_barang_fiturCountAggregateOutputType | null
    _avg: Nd_barang_fiturAvgAggregateOutputType | null
    _sum: Nd_barang_fiturSumAggregateOutputType | null
    _min: Nd_barang_fiturMinAggregateOutputType | null
    _max: Nd_barang_fiturMaxAggregateOutputType | null
  }

  type GetNd_barang_fiturGroupByPayload<T extends nd_barang_fiturGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_fiturGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_fiturGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_fiturGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_fiturGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_fiturSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_barang_fitur"]>



  export type nd_barang_fiturSelectScalar = {
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }

  export type nd_barang_fiturOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "kode" | "keterangan" | "status_aktif", ExtArgs["result"]["nd_barang_fitur"]>

  export type $nd_barang_fiturPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_fitur"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      kode: string
      keterangan: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_barang_fitur"]>
    composites: {}
  }

  type nd_barang_fiturGetPayload<S extends boolean | null | undefined | nd_barang_fiturDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_fiturPayload, S>

  type nd_barang_fiturCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_fiturFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_fiturCountAggregateInputType | true
    }

  export interface nd_barang_fiturDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_fitur'], meta: { name: 'nd_barang_fitur' } }
    /**
     * Find zero or one Nd_barang_fitur that matches the filter.
     * @param {nd_barang_fiturFindUniqueArgs} args - Arguments to find a Nd_barang_fitur
     * @example
     * // Get one Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_fiturFindUniqueArgs>(args: SelectSubset<T, nd_barang_fiturFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_fitur that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_fiturFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_fitur
     * @example
     * // Get one Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_fiturFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_fiturFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_fitur that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturFindFirstArgs} args - Arguments to find a Nd_barang_fitur
     * @example
     * // Get one Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_fiturFindFirstArgs>(args?: SelectSubset<T, nd_barang_fiturFindFirstArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_fitur that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_fitur
     * @example
     * // Get one Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_fiturFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_fiturFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_fiturs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_fiturs
     * const nd_barang_fiturs = await prisma.nd_barang_fitur.findMany()
     * 
     * // Get first 10 Nd_barang_fiturs
     * const nd_barang_fiturs = await prisma.nd_barang_fitur.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_fiturWithIdOnly = await prisma.nd_barang_fitur.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_fiturFindManyArgs>(args?: SelectSubset<T, nd_barang_fiturFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_fitur.
     * @param {nd_barang_fiturCreateArgs} args - Arguments to create a Nd_barang_fitur.
     * @example
     * // Create one Nd_barang_fitur
     * const Nd_barang_fitur = await prisma.nd_barang_fitur.create({
     *   data: {
     *     // ... data to create a Nd_barang_fitur
     *   }
     * })
     * 
     */
    create<T extends nd_barang_fiturCreateArgs>(args: SelectSubset<T, nd_barang_fiturCreateArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_fiturs.
     * @param {nd_barang_fiturCreateManyArgs} args - Arguments to create many Nd_barang_fiturs.
     * @example
     * // Create many Nd_barang_fiturs
     * const nd_barang_fitur = await prisma.nd_barang_fitur.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_fiturCreateManyArgs>(args?: SelectSubset<T, nd_barang_fiturCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_fitur.
     * @param {nd_barang_fiturDeleteArgs} args - Arguments to delete one Nd_barang_fitur.
     * @example
     * // Delete one Nd_barang_fitur
     * const Nd_barang_fitur = await prisma.nd_barang_fitur.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_fitur
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_fiturDeleteArgs>(args: SelectSubset<T, nd_barang_fiturDeleteArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_fitur.
     * @param {nd_barang_fiturUpdateArgs} args - Arguments to update one Nd_barang_fitur.
     * @example
     * // Update one Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_fiturUpdateArgs>(args: SelectSubset<T, nd_barang_fiturUpdateArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_fiturs.
     * @param {nd_barang_fiturDeleteManyArgs} args - Arguments to filter Nd_barang_fiturs to delete.
     * @example
     * // Delete a few Nd_barang_fiturs
     * const { count } = await prisma.nd_barang_fitur.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_fiturDeleteManyArgs>(args?: SelectSubset<T, nd_barang_fiturDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_fiturs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_fiturs
     * const nd_barang_fitur = await prisma.nd_barang_fitur.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_fiturUpdateManyArgs>(args: SelectSubset<T, nd_barang_fiturUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_fitur.
     * @param {nd_barang_fiturUpsertArgs} args - Arguments to update or create a Nd_barang_fitur.
     * @example
     * // Update or create a Nd_barang_fitur
     * const nd_barang_fitur = await prisma.nd_barang_fitur.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_fitur
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_fitur we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_fiturUpsertArgs>(args: SelectSubset<T, nd_barang_fiturUpsertArgs<ExtArgs>>): Prisma__nd_barang_fiturClient<$Result.GetResult<Prisma.$nd_barang_fiturPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_fiturs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturCountArgs} args - Arguments to filter Nd_barang_fiturs to count.
     * @example
     * // Count the number of Nd_barang_fiturs
     * const count = await prisma.nd_barang_fitur.count({
     *   where: {
     *     // ... the filter for the Nd_barang_fiturs we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_fiturCountArgs>(
      args?: Subset<T, nd_barang_fiturCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_fiturCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_fitur.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_fiturAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_fiturAggregateArgs>(args: Subset<T, Nd_barang_fiturAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_fiturAggregateType<T>>

    /**
     * Group by Nd_barang_fitur.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_fiturGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_fiturGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_fiturGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_fiturGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_fiturGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_fiturGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_fitur model
   */
  readonly fields: nd_barang_fiturFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_fitur.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_fiturClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_fitur model
   */
  interface nd_barang_fiturFieldRefs {
    readonly id: FieldRef<"nd_barang_fitur", 'Int'>
    readonly nama: FieldRef<"nd_barang_fitur", 'String'>
    readonly kode: FieldRef<"nd_barang_fitur", 'String'>
    readonly keterangan: FieldRef<"nd_barang_fitur", 'String'>
    readonly status_aktif: FieldRef<"nd_barang_fitur", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_fitur findUnique
   */
  export type nd_barang_fiturFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_fitur to fetch.
     */
    where: nd_barang_fiturWhereUniqueInput
  }

  /**
   * nd_barang_fitur findUniqueOrThrow
   */
  export type nd_barang_fiturFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_fitur to fetch.
     */
    where: nd_barang_fiturWhereUniqueInput
  }

  /**
   * nd_barang_fitur findFirst
   */
  export type nd_barang_fiturFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_fitur to fetch.
     */
    where?: nd_barang_fiturWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_fiturs to fetch.
     */
    orderBy?: nd_barang_fiturOrderByWithRelationInput | nd_barang_fiturOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_fiturs.
     */
    cursor?: nd_barang_fiturWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_fiturs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_fiturs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_fiturs.
     */
    distinct?: Nd_barang_fiturScalarFieldEnum | Nd_barang_fiturScalarFieldEnum[]
  }

  /**
   * nd_barang_fitur findFirstOrThrow
   */
  export type nd_barang_fiturFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_fitur to fetch.
     */
    where?: nd_barang_fiturWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_fiturs to fetch.
     */
    orderBy?: nd_barang_fiturOrderByWithRelationInput | nd_barang_fiturOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_fiturs.
     */
    cursor?: nd_barang_fiturWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_fiturs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_fiturs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_fiturs.
     */
    distinct?: Nd_barang_fiturScalarFieldEnum | Nd_barang_fiturScalarFieldEnum[]
  }

  /**
   * nd_barang_fitur findMany
   */
  export type nd_barang_fiturFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_fiturs to fetch.
     */
    where?: nd_barang_fiturWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_fiturs to fetch.
     */
    orderBy?: nd_barang_fiturOrderByWithRelationInput | nd_barang_fiturOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_fiturs.
     */
    cursor?: nd_barang_fiturWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_fiturs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_fiturs.
     */
    skip?: number
    distinct?: Nd_barang_fiturScalarFieldEnum | Nd_barang_fiturScalarFieldEnum[]
  }

  /**
   * nd_barang_fitur create
   */
  export type nd_barang_fiturCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_fitur.
     */
    data?: XOR<nd_barang_fiturCreateInput, nd_barang_fiturUncheckedCreateInput>
  }

  /**
   * nd_barang_fitur createMany
   */
  export type nd_barang_fiturCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_fiturs.
     */
    data: nd_barang_fiturCreateManyInput | nd_barang_fiturCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_fitur update
   */
  export type nd_barang_fiturUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_fitur.
     */
    data: XOR<nd_barang_fiturUpdateInput, nd_barang_fiturUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_fitur to update.
     */
    where: nd_barang_fiturWhereUniqueInput
  }

  /**
   * nd_barang_fitur updateMany
   */
  export type nd_barang_fiturUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_fiturs.
     */
    data: XOR<nd_barang_fiturUpdateManyMutationInput, nd_barang_fiturUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_fiturs to update
     */
    where?: nd_barang_fiturWhereInput
    /**
     * Limit how many nd_barang_fiturs to update.
     */
    limit?: number
  }

  /**
   * nd_barang_fitur upsert
   */
  export type nd_barang_fiturUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_fitur to update in case it exists.
     */
    where: nd_barang_fiturWhereUniqueInput
    /**
     * In case the nd_barang_fitur found by the `where` argument doesn't exist, create a new nd_barang_fitur with this data.
     */
    create: XOR<nd_barang_fiturCreateInput, nd_barang_fiturUncheckedCreateInput>
    /**
     * In case the nd_barang_fitur was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_fiturUpdateInput, nd_barang_fiturUncheckedUpdateInput>
  }

  /**
   * nd_barang_fitur delete
   */
  export type nd_barang_fiturDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_fitur to delete.
     */
    where: nd_barang_fiturWhereUniqueInput
  }

  /**
   * nd_barang_fitur deleteMany
   */
  export type nd_barang_fiturDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_fiturs to delete
     */
    where?: nd_barang_fiturWhereInput
    /**
     * Limit how many nd_barang_fiturs to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_fitur without action
   */
  export type nd_barang_fiturDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_fitur
     */
    select?: nd_barang_fiturSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_fitur
     */
    omit?: nd_barang_fiturOmit<ExtArgs> | null
  }


  /**
   * Model nd_barang_grade
   */

  export type AggregateNd_barang_grade = {
    _count: Nd_barang_gradeCountAggregateOutputType | null
    _avg: Nd_barang_gradeAvgAggregateOutputType | null
    _sum: Nd_barang_gradeSumAggregateOutputType | null
    _min: Nd_barang_gradeMinAggregateOutputType | null
    _max: Nd_barang_gradeMaxAggregateOutputType | null
  }

  export type Nd_barang_gradeAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_gradeSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_gradeMinAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_gradeMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_gradeCountAggregateOutputType = {
    id: number
    nama: number
    kode: number
    keterangan: number
    status_aktif: number
    _all: number
  }


  export type Nd_barang_gradeAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_gradeSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_gradeMinAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_gradeMaxAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_gradeCountAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_barang_gradeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_grade to aggregate.
     */
    where?: nd_barang_gradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_grades to fetch.
     */
    orderBy?: nd_barang_gradeOrderByWithRelationInput | nd_barang_gradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_gradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_grades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_grades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_grades
    **/
    _count?: true | Nd_barang_gradeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_gradeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_gradeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_gradeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_gradeMaxAggregateInputType
  }

  export type GetNd_barang_gradeAggregateType<T extends Nd_barang_gradeAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_grade]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_grade[P]>
      : GetScalarType<T[P], AggregateNd_barang_grade[P]>
  }




  export type nd_barang_gradeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_gradeWhereInput
    orderBy?: nd_barang_gradeOrderByWithAggregationInput | nd_barang_gradeOrderByWithAggregationInput[]
    by: Nd_barang_gradeScalarFieldEnum[] | Nd_barang_gradeScalarFieldEnum
    having?: nd_barang_gradeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_gradeCountAggregateInputType | true
    _avg?: Nd_barang_gradeAvgAggregateInputType
    _sum?: Nd_barang_gradeSumAggregateInputType
    _min?: Nd_barang_gradeMinAggregateInputType
    _max?: Nd_barang_gradeMaxAggregateInputType
  }

  export type Nd_barang_gradeGroupByOutputType = {
    id: number
    nama: string
    kode: string
    keterangan: string | null
    status_aktif: number
    _count: Nd_barang_gradeCountAggregateOutputType | null
    _avg: Nd_barang_gradeAvgAggregateOutputType | null
    _sum: Nd_barang_gradeSumAggregateOutputType | null
    _min: Nd_barang_gradeMinAggregateOutputType | null
    _max: Nd_barang_gradeMaxAggregateOutputType | null
  }

  type GetNd_barang_gradeGroupByPayload<T extends nd_barang_gradeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_gradeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_gradeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_gradeGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_gradeGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_gradeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_barang_grade"]>



  export type nd_barang_gradeSelectScalar = {
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }

  export type nd_barang_gradeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "kode" | "keterangan" | "status_aktif", ExtArgs["result"]["nd_barang_grade"]>

  export type $nd_barang_gradePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_grade"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      kode: string
      keterangan: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_barang_grade"]>
    composites: {}
  }

  type nd_barang_gradeGetPayload<S extends boolean | null | undefined | nd_barang_gradeDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_gradePayload, S>

  type nd_barang_gradeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_gradeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_gradeCountAggregateInputType | true
    }

  export interface nd_barang_gradeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_grade'], meta: { name: 'nd_barang_grade' } }
    /**
     * Find zero or one Nd_barang_grade that matches the filter.
     * @param {nd_barang_gradeFindUniqueArgs} args - Arguments to find a Nd_barang_grade
     * @example
     * // Get one Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_gradeFindUniqueArgs>(args: SelectSubset<T, nd_barang_gradeFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_grade that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_gradeFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_grade
     * @example
     * // Get one Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_gradeFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_gradeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_grade that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeFindFirstArgs} args - Arguments to find a Nd_barang_grade
     * @example
     * // Get one Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_gradeFindFirstArgs>(args?: SelectSubset<T, nd_barang_gradeFindFirstArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_grade that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_grade
     * @example
     * // Get one Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_gradeFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_gradeFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_grades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_grades
     * const nd_barang_grades = await prisma.nd_barang_grade.findMany()
     * 
     * // Get first 10 Nd_barang_grades
     * const nd_barang_grades = await prisma.nd_barang_grade.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_gradeWithIdOnly = await prisma.nd_barang_grade.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_gradeFindManyArgs>(args?: SelectSubset<T, nd_barang_gradeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_grade.
     * @param {nd_barang_gradeCreateArgs} args - Arguments to create a Nd_barang_grade.
     * @example
     * // Create one Nd_barang_grade
     * const Nd_barang_grade = await prisma.nd_barang_grade.create({
     *   data: {
     *     // ... data to create a Nd_barang_grade
     *   }
     * })
     * 
     */
    create<T extends nd_barang_gradeCreateArgs>(args: SelectSubset<T, nd_barang_gradeCreateArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_grades.
     * @param {nd_barang_gradeCreateManyArgs} args - Arguments to create many Nd_barang_grades.
     * @example
     * // Create many Nd_barang_grades
     * const nd_barang_grade = await prisma.nd_barang_grade.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_gradeCreateManyArgs>(args?: SelectSubset<T, nd_barang_gradeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_grade.
     * @param {nd_barang_gradeDeleteArgs} args - Arguments to delete one Nd_barang_grade.
     * @example
     * // Delete one Nd_barang_grade
     * const Nd_barang_grade = await prisma.nd_barang_grade.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_grade
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_gradeDeleteArgs>(args: SelectSubset<T, nd_barang_gradeDeleteArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_grade.
     * @param {nd_barang_gradeUpdateArgs} args - Arguments to update one Nd_barang_grade.
     * @example
     * // Update one Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_gradeUpdateArgs>(args: SelectSubset<T, nd_barang_gradeUpdateArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_grades.
     * @param {nd_barang_gradeDeleteManyArgs} args - Arguments to filter Nd_barang_grades to delete.
     * @example
     * // Delete a few Nd_barang_grades
     * const { count } = await prisma.nd_barang_grade.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_gradeDeleteManyArgs>(args?: SelectSubset<T, nd_barang_gradeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_grades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_grades
     * const nd_barang_grade = await prisma.nd_barang_grade.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_gradeUpdateManyArgs>(args: SelectSubset<T, nd_barang_gradeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_grade.
     * @param {nd_barang_gradeUpsertArgs} args - Arguments to update or create a Nd_barang_grade.
     * @example
     * // Update or create a Nd_barang_grade
     * const nd_barang_grade = await prisma.nd_barang_grade.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_grade
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_grade we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_gradeUpsertArgs>(args: SelectSubset<T, nd_barang_gradeUpsertArgs<ExtArgs>>): Prisma__nd_barang_gradeClient<$Result.GetResult<Prisma.$nd_barang_gradePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_grades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeCountArgs} args - Arguments to filter Nd_barang_grades to count.
     * @example
     * // Count the number of Nd_barang_grades
     * const count = await prisma.nd_barang_grade.count({
     *   where: {
     *     // ... the filter for the Nd_barang_grades we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_gradeCountArgs>(
      args?: Subset<T, nd_barang_gradeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_gradeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_grade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_gradeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_gradeAggregateArgs>(args: Subset<T, Nd_barang_gradeAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_gradeAggregateType<T>>

    /**
     * Group by Nd_barang_grade.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_gradeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_gradeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_gradeGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_gradeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_gradeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_gradeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_grade model
   */
  readonly fields: nd_barang_gradeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_grade.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_gradeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_grade model
   */
  interface nd_barang_gradeFieldRefs {
    readonly id: FieldRef<"nd_barang_grade", 'Int'>
    readonly nama: FieldRef<"nd_barang_grade", 'String'>
    readonly kode: FieldRef<"nd_barang_grade", 'String'>
    readonly keterangan: FieldRef<"nd_barang_grade", 'String'>
    readonly status_aktif: FieldRef<"nd_barang_grade", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_grade findUnique
   */
  export type nd_barang_gradeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_grade to fetch.
     */
    where: nd_barang_gradeWhereUniqueInput
  }

  /**
   * nd_barang_grade findUniqueOrThrow
   */
  export type nd_barang_gradeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_grade to fetch.
     */
    where: nd_barang_gradeWhereUniqueInput
  }

  /**
   * nd_barang_grade findFirst
   */
  export type nd_barang_gradeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_grade to fetch.
     */
    where?: nd_barang_gradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_grades to fetch.
     */
    orderBy?: nd_barang_gradeOrderByWithRelationInput | nd_barang_gradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_grades.
     */
    cursor?: nd_barang_gradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_grades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_grades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_grades.
     */
    distinct?: Nd_barang_gradeScalarFieldEnum | Nd_barang_gradeScalarFieldEnum[]
  }

  /**
   * nd_barang_grade findFirstOrThrow
   */
  export type nd_barang_gradeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_grade to fetch.
     */
    where?: nd_barang_gradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_grades to fetch.
     */
    orderBy?: nd_barang_gradeOrderByWithRelationInput | nd_barang_gradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_grades.
     */
    cursor?: nd_barang_gradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_grades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_grades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_grades.
     */
    distinct?: Nd_barang_gradeScalarFieldEnum | Nd_barang_gradeScalarFieldEnum[]
  }

  /**
   * nd_barang_grade findMany
   */
  export type nd_barang_gradeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_grades to fetch.
     */
    where?: nd_barang_gradeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_grades to fetch.
     */
    orderBy?: nd_barang_gradeOrderByWithRelationInput | nd_barang_gradeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_grades.
     */
    cursor?: nd_barang_gradeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_grades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_grades.
     */
    skip?: number
    distinct?: Nd_barang_gradeScalarFieldEnum | Nd_barang_gradeScalarFieldEnum[]
  }

  /**
   * nd_barang_grade create
   */
  export type nd_barang_gradeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_grade.
     */
    data?: XOR<nd_barang_gradeCreateInput, nd_barang_gradeUncheckedCreateInput>
  }

  /**
   * nd_barang_grade createMany
   */
  export type nd_barang_gradeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_grades.
     */
    data: nd_barang_gradeCreateManyInput | nd_barang_gradeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_grade update
   */
  export type nd_barang_gradeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_grade.
     */
    data: XOR<nd_barang_gradeUpdateInput, nd_barang_gradeUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_grade to update.
     */
    where: nd_barang_gradeWhereUniqueInput
  }

  /**
   * nd_barang_grade updateMany
   */
  export type nd_barang_gradeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_grades.
     */
    data: XOR<nd_barang_gradeUpdateManyMutationInput, nd_barang_gradeUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_grades to update
     */
    where?: nd_barang_gradeWhereInput
    /**
     * Limit how many nd_barang_grades to update.
     */
    limit?: number
  }

  /**
   * nd_barang_grade upsert
   */
  export type nd_barang_gradeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_grade to update in case it exists.
     */
    where: nd_barang_gradeWhereUniqueInput
    /**
     * In case the nd_barang_grade found by the `where` argument doesn't exist, create a new nd_barang_grade with this data.
     */
    create: XOR<nd_barang_gradeCreateInput, nd_barang_gradeUncheckedCreateInput>
    /**
     * In case the nd_barang_grade was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_gradeUpdateInput, nd_barang_gradeUncheckedUpdateInput>
  }

  /**
   * nd_barang_grade delete
   */
  export type nd_barang_gradeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_grade to delete.
     */
    where: nd_barang_gradeWhereUniqueInput
  }

  /**
   * nd_barang_grade deleteMany
   */
  export type nd_barang_gradeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_grades to delete
     */
    where?: nd_barang_gradeWhereInput
    /**
     * Limit how many nd_barang_grades to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_grade without action
   */
  export type nd_barang_gradeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_grade
     */
    select?: nd_barang_gradeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_grade
     */
    omit?: nd_barang_gradeOmit<ExtArgs> | null
  }


  /**
   * Model nd_barang_sku
   */

  export type AggregateNd_barang_sku = {
    _count: Nd_barang_skuCountAggregateOutputType | null
    _avg: Nd_barang_skuAvgAggregateOutputType | null
    _sum: Nd_barang_skuSumAggregateOutputType | null
    _min: Nd_barang_skuMinAggregateOutputType | null
    _max: Nd_barang_skuMaxAggregateOutputType | null
  }

  export type Nd_barang_skuAvgAggregateOutputType = {
    id: number | null
    barang_id: number | null
    warna_id: number | null
    satuan_id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_skuSumAggregateOutputType = {
    id: number | null
    barang_id: number | null
    warna_id: number | null
    satuan_id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_skuMinAggregateOutputType = {
    id: number | null
    sku_id: string | null
    nama_barang: string | null
    nama_jual: string | null
    barang_id: number | null
    warna_id: number | null
    satuan_id: number | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barang_skuMaxAggregateOutputType = {
    id: number | null
    sku_id: string | null
    nama_barang: string | null
    nama_jual: string | null
    barang_id: number | null
    warna_id: number | null
    satuan_id: number | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_barang_skuCountAggregateOutputType = {
    id: number
    sku_id: number
    nama_barang: number
    nama_jual: number
    barang_id: number
    warna_id: number
    satuan_id: number
    status_aktif: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_barang_skuAvgAggregateInputType = {
    id?: true
    barang_id?: true
    warna_id?: true
    satuan_id?: true
    status_aktif?: true
  }

  export type Nd_barang_skuSumAggregateInputType = {
    id?: true
    barang_id?: true
    warna_id?: true
    satuan_id?: true
    status_aktif?: true
  }

  export type Nd_barang_skuMinAggregateInputType = {
    id?: true
    sku_id?: true
    nama_barang?: true
    nama_jual?: true
    barang_id?: true
    warna_id?: true
    satuan_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barang_skuMaxAggregateInputType = {
    id?: true
    sku_id?: true
    nama_barang?: true
    nama_jual?: true
    barang_id?: true
    warna_id?: true
    satuan_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_barang_skuCountAggregateInputType = {
    id?: true
    sku_id?: true
    nama_barang?: true
    nama_jual?: true
    barang_id?: true
    warna_id?: true
    satuan_id?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_barang_skuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_sku to aggregate.
     */
    where?: nd_barang_skuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_skus to fetch.
     */
    orderBy?: nd_barang_skuOrderByWithRelationInput | nd_barang_skuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_skuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_skus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_skus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_skus
    **/
    _count?: true | Nd_barang_skuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_skuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_skuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_skuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_skuMaxAggregateInputType
  }

  export type GetNd_barang_skuAggregateType<T extends Nd_barang_skuAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_sku]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_sku[P]>
      : GetScalarType<T[P], AggregateNd_barang_sku[P]>
  }




  export type nd_barang_skuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_skuWhereInput
    orderBy?: nd_barang_skuOrderByWithAggregationInput | nd_barang_skuOrderByWithAggregationInput[]
    by: Nd_barang_skuScalarFieldEnum[] | Nd_barang_skuScalarFieldEnum
    having?: nd_barang_skuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_skuCountAggregateInputType | true
    _avg?: Nd_barang_skuAvgAggregateInputType
    _sum?: Nd_barang_skuSumAggregateInputType
    _min?: Nd_barang_skuMinAggregateInputType
    _max?: Nd_barang_skuMaxAggregateInputType
  }

  export type Nd_barang_skuGroupByOutputType = {
    id: number
    sku_id: string
    nama_barang: string
    nama_jual: string
    barang_id: number
    warna_id: number
    satuan_id: number
    status_aktif: number
    created_at: Date
    updated_at: Date
    _count: Nd_barang_skuCountAggregateOutputType | null
    _avg: Nd_barang_skuAvgAggregateOutputType | null
    _sum: Nd_barang_skuSumAggregateOutputType | null
    _min: Nd_barang_skuMinAggregateOutputType | null
    _max: Nd_barang_skuMaxAggregateOutputType | null
  }

  type GetNd_barang_skuGroupByPayload<T extends nd_barang_skuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_skuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_skuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_skuGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_skuGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_skuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sku_id?: boolean
    nama_barang?: boolean
    nama_jual?: boolean
    barang_id?: boolean
    warna_id?: boolean
    satuan_id?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["nd_barang_sku"]>



  export type nd_barang_skuSelectScalar = {
    id?: boolean
    sku_id?: boolean
    nama_barang?: boolean
    nama_jual?: boolean
    barang_id?: boolean
    warna_id?: boolean
    satuan_id?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_barang_skuOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sku_id" | "nama_barang" | "nama_jual" | "barang_id" | "warna_id" | "satuan_id" | "status_aktif" | "created_at" | "updated_at", ExtArgs["result"]["nd_barang_sku"]>

  export type $nd_barang_skuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_sku"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sku_id: string
      nama_barang: string
      nama_jual: string
      barang_id: number
      warna_id: number
      satuan_id: number
      status_aktif: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_barang_sku"]>
    composites: {}
  }

  type nd_barang_skuGetPayload<S extends boolean | null | undefined | nd_barang_skuDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_skuPayload, S>

  type nd_barang_skuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_skuFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_skuCountAggregateInputType | true
    }

  export interface nd_barang_skuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_sku'], meta: { name: 'nd_barang_sku' } }
    /**
     * Find zero or one Nd_barang_sku that matches the filter.
     * @param {nd_barang_skuFindUniqueArgs} args - Arguments to find a Nd_barang_sku
     * @example
     * // Get one Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_skuFindUniqueArgs>(args: SelectSubset<T, nd_barang_skuFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_sku that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_skuFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_sku
     * @example
     * // Get one Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_skuFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_skuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_sku that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuFindFirstArgs} args - Arguments to find a Nd_barang_sku
     * @example
     * // Get one Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_skuFindFirstArgs>(args?: SelectSubset<T, nd_barang_skuFindFirstArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_sku that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_sku
     * @example
     * // Get one Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_skuFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_skuFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_skus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_skus
     * const nd_barang_skus = await prisma.nd_barang_sku.findMany()
     * 
     * // Get first 10 Nd_barang_skus
     * const nd_barang_skus = await prisma.nd_barang_sku.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_skuWithIdOnly = await prisma.nd_barang_sku.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_skuFindManyArgs>(args?: SelectSubset<T, nd_barang_skuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_sku.
     * @param {nd_barang_skuCreateArgs} args - Arguments to create a Nd_barang_sku.
     * @example
     * // Create one Nd_barang_sku
     * const Nd_barang_sku = await prisma.nd_barang_sku.create({
     *   data: {
     *     // ... data to create a Nd_barang_sku
     *   }
     * })
     * 
     */
    create<T extends nd_barang_skuCreateArgs>(args: SelectSubset<T, nd_barang_skuCreateArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_skus.
     * @param {nd_barang_skuCreateManyArgs} args - Arguments to create many Nd_barang_skus.
     * @example
     * // Create many Nd_barang_skus
     * const nd_barang_sku = await prisma.nd_barang_sku.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_skuCreateManyArgs>(args?: SelectSubset<T, nd_barang_skuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_sku.
     * @param {nd_barang_skuDeleteArgs} args - Arguments to delete one Nd_barang_sku.
     * @example
     * // Delete one Nd_barang_sku
     * const Nd_barang_sku = await prisma.nd_barang_sku.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_sku
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_skuDeleteArgs>(args: SelectSubset<T, nd_barang_skuDeleteArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_sku.
     * @param {nd_barang_skuUpdateArgs} args - Arguments to update one Nd_barang_sku.
     * @example
     * // Update one Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_skuUpdateArgs>(args: SelectSubset<T, nd_barang_skuUpdateArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_skus.
     * @param {nd_barang_skuDeleteManyArgs} args - Arguments to filter Nd_barang_skus to delete.
     * @example
     * // Delete a few Nd_barang_skus
     * const { count } = await prisma.nd_barang_sku.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_skuDeleteManyArgs>(args?: SelectSubset<T, nd_barang_skuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_skus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_skus
     * const nd_barang_sku = await prisma.nd_barang_sku.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_skuUpdateManyArgs>(args: SelectSubset<T, nd_barang_skuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_sku.
     * @param {nd_barang_skuUpsertArgs} args - Arguments to update or create a Nd_barang_sku.
     * @example
     * // Update or create a Nd_barang_sku
     * const nd_barang_sku = await prisma.nd_barang_sku.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_sku
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_sku we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_skuUpsertArgs>(args: SelectSubset<T, nd_barang_skuUpsertArgs<ExtArgs>>): Prisma__nd_barang_skuClient<$Result.GetResult<Prisma.$nd_barang_skuPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_skus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuCountArgs} args - Arguments to filter Nd_barang_skus to count.
     * @example
     * // Count the number of Nd_barang_skus
     * const count = await prisma.nd_barang_sku.count({
     *   where: {
     *     // ... the filter for the Nd_barang_skus we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_skuCountArgs>(
      args?: Subset<T, nd_barang_skuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_skuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_sku.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_skuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_skuAggregateArgs>(args: Subset<T, Nd_barang_skuAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_skuAggregateType<T>>

    /**
     * Group by Nd_barang_sku.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_skuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_skuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_skuGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_skuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_skuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_skuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_sku model
   */
  readonly fields: nd_barang_skuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_sku.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_skuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_sku model
   */
  interface nd_barang_skuFieldRefs {
    readonly id: FieldRef<"nd_barang_sku", 'Int'>
    readonly sku_id: FieldRef<"nd_barang_sku", 'String'>
    readonly nama_barang: FieldRef<"nd_barang_sku", 'String'>
    readonly nama_jual: FieldRef<"nd_barang_sku", 'String'>
    readonly barang_id: FieldRef<"nd_barang_sku", 'Int'>
    readonly warna_id: FieldRef<"nd_barang_sku", 'Int'>
    readonly satuan_id: FieldRef<"nd_barang_sku", 'Int'>
    readonly status_aktif: FieldRef<"nd_barang_sku", 'Int'>
    readonly created_at: FieldRef<"nd_barang_sku", 'DateTime'>
    readonly updated_at: FieldRef<"nd_barang_sku", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_sku findUnique
   */
  export type nd_barang_skuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_sku to fetch.
     */
    where: nd_barang_skuWhereUniqueInput
  }

  /**
   * nd_barang_sku findUniqueOrThrow
   */
  export type nd_barang_skuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_sku to fetch.
     */
    where: nd_barang_skuWhereUniqueInput
  }

  /**
   * nd_barang_sku findFirst
   */
  export type nd_barang_skuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_sku to fetch.
     */
    where?: nd_barang_skuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_skus to fetch.
     */
    orderBy?: nd_barang_skuOrderByWithRelationInput | nd_barang_skuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_skus.
     */
    cursor?: nd_barang_skuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_skus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_skus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_skus.
     */
    distinct?: Nd_barang_skuScalarFieldEnum | Nd_barang_skuScalarFieldEnum[]
  }

  /**
   * nd_barang_sku findFirstOrThrow
   */
  export type nd_barang_skuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_sku to fetch.
     */
    where?: nd_barang_skuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_skus to fetch.
     */
    orderBy?: nd_barang_skuOrderByWithRelationInput | nd_barang_skuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_skus.
     */
    cursor?: nd_barang_skuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_skus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_skus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_skus.
     */
    distinct?: Nd_barang_skuScalarFieldEnum | Nd_barang_skuScalarFieldEnum[]
  }

  /**
   * nd_barang_sku findMany
   */
  export type nd_barang_skuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_skus to fetch.
     */
    where?: nd_barang_skuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_skus to fetch.
     */
    orderBy?: nd_barang_skuOrderByWithRelationInput | nd_barang_skuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_skus.
     */
    cursor?: nd_barang_skuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_skus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_skus.
     */
    skip?: number
    distinct?: Nd_barang_skuScalarFieldEnum | Nd_barang_skuScalarFieldEnum[]
  }

  /**
   * nd_barang_sku create
   */
  export type nd_barang_skuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_sku.
     */
    data?: XOR<nd_barang_skuCreateInput, nd_barang_skuUncheckedCreateInput>
  }

  /**
   * nd_barang_sku createMany
   */
  export type nd_barang_skuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_skus.
     */
    data: nd_barang_skuCreateManyInput | nd_barang_skuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_sku update
   */
  export type nd_barang_skuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_sku.
     */
    data: XOR<nd_barang_skuUpdateInput, nd_barang_skuUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_sku to update.
     */
    where: nd_barang_skuWhereUniqueInput
  }

  /**
   * nd_barang_sku updateMany
   */
  export type nd_barang_skuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_skus.
     */
    data: XOR<nd_barang_skuUpdateManyMutationInput, nd_barang_skuUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_skus to update
     */
    where?: nd_barang_skuWhereInput
    /**
     * Limit how many nd_barang_skus to update.
     */
    limit?: number
  }

  /**
   * nd_barang_sku upsert
   */
  export type nd_barang_skuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_sku to update in case it exists.
     */
    where: nd_barang_skuWhereUniqueInput
    /**
     * In case the nd_barang_sku found by the `where` argument doesn't exist, create a new nd_barang_sku with this data.
     */
    create: XOR<nd_barang_skuCreateInput, nd_barang_skuUncheckedCreateInput>
    /**
     * In case the nd_barang_sku was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_skuUpdateInput, nd_barang_skuUncheckedUpdateInput>
  }

  /**
   * nd_barang_sku delete
   */
  export type nd_barang_skuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_sku to delete.
     */
    where: nd_barang_skuWhereUniqueInput
  }

  /**
   * nd_barang_sku deleteMany
   */
  export type nd_barang_skuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_skus to delete
     */
    where?: nd_barang_skuWhereInput
    /**
     * Limit how many nd_barang_skus to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_sku without action
   */
  export type nd_barang_skuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_sku
     */
    select?: nd_barang_skuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_sku
     */
    omit?: nd_barang_skuOmit<ExtArgs> | null
  }


  /**
   * Model nd_barang_tipe
   */

  export type AggregateNd_barang_tipe = {
    _count: Nd_barang_tipeCountAggregateOutputType | null
    _avg: Nd_barang_tipeAvgAggregateOutputType | null
    _sum: Nd_barang_tipeSumAggregateOutputType | null
    _min: Nd_barang_tipeMinAggregateOutputType | null
    _max: Nd_barang_tipeMaxAggregateOutputType | null
  }

  export type Nd_barang_tipeAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_tipeSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_barang_tipeMinAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_tipeMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    kode: string | null
    keterangan: string | null
    status_aktif: number | null
  }

  export type Nd_barang_tipeCountAggregateOutputType = {
    id: number
    nama: number
    kode: number
    keterangan: number
    status_aktif: number
    _all: number
  }


  export type Nd_barang_tipeAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_tipeSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_barang_tipeMinAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_tipeMaxAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
  }

  export type Nd_barang_tipeCountAggregateInputType = {
    id?: true
    nama?: true
    kode?: true
    keterangan?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_barang_tipeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_tipe to aggregate.
     */
    where?: nd_barang_tipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_tipes to fetch.
     */
    orderBy?: nd_barang_tipeOrderByWithRelationInput | nd_barang_tipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_barang_tipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_tipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_tipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_barang_tipes
    **/
    _count?: true | Nd_barang_tipeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_barang_tipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_barang_tipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_barang_tipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_barang_tipeMaxAggregateInputType
  }

  export type GetNd_barang_tipeAggregateType<T extends Nd_barang_tipeAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_barang_tipe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_barang_tipe[P]>
      : GetScalarType<T[P], AggregateNd_barang_tipe[P]>
  }




  export type nd_barang_tipeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_barang_tipeWhereInput
    orderBy?: nd_barang_tipeOrderByWithAggregationInput | nd_barang_tipeOrderByWithAggregationInput[]
    by: Nd_barang_tipeScalarFieldEnum[] | Nd_barang_tipeScalarFieldEnum
    having?: nd_barang_tipeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_barang_tipeCountAggregateInputType | true
    _avg?: Nd_barang_tipeAvgAggregateInputType
    _sum?: Nd_barang_tipeSumAggregateInputType
    _min?: Nd_barang_tipeMinAggregateInputType
    _max?: Nd_barang_tipeMaxAggregateInputType
  }

  export type Nd_barang_tipeGroupByOutputType = {
    id: number
    nama: string
    kode: string
    keterangan: string | null
    status_aktif: number
    _count: Nd_barang_tipeCountAggregateOutputType | null
    _avg: Nd_barang_tipeAvgAggregateOutputType | null
    _sum: Nd_barang_tipeSumAggregateOutputType | null
    _min: Nd_barang_tipeMinAggregateOutputType | null
    _max: Nd_barang_tipeMaxAggregateOutputType | null
  }

  type GetNd_barang_tipeGroupByPayload<T extends nd_barang_tipeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_barang_tipeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_barang_tipeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_barang_tipeGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_barang_tipeGroupByOutputType[P]>
        }
      >
    >


  export type nd_barang_tipeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_barang_tipe"]>



  export type nd_barang_tipeSelectScalar = {
    id?: boolean
    nama?: boolean
    kode?: boolean
    keterangan?: boolean
    status_aktif?: boolean
  }

  export type nd_barang_tipeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "kode" | "keterangan" | "status_aktif", ExtArgs["result"]["nd_barang_tipe"]>

  export type $nd_barang_tipePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_barang_tipe"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      kode: string
      keterangan: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_barang_tipe"]>
    composites: {}
  }

  type nd_barang_tipeGetPayload<S extends boolean | null | undefined | nd_barang_tipeDefaultArgs> = $Result.GetResult<Prisma.$nd_barang_tipePayload, S>

  type nd_barang_tipeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_barang_tipeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_barang_tipeCountAggregateInputType | true
    }

  export interface nd_barang_tipeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_barang_tipe'], meta: { name: 'nd_barang_tipe' } }
    /**
     * Find zero or one Nd_barang_tipe that matches the filter.
     * @param {nd_barang_tipeFindUniqueArgs} args - Arguments to find a Nd_barang_tipe
     * @example
     * // Get one Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_barang_tipeFindUniqueArgs>(args: SelectSubset<T, nd_barang_tipeFindUniqueArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_barang_tipe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_barang_tipeFindUniqueOrThrowArgs} args - Arguments to find a Nd_barang_tipe
     * @example
     * // Get one Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_barang_tipeFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_barang_tipeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_tipe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeFindFirstArgs} args - Arguments to find a Nd_barang_tipe
     * @example
     * // Get one Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_barang_tipeFindFirstArgs>(args?: SelectSubset<T, nd_barang_tipeFindFirstArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_barang_tipe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeFindFirstOrThrowArgs} args - Arguments to find a Nd_barang_tipe
     * @example
     * // Get one Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_barang_tipeFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_barang_tipeFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_barang_tipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_barang_tipes
     * const nd_barang_tipes = await prisma.nd_barang_tipe.findMany()
     * 
     * // Get first 10 Nd_barang_tipes
     * const nd_barang_tipes = await prisma.nd_barang_tipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_barang_tipeWithIdOnly = await prisma.nd_barang_tipe.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_barang_tipeFindManyArgs>(args?: SelectSubset<T, nd_barang_tipeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_barang_tipe.
     * @param {nd_barang_tipeCreateArgs} args - Arguments to create a Nd_barang_tipe.
     * @example
     * // Create one Nd_barang_tipe
     * const Nd_barang_tipe = await prisma.nd_barang_tipe.create({
     *   data: {
     *     // ... data to create a Nd_barang_tipe
     *   }
     * })
     * 
     */
    create<T extends nd_barang_tipeCreateArgs>(args: SelectSubset<T, nd_barang_tipeCreateArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_barang_tipes.
     * @param {nd_barang_tipeCreateManyArgs} args - Arguments to create many Nd_barang_tipes.
     * @example
     * // Create many Nd_barang_tipes
     * const nd_barang_tipe = await prisma.nd_barang_tipe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_barang_tipeCreateManyArgs>(args?: SelectSubset<T, nd_barang_tipeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_barang_tipe.
     * @param {nd_barang_tipeDeleteArgs} args - Arguments to delete one Nd_barang_tipe.
     * @example
     * // Delete one Nd_barang_tipe
     * const Nd_barang_tipe = await prisma.nd_barang_tipe.delete({
     *   where: {
     *     // ... filter to delete one Nd_barang_tipe
     *   }
     * })
     * 
     */
    delete<T extends nd_barang_tipeDeleteArgs>(args: SelectSubset<T, nd_barang_tipeDeleteArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_barang_tipe.
     * @param {nd_barang_tipeUpdateArgs} args - Arguments to update one Nd_barang_tipe.
     * @example
     * // Update one Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_barang_tipeUpdateArgs>(args: SelectSubset<T, nd_barang_tipeUpdateArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_barang_tipes.
     * @param {nd_barang_tipeDeleteManyArgs} args - Arguments to filter Nd_barang_tipes to delete.
     * @example
     * // Delete a few Nd_barang_tipes
     * const { count } = await prisma.nd_barang_tipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_barang_tipeDeleteManyArgs>(args?: SelectSubset<T, nd_barang_tipeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_barang_tipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_barang_tipes
     * const nd_barang_tipe = await prisma.nd_barang_tipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_barang_tipeUpdateManyArgs>(args: SelectSubset<T, nd_barang_tipeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_barang_tipe.
     * @param {nd_barang_tipeUpsertArgs} args - Arguments to update or create a Nd_barang_tipe.
     * @example
     * // Update or create a Nd_barang_tipe
     * const nd_barang_tipe = await prisma.nd_barang_tipe.upsert({
     *   create: {
     *     // ... data to create a Nd_barang_tipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_barang_tipe we want to update
     *   }
     * })
     */
    upsert<T extends nd_barang_tipeUpsertArgs>(args: SelectSubset<T, nd_barang_tipeUpsertArgs<ExtArgs>>): Prisma__nd_barang_tipeClient<$Result.GetResult<Prisma.$nd_barang_tipePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_barang_tipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeCountArgs} args - Arguments to filter Nd_barang_tipes to count.
     * @example
     * // Count the number of Nd_barang_tipes
     * const count = await prisma.nd_barang_tipe.count({
     *   where: {
     *     // ... the filter for the Nd_barang_tipes we want to count
     *   }
     * })
    **/
    count<T extends nd_barang_tipeCountArgs>(
      args?: Subset<T, nd_barang_tipeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_barang_tipeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_barang_tipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_barang_tipeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_barang_tipeAggregateArgs>(args: Subset<T, Nd_barang_tipeAggregateArgs>): Prisma.PrismaPromise<GetNd_barang_tipeAggregateType<T>>

    /**
     * Group by Nd_barang_tipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_barang_tipeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_barang_tipeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_barang_tipeGroupByArgs['orderBy'] }
        : { orderBy?: nd_barang_tipeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_barang_tipeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_barang_tipeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_barang_tipe model
   */
  readonly fields: nd_barang_tipeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_barang_tipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_barang_tipeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_barang_tipe model
   */
  interface nd_barang_tipeFieldRefs {
    readonly id: FieldRef<"nd_barang_tipe", 'Int'>
    readonly nama: FieldRef<"nd_barang_tipe", 'String'>
    readonly kode: FieldRef<"nd_barang_tipe", 'String'>
    readonly keterangan: FieldRef<"nd_barang_tipe", 'String'>
    readonly status_aktif: FieldRef<"nd_barang_tipe", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_barang_tipe findUnique
   */
  export type nd_barang_tipeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_tipe to fetch.
     */
    where: nd_barang_tipeWhereUniqueInput
  }

  /**
   * nd_barang_tipe findUniqueOrThrow
   */
  export type nd_barang_tipeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_tipe to fetch.
     */
    where: nd_barang_tipeWhereUniqueInput
  }

  /**
   * nd_barang_tipe findFirst
   */
  export type nd_barang_tipeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_tipe to fetch.
     */
    where?: nd_barang_tipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_tipes to fetch.
     */
    orderBy?: nd_barang_tipeOrderByWithRelationInput | nd_barang_tipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_tipes.
     */
    cursor?: nd_barang_tipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_tipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_tipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_tipes.
     */
    distinct?: Nd_barang_tipeScalarFieldEnum | Nd_barang_tipeScalarFieldEnum[]
  }

  /**
   * nd_barang_tipe findFirstOrThrow
   */
  export type nd_barang_tipeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_tipe to fetch.
     */
    where?: nd_barang_tipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_tipes to fetch.
     */
    orderBy?: nd_barang_tipeOrderByWithRelationInput | nd_barang_tipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_barang_tipes.
     */
    cursor?: nd_barang_tipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_tipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_tipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_barang_tipes.
     */
    distinct?: Nd_barang_tipeScalarFieldEnum | Nd_barang_tipeScalarFieldEnum[]
  }

  /**
   * nd_barang_tipe findMany
   */
  export type nd_barang_tipeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter, which nd_barang_tipes to fetch.
     */
    where?: nd_barang_tipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_barang_tipes to fetch.
     */
    orderBy?: nd_barang_tipeOrderByWithRelationInput | nd_barang_tipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_barang_tipes.
     */
    cursor?: nd_barang_tipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_barang_tipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_barang_tipes.
     */
    skip?: number
    distinct?: Nd_barang_tipeScalarFieldEnum | Nd_barang_tipeScalarFieldEnum[]
  }

  /**
   * nd_barang_tipe create
   */
  export type nd_barang_tipeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_barang_tipe.
     */
    data?: XOR<nd_barang_tipeCreateInput, nd_barang_tipeUncheckedCreateInput>
  }

  /**
   * nd_barang_tipe createMany
   */
  export type nd_barang_tipeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_barang_tipes.
     */
    data: nd_barang_tipeCreateManyInput | nd_barang_tipeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_barang_tipe update
   */
  export type nd_barang_tipeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_barang_tipe.
     */
    data: XOR<nd_barang_tipeUpdateInput, nd_barang_tipeUncheckedUpdateInput>
    /**
     * Choose, which nd_barang_tipe to update.
     */
    where: nd_barang_tipeWhereUniqueInput
  }

  /**
   * nd_barang_tipe updateMany
   */
  export type nd_barang_tipeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_barang_tipes.
     */
    data: XOR<nd_barang_tipeUpdateManyMutationInput, nd_barang_tipeUncheckedUpdateManyInput>
    /**
     * Filter which nd_barang_tipes to update
     */
    where?: nd_barang_tipeWhereInput
    /**
     * Limit how many nd_barang_tipes to update.
     */
    limit?: number
  }

  /**
   * nd_barang_tipe upsert
   */
  export type nd_barang_tipeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_barang_tipe to update in case it exists.
     */
    where: nd_barang_tipeWhereUniqueInput
    /**
     * In case the nd_barang_tipe found by the `where` argument doesn't exist, create a new nd_barang_tipe with this data.
     */
    create: XOR<nd_barang_tipeCreateInput, nd_barang_tipeUncheckedCreateInput>
    /**
     * In case the nd_barang_tipe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_barang_tipeUpdateInput, nd_barang_tipeUncheckedUpdateInput>
  }

  /**
   * nd_barang_tipe delete
   */
  export type nd_barang_tipeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
    /**
     * Filter which nd_barang_tipe to delete.
     */
    where: nd_barang_tipeWhereUniqueInput
  }

  /**
   * nd_barang_tipe deleteMany
   */
  export type nd_barang_tipeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_barang_tipes to delete
     */
    where?: nd_barang_tipeWhereInput
    /**
     * Limit how many nd_barang_tipes to delete.
     */
    limit?: number
  }

  /**
   * nd_barang_tipe without action
   */
  export type nd_barang_tipeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang_tipe
     */
    select?: nd_barang_tipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang_tipe
     */
    omit?: nd_barang_tipeOmit<ExtArgs> | null
  }


  /**
   * Model nd_customer
   */

  export type AggregateNd_customer = {
    _count: Nd_customerCountAggregateOutputType | null
    _avg: Nd_customerAvgAggregateOutputType | null
    _sum: Nd_customerSumAggregateOutputType | null
    _min: Nd_customerMinAggregateOutputType | null
    _max: Nd_customerMaxAggregateOutputType | null
  }

  export type Nd_customerAvgAggregateOutputType = {
    id: number | null
    tempo_kredit: number | null
    warning_kredit: number | null
    limit_warning_type: number | null
    limit_amount: number | null
    limit_atas: number | null
    limit_warning_amount: number | null
    user_id: number | null
  }

  export type Nd_customerSumAggregateOutputType = {
    id: number | null
    tempo_kredit: number | null
    warning_kredit: number | null
    limit_warning_type: number | null
    limit_amount: number | null
    limit_atas: number | null
    limit_warning_amount: number | null
    user_id: number | null
  }

  export type Nd_customerMinAggregateOutputType = {
    id: number | null
    customer_type_id: boolean | null
    nama: string | null
    alias: string | null
    alamat: string | null
    telepon: string | null
    telepon1: string | null
    telepon2: string | null
    npwp: string | null
    nik: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    email: string | null
    contact_person: string | null
    tempo_kredit: number | null
    warning_kredit: number | null
    limit_warning_type: number | null
    limit_amount: number | null
    limit_atas: number | null
    limit_warning_amount: number | null
    status_aktif: boolean | null
    img_link: string | null
    npwp_link: string | null
    ktp_link: string | null
    medsos_link: string | null
    updated_at: Date | null
    tipe_company: string | null
    blok: string | null
    no: string | null
    rt: string | null
    rw: string | null
    kecamatan: string | null
    kelurahan: string | null
    locked_status: boolean | null
    jenis_pekerjaan: string | null
    jenis_produk: string | null
    user_id: number | null
  }

  export type Nd_customerMaxAggregateOutputType = {
    id: number | null
    customer_type_id: boolean | null
    nama: string | null
    alias: string | null
    alamat: string | null
    telepon: string | null
    telepon1: string | null
    telepon2: string | null
    npwp: string | null
    nik: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    email: string | null
    contact_person: string | null
    tempo_kredit: number | null
    warning_kredit: number | null
    limit_warning_type: number | null
    limit_amount: number | null
    limit_atas: number | null
    limit_warning_amount: number | null
    status_aktif: boolean | null
    img_link: string | null
    npwp_link: string | null
    ktp_link: string | null
    medsos_link: string | null
    updated_at: Date | null
    tipe_company: string | null
    blok: string | null
    no: string | null
    rt: string | null
    rw: string | null
    kecamatan: string | null
    kelurahan: string | null
    locked_status: boolean | null
    jenis_pekerjaan: string | null
    jenis_produk: string | null
    user_id: number | null
  }

  export type Nd_customerCountAggregateOutputType = {
    id: number
    customer_type_id: number
    nama: number
    alias: number
    alamat: number
    telepon: number
    telepon1: number
    telepon2: number
    npwp: number
    nik: number
    kota: number
    provinsi: number
    kode_pos: number
    email: number
    contact_person: number
    tempo_kredit: number
    warning_kredit: number
    limit_warning_type: number
    limit_amount: number
    limit_atas: number
    limit_warning_amount: number
    status_aktif: number
    img_link: number
    npwp_link: number
    ktp_link: number
    medsos_link: number
    updated_at: number
    tipe_company: number
    blok: number
    no: number
    rt: number
    rw: number
    kecamatan: number
    kelurahan: number
    locked_status: number
    jenis_pekerjaan: number
    jenis_produk: number
    user_id: number
    _all: number
  }


  export type Nd_customerAvgAggregateInputType = {
    id?: true
    tempo_kredit?: true
    warning_kredit?: true
    limit_warning_type?: true
    limit_amount?: true
    limit_atas?: true
    limit_warning_amount?: true
    user_id?: true
  }

  export type Nd_customerSumAggregateInputType = {
    id?: true
    tempo_kredit?: true
    warning_kredit?: true
    limit_warning_type?: true
    limit_amount?: true
    limit_atas?: true
    limit_warning_amount?: true
    user_id?: true
  }

  export type Nd_customerMinAggregateInputType = {
    id?: true
    customer_type_id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    telepon1?: true
    telepon2?: true
    npwp?: true
    nik?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    email?: true
    contact_person?: true
    tempo_kredit?: true
    warning_kredit?: true
    limit_warning_type?: true
    limit_amount?: true
    limit_atas?: true
    limit_warning_amount?: true
    status_aktif?: true
    img_link?: true
    npwp_link?: true
    ktp_link?: true
    medsos_link?: true
    updated_at?: true
    tipe_company?: true
    blok?: true
    no?: true
    rt?: true
    rw?: true
    kecamatan?: true
    kelurahan?: true
    locked_status?: true
    jenis_pekerjaan?: true
    jenis_produk?: true
    user_id?: true
  }

  export type Nd_customerMaxAggregateInputType = {
    id?: true
    customer_type_id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    telepon1?: true
    telepon2?: true
    npwp?: true
    nik?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    email?: true
    contact_person?: true
    tempo_kredit?: true
    warning_kredit?: true
    limit_warning_type?: true
    limit_amount?: true
    limit_atas?: true
    limit_warning_amount?: true
    status_aktif?: true
    img_link?: true
    npwp_link?: true
    ktp_link?: true
    medsos_link?: true
    updated_at?: true
    tipe_company?: true
    blok?: true
    no?: true
    rt?: true
    rw?: true
    kecamatan?: true
    kelurahan?: true
    locked_status?: true
    jenis_pekerjaan?: true
    jenis_produk?: true
    user_id?: true
  }

  export type Nd_customerCountAggregateInputType = {
    id?: true
    customer_type_id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    telepon1?: true
    telepon2?: true
    npwp?: true
    nik?: true
    kota?: true
    provinsi?: true
    kode_pos?: true
    email?: true
    contact_person?: true
    tempo_kredit?: true
    warning_kredit?: true
    limit_warning_type?: true
    limit_amount?: true
    limit_atas?: true
    limit_warning_amount?: true
    status_aktif?: true
    img_link?: true
    npwp_link?: true
    ktp_link?: true
    medsos_link?: true
    updated_at?: true
    tipe_company?: true
    blok?: true
    no?: true
    rt?: true
    rw?: true
    kecamatan?: true
    kelurahan?: true
    locked_status?: true
    jenis_pekerjaan?: true
    jenis_produk?: true
    user_id?: true
    _all?: true
  }

  export type Nd_customerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_customer to aggregate.
     */
    where?: nd_customerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_customers to fetch.
     */
    orderBy?: nd_customerOrderByWithRelationInput | nd_customerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_customerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_customers
    **/
    _count?: true | Nd_customerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_customerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_customerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_customerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_customerMaxAggregateInputType
  }

  export type GetNd_customerAggregateType<T extends Nd_customerAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_customer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_customer[P]>
      : GetScalarType<T[P], AggregateNd_customer[P]>
  }




  export type nd_customerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_customerWhereInput
    orderBy?: nd_customerOrderByWithAggregationInput | nd_customerOrderByWithAggregationInput[]
    by: Nd_customerScalarFieldEnum[] | Nd_customerScalarFieldEnum
    having?: nd_customerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_customerCountAggregateInputType | true
    _avg?: Nd_customerAvgAggregateInputType
    _sum?: Nd_customerSumAggregateInputType
    _min?: Nd_customerMinAggregateInputType
    _max?: Nd_customerMaxAggregateInputType
  }

  export type Nd_customerGroupByOutputType = {
    id: number
    customer_type_id: boolean
    nama: string | null
    alias: string
    alamat: string | null
    telepon: string | null
    telepon1: string | null
    telepon2: string | null
    npwp: string | null
    nik: string | null
    kota: string | null
    provinsi: string | null
    kode_pos: string | null
    email: string | null
    contact_person: string
    tempo_kredit: number | null
    warning_kredit: number | null
    limit_warning_type: number | null
    limit_amount: number | null
    limit_atas: number | null
    limit_warning_amount: number | null
    status_aktif: boolean
    img_link: string | null
    npwp_link: string | null
    ktp_link: string | null
    medsos_link: string | null
    updated_at: Date
    tipe_company: string | null
    blok: string
    no: string | null
    rt: string
    rw: string
    kecamatan: string
    kelurahan: string
    locked_status: boolean
    jenis_pekerjaan: string | null
    jenis_produk: string | null
    user_id: number
    _count: Nd_customerCountAggregateOutputType | null
    _avg: Nd_customerAvgAggregateOutputType | null
    _sum: Nd_customerSumAggregateOutputType | null
    _min: Nd_customerMinAggregateOutputType | null
    _max: Nd_customerMaxAggregateOutputType | null
  }

  type GetNd_customerGroupByPayload<T extends nd_customerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_customerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_customerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_customerGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_customerGroupByOutputType[P]>
        }
      >
    >


  export type nd_customerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customer_type_id?: boolean
    nama?: boolean
    alias?: boolean
    alamat?: boolean
    telepon?: boolean
    telepon1?: boolean
    telepon2?: boolean
    npwp?: boolean
    nik?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    email?: boolean
    contact_person?: boolean
    tempo_kredit?: boolean
    warning_kredit?: boolean
    limit_warning_type?: boolean
    limit_amount?: boolean
    limit_atas?: boolean
    limit_warning_amount?: boolean
    status_aktif?: boolean
    img_link?: boolean
    npwp_link?: boolean
    ktp_link?: boolean
    medsos_link?: boolean
    updated_at?: boolean
    tipe_company?: boolean
    blok?: boolean
    no?: boolean
    rt?: boolean
    rw?: boolean
    kecamatan?: boolean
    kelurahan?: boolean
    locked_status?: boolean
    jenis_pekerjaan?: boolean
    jenis_produk?: boolean
    user_id?: boolean
  }, ExtArgs["result"]["nd_customer"]>



  export type nd_customerSelectScalar = {
    id?: boolean
    customer_type_id?: boolean
    nama?: boolean
    alias?: boolean
    alamat?: boolean
    telepon?: boolean
    telepon1?: boolean
    telepon2?: boolean
    npwp?: boolean
    nik?: boolean
    kota?: boolean
    provinsi?: boolean
    kode_pos?: boolean
    email?: boolean
    contact_person?: boolean
    tempo_kredit?: boolean
    warning_kredit?: boolean
    limit_warning_type?: boolean
    limit_amount?: boolean
    limit_atas?: boolean
    limit_warning_amount?: boolean
    status_aktif?: boolean
    img_link?: boolean
    npwp_link?: boolean
    ktp_link?: boolean
    medsos_link?: boolean
    updated_at?: boolean
    tipe_company?: boolean
    blok?: boolean
    no?: boolean
    rt?: boolean
    rw?: boolean
    kecamatan?: boolean
    kelurahan?: boolean
    locked_status?: boolean
    jenis_pekerjaan?: boolean
    jenis_produk?: boolean
    user_id?: boolean
  }

  export type nd_customerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customer_type_id" | "nama" | "alias" | "alamat" | "telepon" | "telepon1" | "telepon2" | "npwp" | "nik" | "kota" | "provinsi" | "kode_pos" | "email" | "contact_person" | "tempo_kredit" | "warning_kredit" | "limit_warning_type" | "limit_amount" | "limit_atas" | "limit_warning_amount" | "status_aktif" | "img_link" | "npwp_link" | "ktp_link" | "medsos_link" | "updated_at" | "tipe_company" | "blok" | "no" | "rt" | "rw" | "kecamatan" | "kelurahan" | "locked_status" | "jenis_pekerjaan" | "jenis_produk" | "user_id", ExtArgs["result"]["nd_customer"]>

  export type $nd_customerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_customer"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customer_type_id: boolean
      nama: string | null
      alias: string
      alamat: string | null
      telepon: string | null
      telepon1: string | null
      telepon2: string | null
      npwp: string | null
      nik: string | null
      kota: string | null
      provinsi: string | null
      kode_pos: string | null
      email: string | null
      contact_person: string
      tempo_kredit: number | null
      warning_kredit: number | null
      limit_warning_type: number | null
      limit_amount: number | null
      limit_atas: number | null
      limit_warning_amount: number | null
      status_aktif: boolean
      img_link: string | null
      npwp_link: string | null
      ktp_link: string | null
      medsos_link: string | null
      updated_at: Date
      tipe_company: string | null
      blok: string
      no: string | null
      rt: string
      rw: string
      kecamatan: string
      kelurahan: string
      locked_status: boolean
      jenis_pekerjaan: string | null
      jenis_produk: string | null
      user_id: number
    }, ExtArgs["result"]["nd_customer"]>
    composites: {}
  }

  type nd_customerGetPayload<S extends boolean | null | undefined | nd_customerDefaultArgs> = $Result.GetResult<Prisma.$nd_customerPayload, S>

  type nd_customerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_customerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_customerCountAggregateInputType | true
    }

  export interface nd_customerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_customer'], meta: { name: 'nd_customer' } }
    /**
     * Find zero or one Nd_customer that matches the filter.
     * @param {nd_customerFindUniqueArgs} args - Arguments to find a Nd_customer
     * @example
     * // Get one Nd_customer
     * const nd_customer = await prisma.nd_customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_customerFindUniqueArgs>(args: SelectSubset<T, nd_customerFindUniqueArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_customer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_customerFindUniqueOrThrowArgs} args - Arguments to find a Nd_customer
     * @example
     * // Get one Nd_customer
     * const nd_customer = await prisma.nd_customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_customerFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_customerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerFindFirstArgs} args - Arguments to find a Nd_customer
     * @example
     * // Get one Nd_customer
     * const nd_customer = await prisma.nd_customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_customerFindFirstArgs>(args?: SelectSubset<T, nd_customerFindFirstArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerFindFirstOrThrowArgs} args - Arguments to find a Nd_customer
     * @example
     * // Get one Nd_customer
     * const nd_customer = await prisma.nd_customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_customerFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_customerFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_customers
     * const nd_customers = await prisma.nd_customer.findMany()
     * 
     * // Get first 10 Nd_customers
     * const nd_customers = await prisma.nd_customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_customerWithIdOnly = await prisma.nd_customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_customerFindManyArgs>(args?: SelectSubset<T, nd_customerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_customer.
     * @param {nd_customerCreateArgs} args - Arguments to create a Nd_customer.
     * @example
     * // Create one Nd_customer
     * const Nd_customer = await prisma.nd_customer.create({
     *   data: {
     *     // ... data to create a Nd_customer
     *   }
     * })
     * 
     */
    create<T extends nd_customerCreateArgs>(args: SelectSubset<T, nd_customerCreateArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_customers.
     * @param {nd_customerCreateManyArgs} args - Arguments to create many Nd_customers.
     * @example
     * // Create many Nd_customers
     * const nd_customer = await prisma.nd_customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_customerCreateManyArgs>(args?: SelectSubset<T, nd_customerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_customer.
     * @param {nd_customerDeleteArgs} args - Arguments to delete one Nd_customer.
     * @example
     * // Delete one Nd_customer
     * const Nd_customer = await prisma.nd_customer.delete({
     *   where: {
     *     // ... filter to delete one Nd_customer
     *   }
     * })
     * 
     */
    delete<T extends nd_customerDeleteArgs>(args: SelectSubset<T, nd_customerDeleteArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_customer.
     * @param {nd_customerUpdateArgs} args - Arguments to update one Nd_customer.
     * @example
     * // Update one Nd_customer
     * const nd_customer = await prisma.nd_customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_customerUpdateArgs>(args: SelectSubset<T, nd_customerUpdateArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_customers.
     * @param {nd_customerDeleteManyArgs} args - Arguments to filter Nd_customers to delete.
     * @example
     * // Delete a few Nd_customers
     * const { count } = await prisma.nd_customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_customerDeleteManyArgs>(args?: SelectSubset<T, nd_customerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_customers
     * const nd_customer = await prisma.nd_customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_customerUpdateManyArgs>(args: SelectSubset<T, nd_customerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_customer.
     * @param {nd_customerUpsertArgs} args - Arguments to update or create a Nd_customer.
     * @example
     * // Update or create a Nd_customer
     * const nd_customer = await prisma.nd_customer.upsert({
     *   create: {
     *     // ... data to create a Nd_customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_customer we want to update
     *   }
     * })
     */
    upsert<T extends nd_customerUpsertArgs>(args: SelectSubset<T, nd_customerUpsertArgs<ExtArgs>>): Prisma__nd_customerClient<$Result.GetResult<Prisma.$nd_customerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerCountArgs} args - Arguments to filter Nd_customers to count.
     * @example
     * // Count the number of Nd_customers
     * const count = await prisma.nd_customer.count({
     *   where: {
     *     // ... the filter for the Nd_customers we want to count
     *   }
     * })
    **/
    count<T extends nd_customerCountArgs>(
      args?: Subset<T, nd_customerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_customerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_customerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_customerAggregateArgs>(args: Subset<T, Nd_customerAggregateArgs>): Prisma.PrismaPromise<GetNd_customerAggregateType<T>>

    /**
     * Group by Nd_customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_customerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_customerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_customerGroupByArgs['orderBy'] }
        : { orderBy?: nd_customerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_customerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_customerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_customer model
   */
  readonly fields: nd_customerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_customerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_customer model
   */
  interface nd_customerFieldRefs {
    readonly id: FieldRef<"nd_customer", 'Int'>
    readonly customer_type_id: FieldRef<"nd_customer", 'Boolean'>
    readonly nama: FieldRef<"nd_customer", 'String'>
    readonly alias: FieldRef<"nd_customer", 'String'>
    readonly alamat: FieldRef<"nd_customer", 'String'>
    readonly telepon: FieldRef<"nd_customer", 'String'>
    readonly telepon1: FieldRef<"nd_customer", 'String'>
    readonly telepon2: FieldRef<"nd_customer", 'String'>
    readonly npwp: FieldRef<"nd_customer", 'String'>
    readonly nik: FieldRef<"nd_customer", 'String'>
    readonly kota: FieldRef<"nd_customer", 'String'>
    readonly provinsi: FieldRef<"nd_customer", 'String'>
    readonly kode_pos: FieldRef<"nd_customer", 'String'>
    readonly email: FieldRef<"nd_customer", 'String'>
    readonly contact_person: FieldRef<"nd_customer", 'String'>
    readonly tempo_kredit: FieldRef<"nd_customer", 'Int'>
    readonly warning_kredit: FieldRef<"nd_customer", 'Int'>
    readonly limit_warning_type: FieldRef<"nd_customer", 'Int'>
    readonly limit_amount: FieldRef<"nd_customer", 'Int'>
    readonly limit_atas: FieldRef<"nd_customer", 'Int'>
    readonly limit_warning_amount: FieldRef<"nd_customer", 'Int'>
    readonly status_aktif: FieldRef<"nd_customer", 'Boolean'>
    readonly img_link: FieldRef<"nd_customer", 'String'>
    readonly npwp_link: FieldRef<"nd_customer", 'String'>
    readonly ktp_link: FieldRef<"nd_customer", 'String'>
    readonly medsos_link: FieldRef<"nd_customer", 'String'>
    readonly updated_at: FieldRef<"nd_customer", 'DateTime'>
    readonly tipe_company: FieldRef<"nd_customer", 'String'>
    readonly blok: FieldRef<"nd_customer", 'String'>
    readonly no: FieldRef<"nd_customer", 'String'>
    readonly rt: FieldRef<"nd_customer", 'String'>
    readonly rw: FieldRef<"nd_customer", 'String'>
    readonly kecamatan: FieldRef<"nd_customer", 'String'>
    readonly kelurahan: FieldRef<"nd_customer", 'String'>
    readonly locked_status: FieldRef<"nd_customer", 'Boolean'>
    readonly jenis_pekerjaan: FieldRef<"nd_customer", 'String'>
    readonly jenis_produk: FieldRef<"nd_customer", 'String'>
    readonly user_id: FieldRef<"nd_customer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_customer findUnique
   */
  export type nd_customerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter, which nd_customer to fetch.
     */
    where: nd_customerWhereUniqueInput
  }

  /**
   * nd_customer findUniqueOrThrow
   */
  export type nd_customerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter, which nd_customer to fetch.
     */
    where: nd_customerWhereUniqueInput
  }

  /**
   * nd_customer findFirst
   */
  export type nd_customerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter, which nd_customer to fetch.
     */
    where?: nd_customerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_customers to fetch.
     */
    orderBy?: nd_customerOrderByWithRelationInput | nd_customerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_customers.
     */
    cursor?: nd_customerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_customers.
     */
    distinct?: Nd_customerScalarFieldEnum | Nd_customerScalarFieldEnum[]
  }

  /**
   * nd_customer findFirstOrThrow
   */
  export type nd_customerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter, which nd_customer to fetch.
     */
    where?: nd_customerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_customers to fetch.
     */
    orderBy?: nd_customerOrderByWithRelationInput | nd_customerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_customers.
     */
    cursor?: nd_customerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_customers.
     */
    distinct?: Nd_customerScalarFieldEnum | Nd_customerScalarFieldEnum[]
  }

  /**
   * nd_customer findMany
   */
  export type nd_customerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter, which nd_customers to fetch.
     */
    where?: nd_customerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_customers to fetch.
     */
    orderBy?: nd_customerOrderByWithRelationInput | nd_customerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_customers.
     */
    cursor?: nd_customerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_customers.
     */
    skip?: number
    distinct?: Nd_customerScalarFieldEnum | Nd_customerScalarFieldEnum[]
  }

  /**
   * nd_customer create
   */
  export type nd_customerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_customer.
     */
    data: XOR<nd_customerCreateInput, nd_customerUncheckedCreateInput>
  }

  /**
   * nd_customer createMany
   */
  export type nd_customerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_customers.
     */
    data: nd_customerCreateManyInput | nd_customerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_customer update
   */
  export type nd_customerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_customer.
     */
    data: XOR<nd_customerUpdateInput, nd_customerUncheckedUpdateInput>
    /**
     * Choose, which nd_customer to update.
     */
    where: nd_customerWhereUniqueInput
  }

  /**
   * nd_customer updateMany
   */
  export type nd_customerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_customers.
     */
    data: XOR<nd_customerUpdateManyMutationInput, nd_customerUncheckedUpdateManyInput>
    /**
     * Filter which nd_customers to update
     */
    where?: nd_customerWhereInput
    /**
     * Limit how many nd_customers to update.
     */
    limit?: number
  }

  /**
   * nd_customer upsert
   */
  export type nd_customerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_customer to update in case it exists.
     */
    where: nd_customerWhereUniqueInput
    /**
     * In case the nd_customer found by the `where` argument doesn't exist, create a new nd_customer with this data.
     */
    create: XOR<nd_customerCreateInput, nd_customerUncheckedCreateInput>
    /**
     * In case the nd_customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_customerUpdateInput, nd_customerUncheckedUpdateInput>
  }

  /**
   * nd_customer delete
   */
  export type nd_customerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
    /**
     * Filter which nd_customer to delete.
     */
    where: nd_customerWhereUniqueInput
  }

  /**
   * nd_customer deleteMany
   */
  export type nd_customerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_customers to delete
     */
    where?: nd_customerWhereInput
    /**
     * Limit how many nd_customers to delete.
     */
    limit?: number
  }

  /**
   * nd_customer without action
   */
  export type nd_customerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_customer
     */
    select?: nd_customerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_customer
     */
    omit?: nd_customerOmit<ExtArgs> | null
  }


  /**
   * Model nd_department
   */

  export type AggregateNd_department = {
    _count: Nd_departmentCountAggregateOutputType | null
    _avg: Nd_departmentAvgAggregateOutputType | null
    _sum: Nd_departmentSumAggregateOutputType | null
    _min: Nd_departmentMinAggregateOutputType | null
    _max: Nd_departmentMaxAggregateOutputType | null
  }

  export type Nd_departmentAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_departmentSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_departmentMinAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_departmentMaxAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_departmentCountAggregateOutputType = {
    id: number
    kode: number
    nama: number
    status_aktif: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_departmentAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_departmentSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_departmentMinAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_departmentMaxAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_departmentCountAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_departmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_department to aggregate.
     */
    where?: nd_departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_departments to fetch.
     */
    orderBy?: nd_departmentOrderByWithRelationInput | nd_departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_departments
    **/
    _count?: true | Nd_departmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_departmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_departmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_departmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_departmentMaxAggregateInputType
  }

  export type GetNd_departmentAggregateType<T extends Nd_departmentAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_department]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_department[P]>
      : GetScalarType<T[P], AggregateNd_department[P]>
  }




  export type nd_departmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_departmentWhereInput
    orderBy?: nd_departmentOrderByWithAggregationInput | nd_departmentOrderByWithAggregationInput[]
    by: Nd_departmentScalarFieldEnum[] | Nd_departmentScalarFieldEnum
    having?: nd_departmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_departmentCountAggregateInputType | true
    _avg?: Nd_departmentAvgAggregateInputType
    _sum?: Nd_departmentSumAggregateInputType
    _min?: Nd_departmentMinAggregateInputType
    _max?: Nd_departmentMaxAggregateInputType
  }

  export type Nd_departmentGroupByOutputType = {
    id: number
    kode: string
    nama: string
    status_aktif: number
    created_at: Date
    updated_at: Date
    _count: Nd_departmentCountAggregateOutputType | null
    _avg: Nd_departmentAvgAggregateOutputType | null
    _sum: Nd_departmentSumAggregateOutputType | null
    _min: Nd_departmentMinAggregateOutputType | null
    _max: Nd_departmentMaxAggregateOutputType | null
  }

  type GetNd_departmentGroupByPayload<T extends nd_departmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_departmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_departmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_departmentGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_departmentGroupByOutputType[P]>
        }
      >
    >


  export type nd_departmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kode?: boolean
    nama?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["nd_department"]>



  export type nd_departmentSelectScalar = {
    id?: boolean
    kode?: boolean
    nama?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_departmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "kode" | "nama" | "status_aktif" | "created_at" | "updated_at", ExtArgs["result"]["nd_department"]>

  export type $nd_departmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_department"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      kode: string
      nama: string
      status_aktif: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_department"]>
    composites: {}
  }

  type nd_departmentGetPayload<S extends boolean | null | undefined | nd_departmentDefaultArgs> = $Result.GetResult<Prisma.$nd_departmentPayload, S>

  type nd_departmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_departmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_departmentCountAggregateInputType | true
    }

  export interface nd_departmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_department'], meta: { name: 'nd_department' } }
    /**
     * Find zero or one Nd_department that matches the filter.
     * @param {nd_departmentFindUniqueArgs} args - Arguments to find a Nd_department
     * @example
     * // Get one Nd_department
     * const nd_department = await prisma.nd_department.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_departmentFindUniqueArgs>(args: SelectSubset<T, nd_departmentFindUniqueArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_department that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_departmentFindUniqueOrThrowArgs} args - Arguments to find a Nd_department
     * @example
     * // Get one Nd_department
     * const nd_department = await prisma.nd_department.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_departmentFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_departmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_department that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentFindFirstArgs} args - Arguments to find a Nd_department
     * @example
     * // Get one Nd_department
     * const nd_department = await prisma.nd_department.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_departmentFindFirstArgs>(args?: SelectSubset<T, nd_departmentFindFirstArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_department that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentFindFirstOrThrowArgs} args - Arguments to find a Nd_department
     * @example
     * // Get one Nd_department
     * const nd_department = await prisma.nd_department.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_departmentFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_departmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_departments
     * const nd_departments = await prisma.nd_department.findMany()
     * 
     * // Get first 10 Nd_departments
     * const nd_departments = await prisma.nd_department.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_departmentWithIdOnly = await prisma.nd_department.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_departmentFindManyArgs>(args?: SelectSubset<T, nd_departmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_department.
     * @param {nd_departmentCreateArgs} args - Arguments to create a Nd_department.
     * @example
     * // Create one Nd_department
     * const Nd_department = await prisma.nd_department.create({
     *   data: {
     *     // ... data to create a Nd_department
     *   }
     * })
     * 
     */
    create<T extends nd_departmentCreateArgs>(args: SelectSubset<T, nd_departmentCreateArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_departments.
     * @param {nd_departmentCreateManyArgs} args - Arguments to create many Nd_departments.
     * @example
     * // Create many Nd_departments
     * const nd_department = await prisma.nd_department.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_departmentCreateManyArgs>(args?: SelectSubset<T, nd_departmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_department.
     * @param {nd_departmentDeleteArgs} args - Arguments to delete one Nd_department.
     * @example
     * // Delete one Nd_department
     * const Nd_department = await prisma.nd_department.delete({
     *   where: {
     *     // ... filter to delete one Nd_department
     *   }
     * })
     * 
     */
    delete<T extends nd_departmentDeleteArgs>(args: SelectSubset<T, nd_departmentDeleteArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_department.
     * @param {nd_departmentUpdateArgs} args - Arguments to update one Nd_department.
     * @example
     * // Update one Nd_department
     * const nd_department = await prisma.nd_department.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_departmentUpdateArgs>(args: SelectSubset<T, nd_departmentUpdateArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_departments.
     * @param {nd_departmentDeleteManyArgs} args - Arguments to filter Nd_departments to delete.
     * @example
     * // Delete a few Nd_departments
     * const { count } = await prisma.nd_department.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_departmentDeleteManyArgs>(args?: SelectSubset<T, nd_departmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_departments
     * const nd_department = await prisma.nd_department.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_departmentUpdateManyArgs>(args: SelectSubset<T, nd_departmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_department.
     * @param {nd_departmentUpsertArgs} args - Arguments to update or create a Nd_department.
     * @example
     * // Update or create a Nd_department
     * const nd_department = await prisma.nd_department.upsert({
     *   create: {
     *     // ... data to create a Nd_department
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_department we want to update
     *   }
     * })
     */
    upsert<T extends nd_departmentUpsertArgs>(args: SelectSubset<T, nd_departmentUpsertArgs<ExtArgs>>): Prisma__nd_departmentClient<$Result.GetResult<Prisma.$nd_departmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentCountArgs} args - Arguments to filter Nd_departments to count.
     * @example
     * // Count the number of Nd_departments
     * const count = await prisma.nd_department.count({
     *   where: {
     *     // ... the filter for the Nd_departments we want to count
     *   }
     * })
    **/
    count<T extends nd_departmentCountArgs>(
      args?: Subset<T, nd_departmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_departmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_departmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_departmentAggregateArgs>(args: Subset<T, Nd_departmentAggregateArgs>): Prisma.PrismaPromise<GetNd_departmentAggregateType<T>>

    /**
     * Group by Nd_department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_departmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_departmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_departmentGroupByArgs['orderBy'] }
        : { orderBy?: nd_departmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_departmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_departmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_department model
   */
  readonly fields: nd_departmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_department.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_departmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_department model
   */
  interface nd_departmentFieldRefs {
    readonly id: FieldRef<"nd_department", 'Int'>
    readonly kode: FieldRef<"nd_department", 'String'>
    readonly nama: FieldRef<"nd_department", 'String'>
    readonly status_aktif: FieldRef<"nd_department", 'Int'>
    readonly created_at: FieldRef<"nd_department", 'DateTime'>
    readonly updated_at: FieldRef<"nd_department", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_department findUnique
   */
  export type nd_departmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_department to fetch.
     */
    where: nd_departmentWhereUniqueInput
  }

  /**
   * nd_department findUniqueOrThrow
   */
  export type nd_departmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_department to fetch.
     */
    where: nd_departmentWhereUniqueInput
  }

  /**
   * nd_department findFirst
   */
  export type nd_departmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_department to fetch.
     */
    where?: nd_departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_departments to fetch.
     */
    orderBy?: nd_departmentOrderByWithRelationInput | nd_departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_departments.
     */
    cursor?: nd_departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_departments.
     */
    distinct?: Nd_departmentScalarFieldEnum | Nd_departmentScalarFieldEnum[]
  }

  /**
   * nd_department findFirstOrThrow
   */
  export type nd_departmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_department to fetch.
     */
    where?: nd_departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_departments to fetch.
     */
    orderBy?: nd_departmentOrderByWithRelationInput | nd_departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_departments.
     */
    cursor?: nd_departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_departments.
     */
    distinct?: Nd_departmentScalarFieldEnum | Nd_departmentScalarFieldEnum[]
  }

  /**
   * nd_department findMany
   */
  export type nd_departmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_departments to fetch.
     */
    where?: nd_departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_departments to fetch.
     */
    orderBy?: nd_departmentOrderByWithRelationInput | nd_departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_departments.
     */
    cursor?: nd_departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_departments.
     */
    skip?: number
    distinct?: Nd_departmentScalarFieldEnum | Nd_departmentScalarFieldEnum[]
  }

  /**
   * nd_department create
   */
  export type nd_departmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_department.
     */
    data: XOR<nd_departmentCreateInput, nd_departmentUncheckedCreateInput>
  }

  /**
   * nd_department createMany
   */
  export type nd_departmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_departments.
     */
    data: nd_departmentCreateManyInput | nd_departmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_department update
   */
  export type nd_departmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_department.
     */
    data: XOR<nd_departmentUpdateInput, nd_departmentUncheckedUpdateInput>
    /**
     * Choose, which nd_department to update.
     */
    where: nd_departmentWhereUniqueInput
  }

  /**
   * nd_department updateMany
   */
  export type nd_departmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_departments.
     */
    data: XOR<nd_departmentUpdateManyMutationInput, nd_departmentUncheckedUpdateManyInput>
    /**
     * Filter which nd_departments to update
     */
    where?: nd_departmentWhereInput
    /**
     * Limit how many nd_departments to update.
     */
    limit?: number
  }

  /**
   * nd_department upsert
   */
  export type nd_departmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_department to update in case it exists.
     */
    where: nd_departmentWhereUniqueInput
    /**
     * In case the nd_department found by the `where` argument doesn't exist, create a new nd_department with this data.
     */
    create: XOR<nd_departmentCreateInput, nd_departmentUncheckedCreateInput>
    /**
     * In case the nd_department was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_departmentUpdateInput, nd_departmentUncheckedUpdateInput>
  }

  /**
   * nd_department delete
   */
  export type nd_departmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
    /**
     * Filter which nd_department to delete.
     */
    where: nd_departmentWhereUniqueInput
  }

  /**
   * nd_department deleteMany
   */
  export type nd_departmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_departments to delete
     */
    where?: nd_departmentWhereInput
    /**
     * Limit how many nd_departments to delete.
     */
    limit?: number
  }

  /**
   * nd_department without action
   */
  export type nd_departmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_department
     */
    select?: nd_departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_department
     */
    omit?: nd_departmentOmit<ExtArgs> | null
  }


  /**
   * Model nd_document
   */

  export type AggregateNd_document = {
    _count: Nd_documentCountAggregateOutputType | null
    _avg: Nd_documentAvgAggregateOutputType | null
    _sum: Nd_documentSumAggregateOutputType | null
    _min: Nd_documentMinAggregateOutputType | null
    _max: Nd_documentMaxAggregateOutputType | null
  }

  export type Nd_documentAvgAggregateOutputType = {
    id: number | null
    toko_id: number | null
    document_control_id: number | null
    document_number_raw: number | null
    status_aktif: number | null
  }

  export type Nd_documentSumAggregateOutputType = {
    id: number | null
    toko_id: number | null
    document_control_id: number | null
    document_number_raw: number | null
    status_aktif: number | null
  }

  export type Nd_documentMinAggregateOutputType = {
    id: number | null
    toko_id: number | null
    tanggal: Date | null
    document_control_id: number | null
    document_number_raw: number | null
    document_number: string | null
    document_status: string | null
    judul: string | null
    dari: string | null
    kepada: string | null
    keterangan: string | null
    penanggung_jawab: string | null
    username: string | null
    status_aktif: number | null
  }

  export type Nd_documentMaxAggregateOutputType = {
    id: number | null
    toko_id: number | null
    tanggal: Date | null
    document_control_id: number | null
    document_number_raw: number | null
    document_number: string | null
    document_status: string | null
    judul: string | null
    dari: string | null
    kepada: string | null
    keterangan: string | null
    penanggung_jawab: string | null
    username: string | null
    status_aktif: number | null
  }

  export type Nd_documentCountAggregateOutputType = {
    id: number
    toko_id: number
    tanggal: number
    document_control_id: number
    document_number_raw: number
    document_number: number
    document_status: number
    judul: number
    dari: number
    kepada: number
    keterangan: number
    penanggung_jawab: number
    username: number
    status_aktif: number
    _all: number
  }


  export type Nd_documentAvgAggregateInputType = {
    id?: true
    toko_id?: true
    document_control_id?: true
    document_number_raw?: true
    status_aktif?: true
  }

  export type Nd_documentSumAggregateInputType = {
    id?: true
    toko_id?: true
    document_control_id?: true
    document_number_raw?: true
    status_aktif?: true
  }

  export type Nd_documentMinAggregateInputType = {
    id?: true
    toko_id?: true
    tanggal?: true
    document_control_id?: true
    document_number_raw?: true
    document_number?: true
    document_status?: true
    judul?: true
    dari?: true
    kepada?: true
    keterangan?: true
    penanggung_jawab?: true
    username?: true
    status_aktif?: true
  }

  export type Nd_documentMaxAggregateInputType = {
    id?: true
    toko_id?: true
    tanggal?: true
    document_control_id?: true
    document_number_raw?: true
    document_number?: true
    document_status?: true
    judul?: true
    dari?: true
    kepada?: true
    keterangan?: true
    penanggung_jawab?: true
    username?: true
    status_aktif?: true
  }

  export type Nd_documentCountAggregateInputType = {
    id?: true
    toko_id?: true
    tanggal?: true
    document_control_id?: true
    document_number_raw?: true
    document_number?: true
    document_status?: true
    judul?: true
    dari?: true
    kepada?: true
    keterangan?: true
    penanggung_jawab?: true
    username?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_documentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_document to aggregate.
     */
    where?: nd_documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_documents to fetch.
     */
    orderBy?: nd_documentOrderByWithRelationInput | nd_documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_documents
    **/
    _count?: true | Nd_documentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_documentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_documentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_documentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_documentMaxAggregateInputType
  }

  export type GetNd_documentAggregateType<T extends Nd_documentAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_document]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_document[P]>
      : GetScalarType<T[P], AggregateNd_document[P]>
  }




  export type nd_documentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_documentWhereInput
    orderBy?: nd_documentOrderByWithAggregationInput | nd_documentOrderByWithAggregationInput[]
    by: Nd_documentScalarFieldEnum[] | Nd_documentScalarFieldEnum
    having?: nd_documentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_documentCountAggregateInputType | true
    _avg?: Nd_documentAvgAggregateInputType
    _sum?: Nd_documentSumAggregateInputType
    _min?: Nd_documentMinAggregateInputType
    _max?: Nd_documentMaxAggregateInputType
  }

  export type Nd_documentGroupByOutputType = {
    id: number
    toko_id: number
    tanggal: Date | null
    document_control_id: number
    document_number_raw: number | null
    document_number: string | null
    document_status: string
    judul: string
    dari: string
    kepada: string
    keterangan: string
    penanggung_jawab: string
    username: string
    status_aktif: number
    _count: Nd_documentCountAggregateOutputType | null
    _avg: Nd_documentAvgAggregateOutputType | null
    _sum: Nd_documentSumAggregateOutputType | null
    _min: Nd_documentMinAggregateOutputType | null
    _max: Nd_documentMaxAggregateOutputType | null
  }

  type GetNd_documentGroupByPayload<T extends nd_documentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_documentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_documentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_documentGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_documentGroupByOutputType[P]>
        }
      >
    >


  export type nd_documentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    toko_id?: boolean
    tanggal?: boolean
    document_control_id?: boolean
    document_number_raw?: boolean
    document_number?: boolean
    document_status?: boolean
    judul?: boolean
    dari?: boolean
    kepada?: boolean
    keterangan?: boolean
    penanggung_jawab?: boolean
    username?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_document"]>



  export type nd_documentSelectScalar = {
    id?: boolean
    toko_id?: boolean
    tanggal?: boolean
    document_control_id?: boolean
    document_number_raw?: boolean
    document_number?: boolean
    document_status?: boolean
    judul?: boolean
    dari?: boolean
    kepada?: boolean
    keterangan?: boolean
    penanggung_jawab?: boolean
    username?: boolean
    status_aktif?: boolean
  }

  export type nd_documentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "toko_id" | "tanggal" | "document_control_id" | "document_number_raw" | "document_number" | "document_status" | "judul" | "dari" | "kepada" | "keterangan" | "penanggung_jawab" | "username" | "status_aktif", ExtArgs["result"]["nd_document"]>

  export type $nd_documentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_document"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      toko_id: number
      tanggal: Date | null
      document_control_id: number
      document_number_raw: number | null
      document_number: string | null
      document_status: string
      judul: string
      dari: string
      kepada: string
      keterangan: string
      penanggung_jawab: string
      username: string
      status_aktif: number
    }, ExtArgs["result"]["nd_document"]>
    composites: {}
  }

  type nd_documentGetPayload<S extends boolean | null | undefined | nd_documentDefaultArgs> = $Result.GetResult<Prisma.$nd_documentPayload, S>

  type nd_documentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_documentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_documentCountAggregateInputType | true
    }

  export interface nd_documentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_document'], meta: { name: 'nd_document' } }
    /**
     * Find zero or one Nd_document that matches the filter.
     * @param {nd_documentFindUniqueArgs} args - Arguments to find a Nd_document
     * @example
     * // Get one Nd_document
     * const nd_document = await prisma.nd_document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_documentFindUniqueArgs>(args: SelectSubset<T, nd_documentFindUniqueArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_document that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_documentFindUniqueOrThrowArgs} args - Arguments to find a Nd_document
     * @example
     * // Get one Nd_document
     * const nd_document = await prisma.nd_document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_documentFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_documentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentFindFirstArgs} args - Arguments to find a Nd_document
     * @example
     * // Get one Nd_document
     * const nd_document = await prisma.nd_document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_documentFindFirstArgs>(args?: SelectSubset<T, nd_documentFindFirstArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentFindFirstOrThrowArgs} args - Arguments to find a Nd_document
     * @example
     * // Get one Nd_document
     * const nd_document = await prisma.nd_document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_documentFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_documentFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_documents
     * const nd_documents = await prisma.nd_document.findMany()
     * 
     * // Get first 10 Nd_documents
     * const nd_documents = await prisma.nd_document.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_documentWithIdOnly = await prisma.nd_document.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_documentFindManyArgs>(args?: SelectSubset<T, nd_documentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_document.
     * @param {nd_documentCreateArgs} args - Arguments to create a Nd_document.
     * @example
     * // Create one Nd_document
     * const Nd_document = await prisma.nd_document.create({
     *   data: {
     *     // ... data to create a Nd_document
     *   }
     * })
     * 
     */
    create<T extends nd_documentCreateArgs>(args: SelectSubset<T, nd_documentCreateArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_documents.
     * @param {nd_documentCreateManyArgs} args - Arguments to create many Nd_documents.
     * @example
     * // Create many Nd_documents
     * const nd_document = await prisma.nd_document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_documentCreateManyArgs>(args?: SelectSubset<T, nd_documentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_document.
     * @param {nd_documentDeleteArgs} args - Arguments to delete one Nd_document.
     * @example
     * // Delete one Nd_document
     * const Nd_document = await prisma.nd_document.delete({
     *   where: {
     *     // ... filter to delete one Nd_document
     *   }
     * })
     * 
     */
    delete<T extends nd_documentDeleteArgs>(args: SelectSubset<T, nd_documentDeleteArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_document.
     * @param {nd_documentUpdateArgs} args - Arguments to update one Nd_document.
     * @example
     * // Update one Nd_document
     * const nd_document = await prisma.nd_document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_documentUpdateArgs>(args: SelectSubset<T, nd_documentUpdateArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_documents.
     * @param {nd_documentDeleteManyArgs} args - Arguments to filter Nd_documents to delete.
     * @example
     * // Delete a few Nd_documents
     * const { count } = await prisma.nd_document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_documentDeleteManyArgs>(args?: SelectSubset<T, nd_documentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_documents
     * const nd_document = await prisma.nd_document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_documentUpdateManyArgs>(args: SelectSubset<T, nd_documentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_document.
     * @param {nd_documentUpsertArgs} args - Arguments to update or create a Nd_document.
     * @example
     * // Update or create a Nd_document
     * const nd_document = await prisma.nd_document.upsert({
     *   create: {
     *     // ... data to create a Nd_document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_document we want to update
     *   }
     * })
     */
    upsert<T extends nd_documentUpsertArgs>(args: SelectSubset<T, nd_documentUpsertArgs<ExtArgs>>): Prisma__nd_documentClient<$Result.GetResult<Prisma.$nd_documentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentCountArgs} args - Arguments to filter Nd_documents to count.
     * @example
     * // Count the number of Nd_documents
     * const count = await prisma.nd_document.count({
     *   where: {
     *     // ... the filter for the Nd_documents we want to count
     *   }
     * })
    **/
    count<T extends nd_documentCountArgs>(
      args?: Subset<T, nd_documentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_documentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_documentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_documentAggregateArgs>(args: Subset<T, Nd_documentAggregateArgs>): Prisma.PrismaPromise<GetNd_documentAggregateType<T>>

    /**
     * Group by Nd_document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_documentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_documentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_documentGroupByArgs['orderBy'] }
        : { orderBy?: nd_documentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_documentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_documentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_document model
   */
  readonly fields: nd_documentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_documentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_document model
   */
  interface nd_documentFieldRefs {
    readonly id: FieldRef<"nd_document", 'Int'>
    readonly toko_id: FieldRef<"nd_document", 'Int'>
    readonly tanggal: FieldRef<"nd_document", 'DateTime'>
    readonly document_control_id: FieldRef<"nd_document", 'Int'>
    readonly document_number_raw: FieldRef<"nd_document", 'Int'>
    readonly document_number: FieldRef<"nd_document", 'String'>
    readonly document_status: FieldRef<"nd_document", 'String'>
    readonly judul: FieldRef<"nd_document", 'String'>
    readonly dari: FieldRef<"nd_document", 'String'>
    readonly kepada: FieldRef<"nd_document", 'String'>
    readonly keterangan: FieldRef<"nd_document", 'String'>
    readonly penanggung_jawab: FieldRef<"nd_document", 'String'>
    readonly username: FieldRef<"nd_document", 'String'>
    readonly status_aktif: FieldRef<"nd_document", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_document findUnique
   */
  export type nd_documentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter, which nd_document to fetch.
     */
    where: nd_documentWhereUniqueInput
  }

  /**
   * nd_document findUniqueOrThrow
   */
  export type nd_documentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter, which nd_document to fetch.
     */
    where: nd_documentWhereUniqueInput
  }

  /**
   * nd_document findFirst
   */
  export type nd_documentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter, which nd_document to fetch.
     */
    where?: nd_documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_documents to fetch.
     */
    orderBy?: nd_documentOrderByWithRelationInput | nd_documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_documents.
     */
    cursor?: nd_documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_documents.
     */
    distinct?: Nd_documentScalarFieldEnum | Nd_documentScalarFieldEnum[]
  }

  /**
   * nd_document findFirstOrThrow
   */
  export type nd_documentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter, which nd_document to fetch.
     */
    where?: nd_documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_documents to fetch.
     */
    orderBy?: nd_documentOrderByWithRelationInput | nd_documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_documents.
     */
    cursor?: nd_documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_documents.
     */
    distinct?: Nd_documentScalarFieldEnum | Nd_documentScalarFieldEnum[]
  }

  /**
   * nd_document findMany
   */
  export type nd_documentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter, which nd_documents to fetch.
     */
    where?: nd_documentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_documents to fetch.
     */
    orderBy?: nd_documentOrderByWithRelationInput | nd_documentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_documents.
     */
    cursor?: nd_documentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_documents.
     */
    skip?: number
    distinct?: Nd_documentScalarFieldEnum | Nd_documentScalarFieldEnum[]
  }

  /**
   * nd_document create
   */
  export type nd_documentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_document.
     */
    data: XOR<nd_documentCreateInput, nd_documentUncheckedCreateInput>
  }

  /**
   * nd_document createMany
   */
  export type nd_documentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_documents.
     */
    data: nd_documentCreateManyInput | nd_documentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_document update
   */
  export type nd_documentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_document.
     */
    data: XOR<nd_documentUpdateInput, nd_documentUncheckedUpdateInput>
    /**
     * Choose, which nd_document to update.
     */
    where: nd_documentWhereUniqueInput
  }

  /**
   * nd_document updateMany
   */
  export type nd_documentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_documents.
     */
    data: XOR<nd_documentUpdateManyMutationInput, nd_documentUncheckedUpdateManyInput>
    /**
     * Filter which nd_documents to update
     */
    where?: nd_documentWhereInput
    /**
     * Limit how many nd_documents to update.
     */
    limit?: number
  }

  /**
   * nd_document upsert
   */
  export type nd_documentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_document to update in case it exists.
     */
    where: nd_documentWhereUniqueInput
    /**
     * In case the nd_document found by the `where` argument doesn't exist, create a new nd_document with this data.
     */
    create: XOR<nd_documentCreateInput, nd_documentUncheckedCreateInput>
    /**
     * In case the nd_document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_documentUpdateInput, nd_documentUncheckedUpdateInput>
  }

  /**
   * nd_document delete
   */
  export type nd_documentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
    /**
     * Filter which nd_document to delete.
     */
    where: nd_documentWhereUniqueInput
  }

  /**
   * nd_document deleteMany
   */
  export type nd_documentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_documents to delete
     */
    where?: nd_documentWhereInput
    /**
     * Limit how many nd_documents to delete.
     */
    limit?: number
  }

  /**
   * nd_document without action
   */
  export type nd_documentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document
     */
    select?: nd_documentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document
     */
    omit?: nd_documentOmit<ExtArgs> | null
  }


  /**
   * Model nd_document_control
   */

  export type AggregateNd_document_control = {
    _count: Nd_document_controlCountAggregateOutputType | null
    _avg: Nd_document_controlAvgAggregateOutputType | null
    _sum: Nd_document_controlSumAggregateOutputType | null
    _min: Nd_document_controlMinAggregateOutputType | null
    _max: Nd_document_controlMaxAggregateOutputType | null
  }

  export type Nd_document_controlAvgAggregateOutputType = {
    id: number | null
    department_id: number | null
    no_kode: number | null
    status_aktif: number | null
  }

  export type Nd_document_controlSumAggregateOutputType = {
    id: number | null
    department_id: number | null
    no_kode: number | null
    status_aktif: number | null
  }

  export type Nd_document_controlMinAggregateOutputType = {
    id: number | null
    department_id: number | null
    tipe_dokumen: string | null
    no_kode: number | null
    kode: string | null
    nama: string | null
    keterangan: string | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_document_controlMaxAggregateOutputType = {
    id: number | null
    department_id: number | null
    tipe_dokumen: string | null
    no_kode: number | null
    kode: string | null
    nama: string | null
    keterangan: string | null
    status_aktif: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_document_controlCountAggregateOutputType = {
    id: number
    department_id: number
    tipe_dokumen: number
    no_kode: number
    kode: number
    nama: number
    keterangan: number
    status_aktif: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_document_controlAvgAggregateInputType = {
    id?: true
    department_id?: true
    no_kode?: true
    status_aktif?: true
  }

  export type Nd_document_controlSumAggregateInputType = {
    id?: true
    department_id?: true
    no_kode?: true
    status_aktif?: true
  }

  export type Nd_document_controlMinAggregateInputType = {
    id?: true
    department_id?: true
    tipe_dokumen?: true
    no_kode?: true
    kode?: true
    nama?: true
    keterangan?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_document_controlMaxAggregateInputType = {
    id?: true
    department_id?: true
    tipe_dokumen?: true
    no_kode?: true
    kode?: true
    nama?: true
    keterangan?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_document_controlCountAggregateInputType = {
    id?: true
    department_id?: true
    tipe_dokumen?: true
    no_kode?: true
    kode?: true
    nama?: true
    keterangan?: true
    status_aktif?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_document_controlAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_document_control to aggregate.
     */
    where?: nd_document_controlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_document_controls to fetch.
     */
    orderBy?: nd_document_controlOrderByWithRelationInput | nd_document_controlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_document_controlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_document_controls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_document_controls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_document_controls
    **/
    _count?: true | Nd_document_controlCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_document_controlAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_document_controlSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_document_controlMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_document_controlMaxAggregateInputType
  }

  export type GetNd_document_controlAggregateType<T extends Nd_document_controlAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_document_control]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_document_control[P]>
      : GetScalarType<T[P], AggregateNd_document_control[P]>
  }




  export type nd_document_controlGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_document_controlWhereInput
    orderBy?: nd_document_controlOrderByWithAggregationInput | nd_document_controlOrderByWithAggregationInput[]
    by: Nd_document_controlScalarFieldEnum[] | Nd_document_controlScalarFieldEnum
    having?: nd_document_controlScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_document_controlCountAggregateInputType | true
    _avg?: Nd_document_controlAvgAggregateInputType
    _sum?: Nd_document_controlSumAggregateInputType
    _min?: Nd_document_controlMinAggregateInputType
    _max?: Nd_document_controlMaxAggregateInputType
  }

  export type Nd_document_controlGroupByOutputType = {
    id: number
    department_id: number
    tipe_dokumen: string | null
    no_kode: number | null
    kode: string
    nama: string
    keterangan: string | null
    status_aktif: number
    created_at: Date
    updated_at: Date
    _count: Nd_document_controlCountAggregateOutputType | null
    _avg: Nd_document_controlAvgAggregateOutputType | null
    _sum: Nd_document_controlSumAggregateOutputType | null
    _min: Nd_document_controlMinAggregateOutputType | null
    _max: Nd_document_controlMaxAggregateOutputType | null
  }

  type GetNd_document_controlGroupByPayload<T extends nd_document_controlGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_document_controlGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_document_controlGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_document_controlGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_document_controlGroupByOutputType[P]>
        }
      >
    >


  export type nd_document_controlSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    department_id?: boolean
    tipe_dokumen?: boolean
    no_kode?: boolean
    kode?: boolean
    nama?: boolean
    keterangan?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["nd_document_control"]>



  export type nd_document_controlSelectScalar = {
    id?: boolean
    department_id?: boolean
    tipe_dokumen?: boolean
    no_kode?: boolean
    kode?: boolean
    nama?: boolean
    keterangan?: boolean
    status_aktif?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_document_controlOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "department_id" | "tipe_dokumen" | "no_kode" | "kode" | "nama" | "keterangan" | "status_aktif" | "created_at" | "updated_at", ExtArgs["result"]["nd_document_control"]>

  export type $nd_document_controlPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_document_control"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      department_id: number
      tipe_dokumen: string | null
      no_kode: number | null
      kode: string
      nama: string
      keterangan: string | null
      status_aktif: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_document_control"]>
    composites: {}
  }

  type nd_document_controlGetPayload<S extends boolean | null | undefined | nd_document_controlDefaultArgs> = $Result.GetResult<Prisma.$nd_document_controlPayload, S>

  type nd_document_controlCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_document_controlFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_document_controlCountAggregateInputType | true
    }

  export interface nd_document_controlDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_document_control'], meta: { name: 'nd_document_control' } }
    /**
     * Find zero or one Nd_document_control that matches the filter.
     * @param {nd_document_controlFindUniqueArgs} args - Arguments to find a Nd_document_control
     * @example
     * // Get one Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_document_controlFindUniqueArgs>(args: SelectSubset<T, nd_document_controlFindUniqueArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_document_control that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_document_controlFindUniqueOrThrowArgs} args - Arguments to find a Nd_document_control
     * @example
     * // Get one Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_document_controlFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_document_controlFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_document_control that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlFindFirstArgs} args - Arguments to find a Nd_document_control
     * @example
     * // Get one Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_document_controlFindFirstArgs>(args?: SelectSubset<T, nd_document_controlFindFirstArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_document_control that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlFindFirstOrThrowArgs} args - Arguments to find a Nd_document_control
     * @example
     * // Get one Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_document_controlFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_document_controlFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_document_controls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_document_controls
     * const nd_document_controls = await prisma.nd_document_control.findMany()
     * 
     * // Get first 10 Nd_document_controls
     * const nd_document_controls = await prisma.nd_document_control.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_document_controlWithIdOnly = await prisma.nd_document_control.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_document_controlFindManyArgs>(args?: SelectSubset<T, nd_document_controlFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_document_control.
     * @param {nd_document_controlCreateArgs} args - Arguments to create a Nd_document_control.
     * @example
     * // Create one Nd_document_control
     * const Nd_document_control = await prisma.nd_document_control.create({
     *   data: {
     *     // ... data to create a Nd_document_control
     *   }
     * })
     * 
     */
    create<T extends nd_document_controlCreateArgs>(args: SelectSubset<T, nd_document_controlCreateArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_document_controls.
     * @param {nd_document_controlCreateManyArgs} args - Arguments to create many Nd_document_controls.
     * @example
     * // Create many Nd_document_controls
     * const nd_document_control = await prisma.nd_document_control.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_document_controlCreateManyArgs>(args?: SelectSubset<T, nd_document_controlCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_document_control.
     * @param {nd_document_controlDeleteArgs} args - Arguments to delete one Nd_document_control.
     * @example
     * // Delete one Nd_document_control
     * const Nd_document_control = await prisma.nd_document_control.delete({
     *   where: {
     *     // ... filter to delete one Nd_document_control
     *   }
     * })
     * 
     */
    delete<T extends nd_document_controlDeleteArgs>(args: SelectSubset<T, nd_document_controlDeleteArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_document_control.
     * @param {nd_document_controlUpdateArgs} args - Arguments to update one Nd_document_control.
     * @example
     * // Update one Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_document_controlUpdateArgs>(args: SelectSubset<T, nd_document_controlUpdateArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_document_controls.
     * @param {nd_document_controlDeleteManyArgs} args - Arguments to filter Nd_document_controls to delete.
     * @example
     * // Delete a few Nd_document_controls
     * const { count } = await prisma.nd_document_control.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_document_controlDeleteManyArgs>(args?: SelectSubset<T, nd_document_controlDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_document_controls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_document_controls
     * const nd_document_control = await prisma.nd_document_control.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_document_controlUpdateManyArgs>(args: SelectSubset<T, nd_document_controlUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_document_control.
     * @param {nd_document_controlUpsertArgs} args - Arguments to update or create a Nd_document_control.
     * @example
     * // Update or create a Nd_document_control
     * const nd_document_control = await prisma.nd_document_control.upsert({
     *   create: {
     *     // ... data to create a Nd_document_control
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_document_control we want to update
     *   }
     * })
     */
    upsert<T extends nd_document_controlUpsertArgs>(args: SelectSubset<T, nd_document_controlUpsertArgs<ExtArgs>>): Prisma__nd_document_controlClient<$Result.GetResult<Prisma.$nd_document_controlPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_document_controls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlCountArgs} args - Arguments to filter Nd_document_controls to count.
     * @example
     * // Count the number of Nd_document_controls
     * const count = await prisma.nd_document_control.count({
     *   where: {
     *     // ... the filter for the Nd_document_controls we want to count
     *   }
     * })
    **/
    count<T extends nd_document_controlCountArgs>(
      args?: Subset<T, nd_document_controlCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_document_controlCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_document_control.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_document_controlAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_document_controlAggregateArgs>(args: Subset<T, Nd_document_controlAggregateArgs>): Prisma.PrismaPromise<GetNd_document_controlAggregateType<T>>

    /**
     * Group by Nd_document_control.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_document_controlGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_document_controlGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_document_controlGroupByArgs['orderBy'] }
        : { orderBy?: nd_document_controlGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_document_controlGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_document_controlGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_document_control model
   */
  readonly fields: nd_document_controlFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_document_control.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_document_controlClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_document_control model
   */
  interface nd_document_controlFieldRefs {
    readonly id: FieldRef<"nd_document_control", 'Int'>
    readonly department_id: FieldRef<"nd_document_control", 'Int'>
    readonly tipe_dokumen: FieldRef<"nd_document_control", 'String'>
    readonly no_kode: FieldRef<"nd_document_control", 'Int'>
    readonly kode: FieldRef<"nd_document_control", 'String'>
    readonly nama: FieldRef<"nd_document_control", 'String'>
    readonly keterangan: FieldRef<"nd_document_control", 'String'>
    readonly status_aktif: FieldRef<"nd_document_control", 'Int'>
    readonly created_at: FieldRef<"nd_document_control", 'DateTime'>
    readonly updated_at: FieldRef<"nd_document_control", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_document_control findUnique
   */
  export type nd_document_controlFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter, which nd_document_control to fetch.
     */
    where: nd_document_controlWhereUniqueInput
  }

  /**
   * nd_document_control findUniqueOrThrow
   */
  export type nd_document_controlFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter, which nd_document_control to fetch.
     */
    where: nd_document_controlWhereUniqueInput
  }

  /**
   * nd_document_control findFirst
   */
  export type nd_document_controlFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter, which nd_document_control to fetch.
     */
    where?: nd_document_controlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_document_controls to fetch.
     */
    orderBy?: nd_document_controlOrderByWithRelationInput | nd_document_controlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_document_controls.
     */
    cursor?: nd_document_controlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_document_controls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_document_controls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_document_controls.
     */
    distinct?: Nd_document_controlScalarFieldEnum | Nd_document_controlScalarFieldEnum[]
  }

  /**
   * nd_document_control findFirstOrThrow
   */
  export type nd_document_controlFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter, which nd_document_control to fetch.
     */
    where?: nd_document_controlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_document_controls to fetch.
     */
    orderBy?: nd_document_controlOrderByWithRelationInput | nd_document_controlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_document_controls.
     */
    cursor?: nd_document_controlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_document_controls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_document_controls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_document_controls.
     */
    distinct?: Nd_document_controlScalarFieldEnum | Nd_document_controlScalarFieldEnum[]
  }

  /**
   * nd_document_control findMany
   */
  export type nd_document_controlFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter, which nd_document_controls to fetch.
     */
    where?: nd_document_controlWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_document_controls to fetch.
     */
    orderBy?: nd_document_controlOrderByWithRelationInput | nd_document_controlOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_document_controls.
     */
    cursor?: nd_document_controlWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_document_controls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_document_controls.
     */
    skip?: number
    distinct?: Nd_document_controlScalarFieldEnum | Nd_document_controlScalarFieldEnum[]
  }

  /**
   * nd_document_control create
   */
  export type nd_document_controlCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_document_control.
     */
    data: XOR<nd_document_controlCreateInput, nd_document_controlUncheckedCreateInput>
  }

  /**
   * nd_document_control createMany
   */
  export type nd_document_controlCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_document_controls.
     */
    data: nd_document_controlCreateManyInput | nd_document_controlCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_document_control update
   */
  export type nd_document_controlUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_document_control.
     */
    data: XOR<nd_document_controlUpdateInput, nd_document_controlUncheckedUpdateInput>
    /**
     * Choose, which nd_document_control to update.
     */
    where: nd_document_controlWhereUniqueInput
  }

  /**
   * nd_document_control updateMany
   */
  export type nd_document_controlUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_document_controls.
     */
    data: XOR<nd_document_controlUpdateManyMutationInput, nd_document_controlUncheckedUpdateManyInput>
    /**
     * Filter which nd_document_controls to update
     */
    where?: nd_document_controlWhereInput
    /**
     * Limit how many nd_document_controls to update.
     */
    limit?: number
  }

  /**
   * nd_document_control upsert
   */
  export type nd_document_controlUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_document_control to update in case it exists.
     */
    where: nd_document_controlWhereUniqueInput
    /**
     * In case the nd_document_control found by the `where` argument doesn't exist, create a new nd_document_control with this data.
     */
    create: XOR<nd_document_controlCreateInput, nd_document_controlUncheckedCreateInput>
    /**
     * In case the nd_document_control was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_document_controlUpdateInput, nd_document_controlUncheckedUpdateInput>
  }

  /**
   * nd_document_control delete
   */
  export type nd_document_controlDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
    /**
     * Filter which nd_document_control to delete.
     */
    where: nd_document_controlWhereUniqueInput
  }

  /**
   * nd_document_control deleteMany
   */
  export type nd_document_controlDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_document_controls to delete
     */
    where?: nd_document_controlWhereInput
    /**
     * Limit how many nd_document_controls to delete.
     */
    limit?: number
  }

  /**
   * nd_document_control without action
   */
  export type nd_document_controlDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_document_control
     */
    select?: nd_document_controlSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_document_control
     */
    omit?: nd_document_controlOmit<ExtArgs> | null
  }


  /**
   * Model nd_gudang
   */

  export type AggregateNd_gudang = {
    _count: Nd_gudangCountAggregateOutputType | null
    _avg: Nd_gudangAvgAggregateOutputType | null
    _sum: Nd_gudangSumAggregateOutputType | null
    _min: Nd_gudangMinAggregateOutputType | null
    _max: Nd_gudangMaxAggregateOutputType | null
  }

  export type Nd_gudangAvgAggregateOutputType = {
    id: number | null
    status_default: number | null
    gudang_group_id: number | null
    urutan: number | null
    status_aktif: number | null
  }

  export type Nd_gudangSumAggregateOutputType = {
    id: number | null
    status_default: number | null
    gudang_group_id: number | null
    urutan: number | null
    status_aktif: number | null
  }

  export type Nd_gudangMinAggregateOutputType = {
    id: number | null
    nama: string | null
    lokasi: string | null
    status_default: number | null
    visible: boolean | null
    gudang_group_id: number | null
    urutan: number | null
    status_aktif: number | null
  }

  export type Nd_gudangMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    lokasi: string | null
    status_default: number | null
    visible: boolean | null
    gudang_group_id: number | null
    urutan: number | null
    status_aktif: number | null
  }

  export type Nd_gudangCountAggregateOutputType = {
    id: number
    nama: number
    lokasi: number
    status_default: number
    visible: number
    gudang_group_id: number
    urutan: number
    status_aktif: number
    _all: number
  }


  export type Nd_gudangAvgAggregateInputType = {
    id?: true
    status_default?: true
    gudang_group_id?: true
    urutan?: true
    status_aktif?: true
  }

  export type Nd_gudangSumAggregateInputType = {
    id?: true
    status_default?: true
    gudang_group_id?: true
    urutan?: true
    status_aktif?: true
  }

  export type Nd_gudangMinAggregateInputType = {
    id?: true
    nama?: true
    lokasi?: true
    status_default?: true
    visible?: true
    gudang_group_id?: true
    urutan?: true
    status_aktif?: true
  }

  export type Nd_gudangMaxAggregateInputType = {
    id?: true
    nama?: true
    lokasi?: true
    status_default?: true
    visible?: true
    gudang_group_id?: true
    urutan?: true
    status_aktif?: true
  }

  export type Nd_gudangCountAggregateInputType = {
    id?: true
    nama?: true
    lokasi?: true
    status_default?: true
    visible?: true
    gudang_group_id?: true
    urutan?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_gudangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_gudang to aggregate.
     */
    where?: nd_gudangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_gudangs to fetch.
     */
    orderBy?: nd_gudangOrderByWithRelationInput | nd_gudangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_gudangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_gudangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_gudangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_gudangs
    **/
    _count?: true | Nd_gudangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_gudangAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_gudangSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_gudangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_gudangMaxAggregateInputType
  }

  export type GetNd_gudangAggregateType<T extends Nd_gudangAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_gudang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_gudang[P]>
      : GetScalarType<T[P], AggregateNd_gudang[P]>
  }




  export type nd_gudangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_gudangWhereInput
    orderBy?: nd_gudangOrderByWithAggregationInput | nd_gudangOrderByWithAggregationInput[]
    by: Nd_gudangScalarFieldEnum[] | Nd_gudangScalarFieldEnum
    having?: nd_gudangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_gudangCountAggregateInputType | true
    _avg?: Nd_gudangAvgAggregateInputType
    _sum?: Nd_gudangSumAggregateInputType
    _min?: Nd_gudangMinAggregateInputType
    _max?: Nd_gudangMaxAggregateInputType
  }

  export type Nd_gudangGroupByOutputType = {
    id: number
    nama: string | null
    lokasi: string | null
    status_default: number
    visible: boolean
    gudang_group_id: number | null
    urutan: number
    status_aktif: number
    _count: Nd_gudangCountAggregateOutputType | null
    _avg: Nd_gudangAvgAggregateOutputType | null
    _sum: Nd_gudangSumAggregateOutputType | null
    _min: Nd_gudangMinAggregateOutputType | null
    _max: Nd_gudangMaxAggregateOutputType | null
  }

  type GetNd_gudangGroupByPayload<T extends nd_gudangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_gudangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_gudangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_gudangGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_gudangGroupByOutputType[P]>
        }
      >
    >


  export type nd_gudangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    lokasi?: boolean
    status_default?: boolean
    visible?: boolean
    gudang_group_id?: boolean
    urutan?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_gudang"]>



  export type nd_gudangSelectScalar = {
    id?: boolean
    nama?: boolean
    lokasi?: boolean
    status_default?: boolean
    visible?: boolean
    gudang_group_id?: boolean
    urutan?: boolean
    status_aktif?: boolean
  }

  export type nd_gudangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "lokasi" | "status_default" | "visible" | "gudang_group_id" | "urutan" | "status_aktif", ExtArgs["result"]["nd_gudang"]>

  export type $nd_gudangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_gudang"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string | null
      lokasi: string | null
      status_default: number
      visible: boolean
      gudang_group_id: number | null
      urutan: number
      status_aktif: number
    }, ExtArgs["result"]["nd_gudang"]>
    composites: {}
  }

  type nd_gudangGetPayload<S extends boolean | null | undefined | nd_gudangDefaultArgs> = $Result.GetResult<Prisma.$nd_gudangPayload, S>

  type nd_gudangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_gudangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_gudangCountAggregateInputType | true
    }

  export interface nd_gudangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_gudang'], meta: { name: 'nd_gudang' } }
    /**
     * Find zero or one Nd_gudang that matches the filter.
     * @param {nd_gudangFindUniqueArgs} args - Arguments to find a Nd_gudang
     * @example
     * // Get one Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_gudangFindUniqueArgs>(args: SelectSubset<T, nd_gudangFindUniqueArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_gudang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_gudangFindUniqueOrThrowArgs} args - Arguments to find a Nd_gudang
     * @example
     * // Get one Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_gudangFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_gudangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_gudang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangFindFirstArgs} args - Arguments to find a Nd_gudang
     * @example
     * // Get one Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_gudangFindFirstArgs>(args?: SelectSubset<T, nd_gudangFindFirstArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_gudang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangFindFirstOrThrowArgs} args - Arguments to find a Nd_gudang
     * @example
     * // Get one Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_gudangFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_gudangFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_gudangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_gudangs
     * const nd_gudangs = await prisma.nd_gudang.findMany()
     * 
     * // Get first 10 Nd_gudangs
     * const nd_gudangs = await prisma.nd_gudang.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_gudangWithIdOnly = await prisma.nd_gudang.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_gudangFindManyArgs>(args?: SelectSubset<T, nd_gudangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_gudang.
     * @param {nd_gudangCreateArgs} args - Arguments to create a Nd_gudang.
     * @example
     * // Create one Nd_gudang
     * const Nd_gudang = await prisma.nd_gudang.create({
     *   data: {
     *     // ... data to create a Nd_gudang
     *   }
     * })
     * 
     */
    create<T extends nd_gudangCreateArgs>(args: SelectSubset<T, nd_gudangCreateArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_gudangs.
     * @param {nd_gudangCreateManyArgs} args - Arguments to create many Nd_gudangs.
     * @example
     * // Create many Nd_gudangs
     * const nd_gudang = await prisma.nd_gudang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_gudangCreateManyArgs>(args?: SelectSubset<T, nd_gudangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_gudang.
     * @param {nd_gudangDeleteArgs} args - Arguments to delete one Nd_gudang.
     * @example
     * // Delete one Nd_gudang
     * const Nd_gudang = await prisma.nd_gudang.delete({
     *   where: {
     *     // ... filter to delete one Nd_gudang
     *   }
     * })
     * 
     */
    delete<T extends nd_gudangDeleteArgs>(args: SelectSubset<T, nd_gudangDeleteArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_gudang.
     * @param {nd_gudangUpdateArgs} args - Arguments to update one Nd_gudang.
     * @example
     * // Update one Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_gudangUpdateArgs>(args: SelectSubset<T, nd_gudangUpdateArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_gudangs.
     * @param {nd_gudangDeleteManyArgs} args - Arguments to filter Nd_gudangs to delete.
     * @example
     * // Delete a few Nd_gudangs
     * const { count } = await prisma.nd_gudang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_gudangDeleteManyArgs>(args?: SelectSubset<T, nd_gudangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_gudangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_gudangs
     * const nd_gudang = await prisma.nd_gudang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_gudangUpdateManyArgs>(args: SelectSubset<T, nd_gudangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_gudang.
     * @param {nd_gudangUpsertArgs} args - Arguments to update or create a Nd_gudang.
     * @example
     * // Update or create a Nd_gudang
     * const nd_gudang = await prisma.nd_gudang.upsert({
     *   create: {
     *     // ... data to create a Nd_gudang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_gudang we want to update
     *   }
     * })
     */
    upsert<T extends nd_gudangUpsertArgs>(args: SelectSubset<T, nd_gudangUpsertArgs<ExtArgs>>): Prisma__nd_gudangClient<$Result.GetResult<Prisma.$nd_gudangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_gudangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangCountArgs} args - Arguments to filter Nd_gudangs to count.
     * @example
     * // Count the number of Nd_gudangs
     * const count = await prisma.nd_gudang.count({
     *   where: {
     *     // ... the filter for the Nd_gudangs we want to count
     *   }
     * })
    **/
    count<T extends nd_gudangCountArgs>(
      args?: Subset<T, nd_gudangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_gudangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_gudang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_gudangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_gudangAggregateArgs>(args: Subset<T, Nd_gudangAggregateArgs>): Prisma.PrismaPromise<GetNd_gudangAggregateType<T>>

    /**
     * Group by Nd_gudang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_gudangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_gudangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_gudangGroupByArgs['orderBy'] }
        : { orderBy?: nd_gudangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_gudangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_gudangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_gudang model
   */
  readonly fields: nd_gudangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_gudang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_gudangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_gudang model
   */
  interface nd_gudangFieldRefs {
    readonly id: FieldRef<"nd_gudang", 'Int'>
    readonly nama: FieldRef<"nd_gudang", 'String'>
    readonly lokasi: FieldRef<"nd_gudang", 'String'>
    readonly status_default: FieldRef<"nd_gudang", 'Int'>
    readonly visible: FieldRef<"nd_gudang", 'Boolean'>
    readonly gudang_group_id: FieldRef<"nd_gudang", 'Int'>
    readonly urutan: FieldRef<"nd_gudang", 'Int'>
    readonly status_aktif: FieldRef<"nd_gudang", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_gudang findUnique
   */
  export type nd_gudangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter, which nd_gudang to fetch.
     */
    where: nd_gudangWhereUniqueInput
  }

  /**
   * nd_gudang findUniqueOrThrow
   */
  export type nd_gudangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter, which nd_gudang to fetch.
     */
    where: nd_gudangWhereUniqueInput
  }

  /**
   * nd_gudang findFirst
   */
  export type nd_gudangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter, which nd_gudang to fetch.
     */
    where?: nd_gudangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_gudangs to fetch.
     */
    orderBy?: nd_gudangOrderByWithRelationInput | nd_gudangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_gudangs.
     */
    cursor?: nd_gudangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_gudangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_gudangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_gudangs.
     */
    distinct?: Nd_gudangScalarFieldEnum | Nd_gudangScalarFieldEnum[]
  }

  /**
   * nd_gudang findFirstOrThrow
   */
  export type nd_gudangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter, which nd_gudang to fetch.
     */
    where?: nd_gudangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_gudangs to fetch.
     */
    orderBy?: nd_gudangOrderByWithRelationInput | nd_gudangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_gudangs.
     */
    cursor?: nd_gudangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_gudangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_gudangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_gudangs.
     */
    distinct?: Nd_gudangScalarFieldEnum | Nd_gudangScalarFieldEnum[]
  }

  /**
   * nd_gudang findMany
   */
  export type nd_gudangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter, which nd_gudangs to fetch.
     */
    where?: nd_gudangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_gudangs to fetch.
     */
    orderBy?: nd_gudangOrderByWithRelationInput | nd_gudangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_gudangs.
     */
    cursor?: nd_gudangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_gudangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_gudangs.
     */
    skip?: number
    distinct?: Nd_gudangScalarFieldEnum | Nd_gudangScalarFieldEnum[]
  }

  /**
   * nd_gudang create
   */
  export type nd_gudangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_gudang.
     */
    data: XOR<nd_gudangCreateInput, nd_gudangUncheckedCreateInput>
  }

  /**
   * nd_gudang createMany
   */
  export type nd_gudangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_gudangs.
     */
    data: nd_gudangCreateManyInput | nd_gudangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_gudang update
   */
  export type nd_gudangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_gudang.
     */
    data: XOR<nd_gudangUpdateInput, nd_gudangUncheckedUpdateInput>
    /**
     * Choose, which nd_gudang to update.
     */
    where: nd_gudangWhereUniqueInput
  }

  /**
   * nd_gudang updateMany
   */
  export type nd_gudangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_gudangs.
     */
    data: XOR<nd_gudangUpdateManyMutationInput, nd_gudangUncheckedUpdateManyInput>
    /**
     * Filter which nd_gudangs to update
     */
    where?: nd_gudangWhereInput
    /**
     * Limit how many nd_gudangs to update.
     */
    limit?: number
  }

  /**
   * nd_gudang upsert
   */
  export type nd_gudangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_gudang to update in case it exists.
     */
    where: nd_gudangWhereUniqueInput
    /**
     * In case the nd_gudang found by the `where` argument doesn't exist, create a new nd_gudang with this data.
     */
    create: XOR<nd_gudangCreateInput, nd_gudangUncheckedCreateInput>
    /**
     * In case the nd_gudang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_gudangUpdateInput, nd_gudangUncheckedUpdateInput>
  }

  /**
   * nd_gudang delete
   */
  export type nd_gudangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
    /**
     * Filter which nd_gudang to delete.
     */
    where: nd_gudangWhereUniqueInput
  }

  /**
   * nd_gudang deleteMany
   */
  export type nd_gudangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_gudangs to delete
     */
    where?: nd_gudangWhereInput
    /**
     * Limit how many nd_gudangs to delete.
     */
    limit?: number
  }

  /**
   * nd_gudang without action
   */
  export type nd_gudangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_gudang
     */
    select?: nd_gudangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_gudang
     */
    omit?: nd_gudangOmit<ExtArgs> | null
  }


  /**
   * Model nd_posisi
   */

  export type AggregateNd_posisi = {
    _count: Nd_posisiCountAggregateOutputType | null
    _avg: Nd_posisiAvgAggregateOutputType | null
    _sum: Nd_posisiSumAggregateOutputType | null
    _min: Nd_posisiMinAggregateOutputType | null
    _max: Nd_posisiMaxAggregateOutputType | null
  }

  export type Nd_posisiAvgAggregateOutputType = {
    id: number | null
  }

  export type Nd_posisiSumAggregateOutputType = {
    id: number | null
  }

  export type Nd_posisiMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Nd_posisiMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Nd_posisiCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type Nd_posisiAvgAggregateInputType = {
    id?: true
  }

  export type Nd_posisiSumAggregateInputType = {
    id?: true
  }

  export type Nd_posisiMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type Nd_posisiMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type Nd_posisiCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type Nd_posisiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_posisi to aggregate.
     */
    where?: nd_posisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_posisis to fetch.
     */
    orderBy?: nd_posisiOrderByWithRelationInput | nd_posisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_posisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_posisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_posisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_posisis
    **/
    _count?: true | Nd_posisiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_posisiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_posisiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_posisiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_posisiMaxAggregateInputType
  }

  export type GetNd_posisiAggregateType<T extends Nd_posisiAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_posisi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_posisi[P]>
      : GetScalarType<T[P], AggregateNd_posisi[P]>
  }




  export type nd_posisiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_posisiWhereInput
    orderBy?: nd_posisiOrderByWithAggregationInput | nd_posisiOrderByWithAggregationInput[]
    by: Nd_posisiScalarFieldEnum[] | Nd_posisiScalarFieldEnum
    having?: nd_posisiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_posisiCountAggregateInputType | true
    _avg?: Nd_posisiAvgAggregateInputType
    _sum?: Nd_posisiSumAggregateInputType
    _min?: Nd_posisiMinAggregateInputType
    _max?: Nd_posisiMaxAggregateInputType
  }

  export type Nd_posisiGroupByOutputType = {
    id: number
    name: string | null
    _count: Nd_posisiCountAggregateOutputType | null
    _avg: Nd_posisiAvgAggregateOutputType | null
    _sum: Nd_posisiSumAggregateOutputType | null
    _min: Nd_posisiMinAggregateOutputType | null
    _max: Nd_posisiMaxAggregateOutputType | null
  }

  type GetNd_posisiGroupByPayload<T extends nd_posisiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_posisiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_posisiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_posisiGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_posisiGroupByOutputType[P]>
        }
      >
    >


  export type nd_posisiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    nd_user?: boolean | nd_posisi$nd_userArgs<ExtArgs>
    _count?: boolean | Nd_posisiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nd_posisi"]>



  export type nd_posisiSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type nd_posisiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["nd_posisi"]>
  export type nd_posisiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_user?: boolean | nd_posisi$nd_userArgs<ExtArgs>
    _count?: boolean | Nd_posisiCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $nd_posisiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_posisi"
    objects: {
      nd_user: Prisma.$nd_userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string | null
    }, ExtArgs["result"]["nd_posisi"]>
    composites: {}
  }

  type nd_posisiGetPayload<S extends boolean | null | undefined | nd_posisiDefaultArgs> = $Result.GetResult<Prisma.$nd_posisiPayload, S>

  type nd_posisiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_posisiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_posisiCountAggregateInputType | true
    }

  export interface nd_posisiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_posisi'], meta: { name: 'nd_posisi' } }
    /**
     * Find zero or one Nd_posisi that matches the filter.
     * @param {nd_posisiFindUniqueArgs} args - Arguments to find a Nd_posisi
     * @example
     * // Get one Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_posisiFindUniqueArgs>(args: SelectSubset<T, nd_posisiFindUniqueArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_posisi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_posisiFindUniqueOrThrowArgs} args - Arguments to find a Nd_posisi
     * @example
     * // Get one Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_posisiFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_posisiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_posisi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiFindFirstArgs} args - Arguments to find a Nd_posisi
     * @example
     * // Get one Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_posisiFindFirstArgs>(args?: SelectSubset<T, nd_posisiFindFirstArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_posisi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiFindFirstOrThrowArgs} args - Arguments to find a Nd_posisi
     * @example
     * // Get one Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_posisiFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_posisiFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_posisis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_posisis
     * const nd_posisis = await prisma.nd_posisi.findMany()
     * 
     * // Get first 10 Nd_posisis
     * const nd_posisis = await prisma.nd_posisi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_posisiWithIdOnly = await prisma.nd_posisi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_posisiFindManyArgs>(args?: SelectSubset<T, nd_posisiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_posisi.
     * @param {nd_posisiCreateArgs} args - Arguments to create a Nd_posisi.
     * @example
     * // Create one Nd_posisi
     * const Nd_posisi = await prisma.nd_posisi.create({
     *   data: {
     *     // ... data to create a Nd_posisi
     *   }
     * })
     * 
     */
    create<T extends nd_posisiCreateArgs>(args: SelectSubset<T, nd_posisiCreateArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_posisis.
     * @param {nd_posisiCreateManyArgs} args - Arguments to create many Nd_posisis.
     * @example
     * // Create many Nd_posisis
     * const nd_posisi = await prisma.nd_posisi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_posisiCreateManyArgs>(args?: SelectSubset<T, nd_posisiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_posisi.
     * @param {nd_posisiDeleteArgs} args - Arguments to delete one Nd_posisi.
     * @example
     * // Delete one Nd_posisi
     * const Nd_posisi = await prisma.nd_posisi.delete({
     *   where: {
     *     // ... filter to delete one Nd_posisi
     *   }
     * })
     * 
     */
    delete<T extends nd_posisiDeleteArgs>(args: SelectSubset<T, nd_posisiDeleteArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_posisi.
     * @param {nd_posisiUpdateArgs} args - Arguments to update one Nd_posisi.
     * @example
     * // Update one Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_posisiUpdateArgs>(args: SelectSubset<T, nd_posisiUpdateArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_posisis.
     * @param {nd_posisiDeleteManyArgs} args - Arguments to filter Nd_posisis to delete.
     * @example
     * // Delete a few Nd_posisis
     * const { count } = await prisma.nd_posisi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_posisiDeleteManyArgs>(args?: SelectSubset<T, nd_posisiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_posisis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_posisis
     * const nd_posisi = await prisma.nd_posisi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_posisiUpdateManyArgs>(args: SelectSubset<T, nd_posisiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_posisi.
     * @param {nd_posisiUpsertArgs} args - Arguments to update or create a Nd_posisi.
     * @example
     * // Update or create a Nd_posisi
     * const nd_posisi = await prisma.nd_posisi.upsert({
     *   create: {
     *     // ... data to create a Nd_posisi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_posisi we want to update
     *   }
     * })
     */
    upsert<T extends nd_posisiUpsertArgs>(args: SelectSubset<T, nd_posisiUpsertArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_posisis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiCountArgs} args - Arguments to filter Nd_posisis to count.
     * @example
     * // Count the number of Nd_posisis
     * const count = await prisma.nd_posisi.count({
     *   where: {
     *     // ... the filter for the Nd_posisis we want to count
     *   }
     * })
    **/
    count<T extends nd_posisiCountArgs>(
      args?: Subset<T, nd_posisiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_posisiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_posisi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_posisiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_posisiAggregateArgs>(args: Subset<T, Nd_posisiAggregateArgs>): Prisma.PrismaPromise<GetNd_posisiAggregateType<T>>

    /**
     * Group by Nd_posisi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_posisiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_posisiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_posisiGroupByArgs['orderBy'] }
        : { orderBy?: nd_posisiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_posisiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_posisiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_posisi model
   */
  readonly fields: nd_posisiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_posisi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_posisiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    nd_user<T extends nd_posisi$nd_userArgs<ExtArgs> = {}>(args?: Subset<T, nd_posisi$nd_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_posisi model
   */
  interface nd_posisiFieldRefs {
    readonly id: FieldRef<"nd_posisi", 'Int'>
    readonly name: FieldRef<"nd_posisi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * nd_posisi findUnique
   */
  export type nd_posisiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter, which nd_posisi to fetch.
     */
    where: nd_posisiWhereUniqueInput
  }

  /**
   * nd_posisi findUniqueOrThrow
   */
  export type nd_posisiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter, which nd_posisi to fetch.
     */
    where: nd_posisiWhereUniqueInput
  }

  /**
   * nd_posisi findFirst
   */
  export type nd_posisiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter, which nd_posisi to fetch.
     */
    where?: nd_posisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_posisis to fetch.
     */
    orderBy?: nd_posisiOrderByWithRelationInput | nd_posisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_posisis.
     */
    cursor?: nd_posisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_posisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_posisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_posisis.
     */
    distinct?: Nd_posisiScalarFieldEnum | Nd_posisiScalarFieldEnum[]
  }

  /**
   * nd_posisi findFirstOrThrow
   */
  export type nd_posisiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter, which nd_posisi to fetch.
     */
    where?: nd_posisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_posisis to fetch.
     */
    orderBy?: nd_posisiOrderByWithRelationInput | nd_posisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_posisis.
     */
    cursor?: nd_posisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_posisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_posisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_posisis.
     */
    distinct?: Nd_posisiScalarFieldEnum | Nd_posisiScalarFieldEnum[]
  }

  /**
   * nd_posisi findMany
   */
  export type nd_posisiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter, which nd_posisis to fetch.
     */
    where?: nd_posisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_posisis to fetch.
     */
    orderBy?: nd_posisiOrderByWithRelationInput | nd_posisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_posisis.
     */
    cursor?: nd_posisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_posisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_posisis.
     */
    skip?: number
    distinct?: Nd_posisiScalarFieldEnum | Nd_posisiScalarFieldEnum[]
  }

  /**
   * nd_posisi create
   */
  export type nd_posisiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * The data needed to create a nd_posisi.
     */
    data?: XOR<nd_posisiCreateInput, nd_posisiUncheckedCreateInput>
  }

  /**
   * nd_posisi createMany
   */
  export type nd_posisiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_posisis.
     */
    data: nd_posisiCreateManyInput | nd_posisiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_posisi update
   */
  export type nd_posisiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * The data needed to update a nd_posisi.
     */
    data: XOR<nd_posisiUpdateInput, nd_posisiUncheckedUpdateInput>
    /**
     * Choose, which nd_posisi to update.
     */
    where: nd_posisiWhereUniqueInput
  }

  /**
   * nd_posisi updateMany
   */
  export type nd_posisiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_posisis.
     */
    data: XOR<nd_posisiUpdateManyMutationInput, nd_posisiUncheckedUpdateManyInput>
    /**
     * Filter which nd_posisis to update
     */
    where?: nd_posisiWhereInput
    /**
     * Limit how many nd_posisis to update.
     */
    limit?: number
  }

  /**
   * nd_posisi upsert
   */
  export type nd_posisiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * The filter to search for the nd_posisi to update in case it exists.
     */
    where: nd_posisiWhereUniqueInput
    /**
     * In case the nd_posisi found by the `where` argument doesn't exist, create a new nd_posisi with this data.
     */
    create: XOR<nd_posisiCreateInput, nd_posisiUncheckedCreateInput>
    /**
     * In case the nd_posisi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_posisiUpdateInput, nd_posisiUncheckedUpdateInput>
  }

  /**
   * nd_posisi delete
   */
  export type nd_posisiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    /**
     * Filter which nd_posisi to delete.
     */
    where: nd_posisiWhereUniqueInput
  }

  /**
   * nd_posisi deleteMany
   */
  export type nd_posisiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_posisis to delete
     */
    where?: nd_posisiWhereInput
    /**
     * Limit how many nd_posisis to delete.
     */
    limit?: number
  }

  /**
   * nd_posisi.nd_user
   */
  export type nd_posisi$nd_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    where?: nd_userWhereInput
    orderBy?: nd_userOrderByWithRelationInput | nd_userOrderByWithRelationInput[]
    cursor?: nd_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Nd_userScalarFieldEnum | Nd_userScalarFieldEnum[]
  }

  /**
   * nd_posisi without action
   */
  export type nd_posisiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
  }


  /**
   * Model nd_satuan
   */

  export type AggregateNd_satuan = {
    _count: Nd_satuanCountAggregateOutputType | null
    _avg: Nd_satuanAvgAggregateOutputType | null
    _sum: Nd_satuanSumAggregateOutputType | null
    _min: Nd_satuanMinAggregateOutputType | null
    _max: Nd_satuanMaxAggregateOutputType | null
  }

  export type Nd_satuanAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_satuanSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_satuanMinAggregateOutputType = {
    id: number | null
    nama: string | null
    status_aktif: number | null
  }

  export type Nd_satuanMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    status_aktif: number | null
  }

  export type Nd_satuanCountAggregateOutputType = {
    id: number
    nama: number
    status_aktif: number
    _all: number
  }


  export type Nd_satuanAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_satuanSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_satuanMinAggregateInputType = {
    id?: true
    nama?: true
    status_aktif?: true
  }

  export type Nd_satuanMaxAggregateInputType = {
    id?: true
    nama?: true
    status_aktif?: true
  }

  export type Nd_satuanCountAggregateInputType = {
    id?: true
    nama?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_satuanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_satuan to aggregate.
     */
    where?: nd_satuanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_satuans to fetch.
     */
    orderBy?: nd_satuanOrderByWithRelationInput | nd_satuanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_satuanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_satuans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_satuans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_satuans
    **/
    _count?: true | Nd_satuanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_satuanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_satuanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_satuanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_satuanMaxAggregateInputType
  }

  export type GetNd_satuanAggregateType<T extends Nd_satuanAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_satuan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_satuan[P]>
      : GetScalarType<T[P], AggregateNd_satuan[P]>
  }




  export type nd_satuanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_satuanWhereInput
    orderBy?: nd_satuanOrderByWithAggregationInput | nd_satuanOrderByWithAggregationInput[]
    by: Nd_satuanScalarFieldEnum[] | Nd_satuanScalarFieldEnum
    having?: nd_satuanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_satuanCountAggregateInputType | true
    _avg?: Nd_satuanAvgAggregateInputType
    _sum?: Nd_satuanSumAggregateInputType
    _min?: Nd_satuanMinAggregateInputType
    _max?: Nd_satuanMaxAggregateInputType
  }

  export type Nd_satuanGroupByOutputType = {
    id: number
    nama: string | null
    status_aktif: number | null
    _count: Nd_satuanCountAggregateOutputType | null
    _avg: Nd_satuanAvgAggregateOutputType | null
    _sum: Nd_satuanSumAggregateOutputType | null
    _min: Nd_satuanMinAggregateOutputType | null
    _max: Nd_satuanMaxAggregateOutputType | null
  }

  type GetNd_satuanGroupByPayload<T extends nd_satuanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_satuanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_satuanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_satuanGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_satuanGroupByOutputType[P]>
        }
      >
    >


  export type nd_satuanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    status_aktif?: boolean
    nd_barang?: boolean | nd_satuan$nd_barangArgs<ExtArgs>
    _count?: boolean | Nd_satuanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nd_satuan"]>



  export type nd_satuanSelectScalar = {
    id?: boolean
    nama?: boolean
    status_aktif?: boolean
  }

  export type nd_satuanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "status_aktif", ExtArgs["result"]["nd_satuan"]>
  export type nd_satuanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_barang?: boolean | nd_satuan$nd_barangArgs<ExtArgs>
    _count?: boolean | Nd_satuanCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $nd_satuanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_satuan"
    objects: {
      nd_barang: Prisma.$nd_barangPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string | null
      status_aktif: number | null
    }, ExtArgs["result"]["nd_satuan"]>
    composites: {}
  }

  type nd_satuanGetPayload<S extends boolean | null | undefined | nd_satuanDefaultArgs> = $Result.GetResult<Prisma.$nd_satuanPayload, S>

  type nd_satuanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_satuanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_satuanCountAggregateInputType | true
    }

  export interface nd_satuanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_satuan'], meta: { name: 'nd_satuan' } }
    /**
     * Find zero or one Nd_satuan that matches the filter.
     * @param {nd_satuanFindUniqueArgs} args - Arguments to find a Nd_satuan
     * @example
     * // Get one Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_satuanFindUniqueArgs>(args: SelectSubset<T, nd_satuanFindUniqueArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_satuan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_satuanFindUniqueOrThrowArgs} args - Arguments to find a Nd_satuan
     * @example
     * // Get one Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_satuanFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_satuanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_satuan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanFindFirstArgs} args - Arguments to find a Nd_satuan
     * @example
     * // Get one Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_satuanFindFirstArgs>(args?: SelectSubset<T, nd_satuanFindFirstArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_satuan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanFindFirstOrThrowArgs} args - Arguments to find a Nd_satuan
     * @example
     * // Get one Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_satuanFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_satuanFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_satuans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_satuans
     * const nd_satuans = await prisma.nd_satuan.findMany()
     * 
     * // Get first 10 Nd_satuans
     * const nd_satuans = await prisma.nd_satuan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_satuanWithIdOnly = await prisma.nd_satuan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_satuanFindManyArgs>(args?: SelectSubset<T, nd_satuanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_satuan.
     * @param {nd_satuanCreateArgs} args - Arguments to create a Nd_satuan.
     * @example
     * // Create one Nd_satuan
     * const Nd_satuan = await prisma.nd_satuan.create({
     *   data: {
     *     // ... data to create a Nd_satuan
     *   }
     * })
     * 
     */
    create<T extends nd_satuanCreateArgs>(args: SelectSubset<T, nd_satuanCreateArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_satuans.
     * @param {nd_satuanCreateManyArgs} args - Arguments to create many Nd_satuans.
     * @example
     * // Create many Nd_satuans
     * const nd_satuan = await prisma.nd_satuan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_satuanCreateManyArgs>(args?: SelectSubset<T, nd_satuanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_satuan.
     * @param {nd_satuanDeleteArgs} args - Arguments to delete one Nd_satuan.
     * @example
     * // Delete one Nd_satuan
     * const Nd_satuan = await prisma.nd_satuan.delete({
     *   where: {
     *     // ... filter to delete one Nd_satuan
     *   }
     * })
     * 
     */
    delete<T extends nd_satuanDeleteArgs>(args: SelectSubset<T, nd_satuanDeleteArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_satuan.
     * @param {nd_satuanUpdateArgs} args - Arguments to update one Nd_satuan.
     * @example
     * // Update one Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_satuanUpdateArgs>(args: SelectSubset<T, nd_satuanUpdateArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_satuans.
     * @param {nd_satuanDeleteManyArgs} args - Arguments to filter Nd_satuans to delete.
     * @example
     * // Delete a few Nd_satuans
     * const { count } = await prisma.nd_satuan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_satuanDeleteManyArgs>(args?: SelectSubset<T, nd_satuanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_satuans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_satuans
     * const nd_satuan = await prisma.nd_satuan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_satuanUpdateManyArgs>(args: SelectSubset<T, nd_satuanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_satuan.
     * @param {nd_satuanUpsertArgs} args - Arguments to update or create a Nd_satuan.
     * @example
     * // Update or create a Nd_satuan
     * const nd_satuan = await prisma.nd_satuan.upsert({
     *   create: {
     *     // ... data to create a Nd_satuan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_satuan we want to update
     *   }
     * })
     */
    upsert<T extends nd_satuanUpsertArgs>(args: SelectSubset<T, nd_satuanUpsertArgs<ExtArgs>>): Prisma__nd_satuanClient<$Result.GetResult<Prisma.$nd_satuanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_satuans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanCountArgs} args - Arguments to filter Nd_satuans to count.
     * @example
     * // Count the number of Nd_satuans
     * const count = await prisma.nd_satuan.count({
     *   where: {
     *     // ... the filter for the Nd_satuans we want to count
     *   }
     * })
    **/
    count<T extends nd_satuanCountArgs>(
      args?: Subset<T, nd_satuanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_satuanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_satuan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_satuanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_satuanAggregateArgs>(args: Subset<T, Nd_satuanAggregateArgs>): Prisma.PrismaPromise<GetNd_satuanAggregateType<T>>

    /**
     * Group by Nd_satuan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_satuanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_satuanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_satuanGroupByArgs['orderBy'] }
        : { orderBy?: nd_satuanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_satuanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_satuanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_satuan model
   */
  readonly fields: nd_satuanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_satuan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_satuanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    nd_barang<T extends nd_satuan$nd_barangArgs<ExtArgs> = {}>(args?: Subset<T, nd_satuan$nd_barangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_barangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_satuan model
   */
  interface nd_satuanFieldRefs {
    readonly id: FieldRef<"nd_satuan", 'Int'>
    readonly nama: FieldRef<"nd_satuan", 'String'>
    readonly status_aktif: FieldRef<"nd_satuan", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_satuan findUnique
   */
  export type nd_satuanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter, which nd_satuan to fetch.
     */
    where: nd_satuanWhereUniqueInput
  }

  /**
   * nd_satuan findUniqueOrThrow
   */
  export type nd_satuanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter, which nd_satuan to fetch.
     */
    where: nd_satuanWhereUniqueInput
  }

  /**
   * nd_satuan findFirst
   */
  export type nd_satuanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter, which nd_satuan to fetch.
     */
    where?: nd_satuanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_satuans to fetch.
     */
    orderBy?: nd_satuanOrderByWithRelationInput | nd_satuanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_satuans.
     */
    cursor?: nd_satuanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_satuans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_satuans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_satuans.
     */
    distinct?: Nd_satuanScalarFieldEnum | Nd_satuanScalarFieldEnum[]
  }

  /**
   * nd_satuan findFirstOrThrow
   */
  export type nd_satuanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter, which nd_satuan to fetch.
     */
    where?: nd_satuanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_satuans to fetch.
     */
    orderBy?: nd_satuanOrderByWithRelationInput | nd_satuanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_satuans.
     */
    cursor?: nd_satuanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_satuans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_satuans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_satuans.
     */
    distinct?: Nd_satuanScalarFieldEnum | Nd_satuanScalarFieldEnum[]
  }

  /**
   * nd_satuan findMany
   */
  export type nd_satuanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter, which nd_satuans to fetch.
     */
    where?: nd_satuanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_satuans to fetch.
     */
    orderBy?: nd_satuanOrderByWithRelationInput | nd_satuanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_satuans.
     */
    cursor?: nd_satuanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_satuans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_satuans.
     */
    skip?: number
    distinct?: Nd_satuanScalarFieldEnum | Nd_satuanScalarFieldEnum[]
  }

  /**
   * nd_satuan create
   */
  export type nd_satuanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * The data needed to create a nd_satuan.
     */
    data?: XOR<nd_satuanCreateInput, nd_satuanUncheckedCreateInput>
  }

  /**
   * nd_satuan createMany
   */
  export type nd_satuanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_satuans.
     */
    data: nd_satuanCreateManyInput | nd_satuanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_satuan update
   */
  export type nd_satuanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * The data needed to update a nd_satuan.
     */
    data: XOR<nd_satuanUpdateInput, nd_satuanUncheckedUpdateInput>
    /**
     * Choose, which nd_satuan to update.
     */
    where: nd_satuanWhereUniqueInput
  }

  /**
   * nd_satuan updateMany
   */
  export type nd_satuanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_satuans.
     */
    data: XOR<nd_satuanUpdateManyMutationInput, nd_satuanUncheckedUpdateManyInput>
    /**
     * Filter which nd_satuans to update
     */
    where?: nd_satuanWhereInput
    /**
     * Limit how many nd_satuans to update.
     */
    limit?: number
  }

  /**
   * nd_satuan upsert
   */
  export type nd_satuanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * The filter to search for the nd_satuan to update in case it exists.
     */
    where: nd_satuanWhereUniqueInput
    /**
     * In case the nd_satuan found by the `where` argument doesn't exist, create a new nd_satuan with this data.
     */
    create: XOR<nd_satuanCreateInput, nd_satuanUncheckedCreateInput>
    /**
     * In case the nd_satuan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_satuanUpdateInput, nd_satuanUncheckedUpdateInput>
  }

  /**
   * nd_satuan delete
   */
  export type nd_satuanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
    /**
     * Filter which nd_satuan to delete.
     */
    where: nd_satuanWhereUniqueInput
  }

  /**
   * nd_satuan deleteMany
   */
  export type nd_satuanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_satuans to delete
     */
    where?: nd_satuanWhereInput
    /**
     * Limit how many nd_satuans to delete.
     */
    limit?: number
  }

  /**
   * nd_satuan.nd_barang
   */
  export type nd_satuan$nd_barangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_barang
     */
    select?: nd_barangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_barang
     */
    omit?: nd_barangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_barangInclude<ExtArgs> | null
    where?: nd_barangWhereInput
    orderBy?: nd_barangOrderByWithRelationInput | nd_barangOrderByWithRelationInput[]
    cursor?: nd_barangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Nd_barangScalarFieldEnum | Nd_barangScalarFieldEnum[]
  }

  /**
   * nd_satuan without action
   */
  export type nd_satuanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_satuan
     */
    select?: nd_satuanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_satuan
     */
    omit?: nd_satuanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_satuanInclude<ExtArgs> | null
  }


  /**
   * Model nd_supplier
   */

  export type AggregateNd_supplier = {
    _count: Nd_supplierCountAggregateOutputType | null
    _avg: Nd_supplierAvgAggregateOutputType | null
    _sum: Nd_supplierSumAggregateOutputType | null
    _min: Nd_supplierMinAggregateOutputType | null
    _max: Nd_supplierMaxAggregateOutputType | null
  }

  export type Nd_supplierAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_supplierSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_supplierMinAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    alamat: string | null
    telepon: string | null
    kota: string | null
    fax: string | null
    kode_pos: string | null
    nama_bank: string | null
    no_rek_bank: string | null
    email: string | null
    website: string | null
    status_aktif: number | null
  }

  export type Nd_supplierMaxAggregateOutputType = {
    id: number | null
    kode: string | null
    nama: string | null
    alamat: string | null
    telepon: string | null
    kota: string | null
    fax: string | null
    kode_pos: string | null
    nama_bank: string | null
    no_rek_bank: string | null
    email: string | null
    website: string | null
    status_aktif: number | null
  }

  export type Nd_supplierCountAggregateOutputType = {
    id: number
    kode: number
    nama: number
    alamat: number
    telepon: number
    kota: number
    fax: number
    kode_pos: number
    nama_bank: number
    no_rek_bank: number
    email: number
    website: number
    status_aktif: number
    _all: number
  }


  export type Nd_supplierAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_supplierSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_supplierMinAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    alamat?: true
    telepon?: true
    kota?: true
    fax?: true
    kode_pos?: true
    nama_bank?: true
    no_rek_bank?: true
    email?: true
    website?: true
    status_aktif?: true
  }

  export type Nd_supplierMaxAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    alamat?: true
    telepon?: true
    kota?: true
    fax?: true
    kode_pos?: true
    nama_bank?: true
    no_rek_bank?: true
    email?: true
    website?: true
    status_aktif?: true
  }

  export type Nd_supplierCountAggregateInputType = {
    id?: true
    kode?: true
    nama?: true
    alamat?: true
    telepon?: true
    kota?: true
    fax?: true
    kode_pos?: true
    nama_bank?: true
    no_rek_bank?: true
    email?: true
    website?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_supplierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_supplier to aggregate.
     */
    where?: nd_supplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_suppliers to fetch.
     */
    orderBy?: nd_supplierOrderByWithRelationInput | nd_supplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_supplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_suppliers
    **/
    _count?: true | Nd_supplierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_supplierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_supplierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_supplierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_supplierMaxAggregateInputType
  }

  export type GetNd_supplierAggregateType<T extends Nd_supplierAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_supplier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_supplier[P]>
      : GetScalarType<T[P], AggregateNd_supplier[P]>
  }




  export type nd_supplierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_supplierWhereInput
    orderBy?: nd_supplierOrderByWithAggregationInput | nd_supplierOrderByWithAggregationInput[]
    by: Nd_supplierScalarFieldEnum[] | Nd_supplierScalarFieldEnum
    having?: nd_supplierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_supplierCountAggregateInputType | true
    _avg?: Nd_supplierAvgAggregateInputType
    _sum?: Nd_supplierSumAggregateInputType
    _min?: Nd_supplierMinAggregateInputType
    _max?: Nd_supplierMaxAggregateInputType
  }

  export type Nd_supplierGroupByOutputType = {
    id: number
    kode: string | null
    nama: string | null
    alamat: string | null
    telepon: string | null
    kota: string | null
    fax: string | null
    kode_pos: string | null
    nama_bank: string | null
    no_rek_bank: string | null
    email: string | null
    website: string | null
    status_aktif: number
    _count: Nd_supplierCountAggregateOutputType | null
    _avg: Nd_supplierAvgAggregateOutputType | null
    _sum: Nd_supplierSumAggregateOutputType | null
    _min: Nd_supplierMinAggregateOutputType | null
    _max: Nd_supplierMaxAggregateOutputType | null
  }

  type GetNd_supplierGroupByPayload<T extends nd_supplierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_supplierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_supplierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_supplierGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_supplierGroupByOutputType[P]>
        }
      >
    >


  export type nd_supplierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kode?: boolean
    nama?: boolean
    alamat?: boolean
    telepon?: boolean
    kota?: boolean
    fax?: boolean
    kode_pos?: boolean
    nama_bank?: boolean
    no_rek_bank?: boolean
    email?: boolean
    website?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_supplier"]>



  export type nd_supplierSelectScalar = {
    id?: boolean
    kode?: boolean
    nama?: boolean
    alamat?: boolean
    telepon?: boolean
    kota?: boolean
    fax?: boolean
    kode_pos?: boolean
    nama_bank?: boolean
    no_rek_bank?: boolean
    email?: boolean
    website?: boolean
    status_aktif?: boolean
  }

  export type nd_supplierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "kode" | "nama" | "alamat" | "telepon" | "kota" | "fax" | "kode_pos" | "nama_bank" | "no_rek_bank" | "email" | "website" | "status_aktif", ExtArgs["result"]["nd_supplier"]>

  export type $nd_supplierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_supplier"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      kode: string | null
      nama: string | null
      alamat: string | null
      telepon: string | null
      kota: string | null
      fax: string | null
      kode_pos: string | null
      nama_bank: string | null
      no_rek_bank: string | null
      email: string | null
      website: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_supplier"]>
    composites: {}
  }

  type nd_supplierGetPayload<S extends boolean | null | undefined | nd_supplierDefaultArgs> = $Result.GetResult<Prisma.$nd_supplierPayload, S>

  type nd_supplierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_supplierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_supplierCountAggregateInputType | true
    }

  export interface nd_supplierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_supplier'], meta: { name: 'nd_supplier' } }
    /**
     * Find zero or one Nd_supplier that matches the filter.
     * @param {nd_supplierFindUniqueArgs} args - Arguments to find a Nd_supplier
     * @example
     * // Get one Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_supplierFindUniqueArgs>(args: SelectSubset<T, nd_supplierFindUniqueArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_supplier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_supplierFindUniqueOrThrowArgs} args - Arguments to find a Nd_supplier
     * @example
     * // Get one Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_supplierFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_supplierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_supplier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierFindFirstArgs} args - Arguments to find a Nd_supplier
     * @example
     * // Get one Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_supplierFindFirstArgs>(args?: SelectSubset<T, nd_supplierFindFirstArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_supplier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierFindFirstOrThrowArgs} args - Arguments to find a Nd_supplier
     * @example
     * // Get one Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_supplierFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_supplierFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_suppliers
     * const nd_suppliers = await prisma.nd_supplier.findMany()
     * 
     * // Get first 10 Nd_suppliers
     * const nd_suppliers = await prisma.nd_supplier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_supplierWithIdOnly = await prisma.nd_supplier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_supplierFindManyArgs>(args?: SelectSubset<T, nd_supplierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_supplier.
     * @param {nd_supplierCreateArgs} args - Arguments to create a Nd_supplier.
     * @example
     * // Create one Nd_supplier
     * const Nd_supplier = await prisma.nd_supplier.create({
     *   data: {
     *     // ... data to create a Nd_supplier
     *   }
     * })
     * 
     */
    create<T extends nd_supplierCreateArgs>(args: SelectSubset<T, nd_supplierCreateArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_suppliers.
     * @param {nd_supplierCreateManyArgs} args - Arguments to create many Nd_suppliers.
     * @example
     * // Create many Nd_suppliers
     * const nd_supplier = await prisma.nd_supplier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_supplierCreateManyArgs>(args?: SelectSubset<T, nd_supplierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_supplier.
     * @param {nd_supplierDeleteArgs} args - Arguments to delete one Nd_supplier.
     * @example
     * // Delete one Nd_supplier
     * const Nd_supplier = await prisma.nd_supplier.delete({
     *   where: {
     *     // ... filter to delete one Nd_supplier
     *   }
     * })
     * 
     */
    delete<T extends nd_supplierDeleteArgs>(args: SelectSubset<T, nd_supplierDeleteArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_supplier.
     * @param {nd_supplierUpdateArgs} args - Arguments to update one Nd_supplier.
     * @example
     * // Update one Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_supplierUpdateArgs>(args: SelectSubset<T, nd_supplierUpdateArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_suppliers.
     * @param {nd_supplierDeleteManyArgs} args - Arguments to filter Nd_suppliers to delete.
     * @example
     * // Delete a few Nd_suppliers
     * const { count } = await prisma.nd_supplier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_supplierDeleteManyArgs>(args?: SelectSubset<T, nd_supplierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_suppliers
     * const nd_supplier = await prisma.nd_supplier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_supplierUpdateManyArgs>(args: SelectSubset<T, nd_supplierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_supplier.
     * @param {nd_supplierUpsertArgs} args - Arguments to update or create a Nd_supplier.
     * @example
     * // Update or create a Nd_supplier
     * const nd_supplier = await prisma.nd_supplier.upsert({
     *   create: {
     *     // ... data to create a Nd_supplier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_supplier we want to update
     *   }
     * })
     */
    upsert<T extends nd_supplierUpsertArgs>(args: SelectSubset<T, nd_supplierUpsertArgs<ExtArgs>>): Prisma__nd_supplierClient<$Result.GetResult<Prisma.$nd_supplierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierCountArgs} args - Arguments to filter Nd_suppliers to count.
     * @example
     * // Count the number of Nd_suppliers
     * const count = await prisma.nd_supplier.count({
     *   where: {
     *     // ... the filter for the Nd_suppliers we want to count
     *   }
     * })
    **/
    count<T extends nd_supplierCountArgs>(
      args?: Subset<T, nd_supplierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_supplierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_supplierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_supplierAggregateArgs>(args: Subset<T, Nd_supplierAggregateArgs>): Prisma.PrismaPromise<GetNd_supplierAggregateType<T>>

    /**
     * Group by Nd_supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_supplierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_supplierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_supplierGroupByArgs['orderBy'] }
        : { orderBy?: nd_supplierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_supplierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_supplierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_supplier model
   */
  readonly fields: nd_supplierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_supplier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_supplierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_supplier model
   */
  interface nd_supplierFieldRefs {
    readonly id: FieldRef<"nd_supplier", 'Int'>
    readonly kode: FieldRef<"nd_supplier", 'String'>
    readonly nama: FieldRef<"nd_supplier", 'String'>
    readonly alamat: FieldRef<"nd_supplier", 'String'>
    readonly telepon: FieldRef<"nd_supplier", 'String'>
    readonly kota: FieldRef<"nd_supplier", 'String'>
    readonly fax: FieldRef<"nd_supplier", 'String'>
    readonly kode_pos: FieldRef<"nd_supplier", 'String'>
    readonly nama_bank: FieldRef<"nd_supplier", 'String'>
    readonly no_rek_bank: FieldRef<"nd_supplier", 'String'>
    readonly email: FieldRef<"nd_supplier", 'String'>
    readonly website: FieldRef<"nd_supplier", 'String'>
    readonly status_aktif: FieldRef<"nd_supplier", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_supplier findUnique
   */
  export type nd_supplierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter, which nd_supplier to fetch.
     */
    where: nd_supplierWhereUniqueInput
  }

  /**
   * nd_supplier findUniqueOrThrow
   */
  export type nd_supplierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter, which nd_supplier to fetch.
     */
    where: nd_supplierWhereUniqueInput
  }

  /**
   * nd_supplier findFirst
   */
  export type nd_supplierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter, which nd_supplier to fetch.
     */
    where?: nd_supplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_suppliers to fetch.
     */
    orderBy?: nd_supplierOrderByWithRelationInput | nd_supplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_suppliers.
     */
    cursor?: nd_supplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_suppliers.
     */
    distinct?: Nd_supplierScalarFieldEnum | Nd_supplierScalarFieldEnum[]
  }

  /**
   * nd_supplier findFirstOrThrow
   */
  export type nd_supplierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter, which nd_supplier to fetch.
     */
    where?: nd_supplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_suppliers to fetch.
     */
    orderBy?: nd_supplierOrderByWithRelationInput | nd_supplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_suppliers.
     */
    cursor?: nd_supplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_suppliers.
     */
    distinct?: Nd_supplierScalarFieldEnum | Nd_supplierScalarFieldEnum[]
  }

  /**
   * nd_supplier findMany
   */
  export type nd_supplierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter, which nd_suppliers to fetch.
     */
    where?: nd_supplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_suppliers to fetch.
     */
    orderBy?: nd_supplierOrderByWithRelationInput | nd_supplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_suppliers.
     */
    cursor?: nd_supplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_suppliers.
     */
    skip?: number
    distinct?: Nd_supplierScalarFieldEnum | Nd_supplierScalarFieldEnum[]
  }

  /**
   * nd_supplier create
   */
  export type nd_supplierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_supplier.
     */
    data?: XOR<nd_supplierCreateInput, nd_supplierUncheckedCreateInput>
  }

  /**
   * nd_supplier createMany
   */
  export type nd_supplierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_suppliers.
     */
    data: nd_supplierCreateManyInput | nd_supplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_supplier update
   */
  export type nd_supplierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_supplier.
     */
    data: XOR<nd_supplierUpdateInput, nd_supplierUncheckedUpdateInput>
    /**
     * Choose, which nd_supplier to update.
     */
    where: nd_supplierWhereUniqueInput
  }

  /**
   * nd_supplier updateMany
   */
  export type nd_supplierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_suppliers.
     */
    data: XOR<nd_supplierUpdateManyMutationInput, nd_supplierUncheckedUpdateManyInput>
    /**
     * Filter which nd_suppliers to update
     */
    where?: nd_supplierWhereInput
    /**
     * Limit how many nd_suppliers to update.
     */
    limit?: number
  }

  /**
   * nd_supplier upsert
   */
  export type nd_supplierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_supplier to update in case it exists.
     */
    where: nd_supplierWhereUniqueInput
    /**
     * In case the nd_supplier found by the `where` argument doesn't exist, create a new nd_supplier with this data.
     */
    create: XOR<nd_supplierCreateInput, nd_supplierUncheckedCreateInput>
    /**
     * In case the nd_supplier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_supplierUpdateInput, nd_supplierUncheckedUpdateInput>
  }

  /**
   * nd_supplier delete
   */
  export type nd_supplierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
    /**
     * Filter which nd_supplier to delete.
     */
    where: nd_supplierWhereUniqueInput
  }

  /**
   * nd_supplier deleteMany
   */
  export type nd_supplierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_suppliers to delete
     */
    where?: nd_supplierWhereInput
    /**
     * Limit how many nd_suppliers to delete.
     */
    limit?: number
  }

  /**
   * nd_supplier without action
   */
  export type nd_supplierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_supplier
     */
    select?: nd_supplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_supplier
     */
    omit?: nd_supplierOmit<ExtArgs> | null
  }


  /**
   * Model nd_toko
   */

  export type AggregateNd_toko = {
    _count: Nd_tokoCountAggregateOutputType | null
    _avg: Nd_tokoAvgAggregateOutputType | null
    _sum: Nd_tokoSumAggregateOutputType | null
    _min: Nd_tokoMinAggregateOutputType | null
    _max: Nd_tokoMaxAggregateOutputType | null
  }

  export type Nd_tokoAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
    index: number | null
  }

  export type Nd_tokoSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
    index: number | null
  }

  export type Nd_tokoMinAggregateOutputType = {
    id: number | null
    nama: string | null
    alias: string | null
    alamat: string | null
    telepon: string | null
    email: string | null
    fax: string | null
    kota: string | null
    kode_pos: string | null
    NPWP: string | null
    pre_faktur: string | null
    kode_toko: string | null
    status_aktif: number | null
    nama_domain: string | null
    email_pajak: string | null
    index: number | null
  }

  export type Nd_tokoMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    alias: string | null
    alamat: string | null
    telepon: string | null
    email: string | null
    fax: string | null
    kota: string | null
    kode_pos: string | null
    NPWP: string | null
    pre_faktur: string | null
    kode_toko: string | null
    status_aktif: number | null
    nama_domain: string | null
    email_pajak: string | null
    index: number | null
  }

  export type Nd_tokoCountAggregateOutputType = {
    id: number
    nama: number
    alias: number
    alamat: number
    telepon: number
    email: number
    fax: number
    kota: number
    kode_pos: number
    NPWP: number
    pre_faktur: number
    kode_toko: number
    status_aktif: number
    nama_domain: number
    email_pajak: number
    index: number
    _all: number
  }


  export type Nd_tokoAvgAggregateInputType = {
    id?: true
    status_aktif?: true
    index?: true
  }

  export type Nd_tokoSumAggregateInputType = {
    id?: true
    status_aktif?: true
    index?: true
  }

  export type Nd_tokoMinAggregateInputType = {
    id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    email?: true
    fax?: true
    kota?: true
    kode_pos?: true
    NPWP?: true
    pre_faktur?: true
    kode_toko?: true
    status_aktif?: true
    nama_domain?: true
    email_pajak?: true
    index?: true
  }

  export type Nd_tokoMaxAggregateInputType = {
    id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    email?: true
    fax?: true
    kota?: true
    kode_pos?: true
    NPWP?: true
    pre_faktur?: true
    kode_toko?: true
    status_aktif?: true
    nama_domain?: true
    email_pajak?: true
    index?: true
  }

  export type Nd_tokoCountAggregateInputType = {
    id?: true
    nama?: true
    alias?: true
    alamat?: true
    telepon?: true
    email?: true
    fax?: true
    kota?: true
    kode_pos?: true
    NPWP?: true
    pre_faktur?: true
    kode_toko?: true
    status_aktif?: true
    nama_domain?: true
    email_pajak?: true
    index?: true
    _all?: true
  }

  export type Nd_tokoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_toko to aggregate.
     */
    where?: nd_tokoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_tokos to fetch.
     */
    orderBy?: nd_tokoOrderByWithRelationInput | nd_tokoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_tokoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_tokos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_tokos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_tokos
    **/
    _count?: true | Nd_tokoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_tokoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_tokoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_tokoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_tokoMaxAggregateInputType
  }

  export type GetNd_tokoAggregateType<T extends Nd_tokoAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_toko]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_toko[P]>
      : GetScalarType<T[P], AggregateNd_toko[P]>
  }




  export type nd_tokoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_tokoWhereInput
    orderBy?: nd_tokoOrderByWithAggregationInput | nd_tokoOrderByWithAggregationInput[]
    by: Nd_tokoScalarFieldEnum[] | Nd_tokoScalarFieldEnum
    having?: nd_tokoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_tokoCountAggregateInputType | true
    _avg?: Nd_tokoAvgAggregateInputType
    _sum?: Nd_tokoSumAggregateInputType
    _min?: Nd_tokoMinAggregateInputType
    _max?: Nd_tokoMaxAggregateInputType
  }

  export type Nd_tokoGroupByOutputType = {
    id: number
    nama: string | null
    alias: string
    alamat: string | null
    telepon: string | null
    email: string | null
    fax: string | null
    kota: string | null
    kode_pos: string | null
    NPWP: string | null
    pre_faktur: string | null
    kode_toko: string | null
    status_aktif: number
    nama_domain: string | null
    email_pajak: string | null
    index: number | null
    _count: Nd_tokoCountAggregateOutputType | null
    _avg: Nd_tokoAvgAggregateOutputType | null
    _sum: Nd_tokoSumAggregateOutputType | null
    _min: Nd_tokoMinAggregateOutputType | null
    _max: Nd_tokoMaxAggregateOutputType | null
  }

  type GetNd_tokoGroupByPayload<T extends nd_tokoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_tokoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_tokoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_tokoGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_tokoGroupByOutputType[P]>
        }
      >
    >


  export type nd_tokoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    alias?: boolean
    alamat?: boolean
    telepon?: boolean
    email?: boolean
    fax?: boolean
    kota?: boolean
    kode_pos?: boolean
    NPWP?: boolean
    pre_faktur?: boolean
    kode_toko?: boolean
    status_aktif?: boolean
    nama_domain?: boolean
    email_pajak?: boolean
    index?: boolean
  }, ExtArgs["result"]["nd_toko"]>



  export type nd_tokoSelectScalar = {
    id?: boolean
    nama?: boolean
    alias?: boolean
    alamat?: boolean
    telepon?: boolean
    email?: boolean
    fax?: boolean
    kota?: boolean
    kode_pos?: boolean
    NPWP?: boolean
    pre_faktur?: boolean
    kode_toko?: boolean
    status_aktif?: boolean
    nama_domain?: boolean
    email_pajak?: boolean
    index?: boolean
  }

  export type nd_tokoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nama" | "alias" | "alamat" | "telepon" | "email" | "fax" | "kota" | "kode_pos" | "NPWP" | "pre_faktur" | "kode_toko" | "status_aktif" | "nama_domain" | "email_pajak" | "index", ExtArgs["result"]["nd_toko"]>

  export type $nd_tokoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_toko"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string | null
      alias: string
      alamat: string | null
      telepon: string | null
      email: string | null
      fax: string | null
      kota: string | null
      kode_pos: string | null
      NPWP: string | null
      pre_faktur: string | null
      kode_toko: string | null
      status_aktif: number
      nama_domain: string | null
      email_pajak: string | null
      index: number | null
    }, ExtArgs["result"]["nd_toko"]>
    composites: {}
  }

  type nd_tokoGetPayload<S extends boolean | null | undefined | nd_tokoDefaultArgs> = $Result.GetResult<Prisma.$nd_tokoPayload, S>

  type nd_tokoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_tokoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_tokoCountAggregateInputType | true
    }

  export interface nd_tokoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_toko'], meta: { name: 'nd_toko' } }
    /**
     * Find zero or one Nd_toko that matches the filter.
     * @param {nd_tokoFindUniqueArgs} args - Arguments to find a Nd_toko
     * @example
     * // Get one Nd_toko
     * const nd_toko = await prisma.nd_toko.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_tokoFindUniqueArgs>(args: SelectSubset<T, nd_tokoFindUniqueArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_toko that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_tokoFindUniqueOrThrowArgs} args - Arguments to find a Nd_toko
     * @example
     * // Get one Nd_toko
     * const nd_toko = await prisma.nd_toko.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_tokoFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_tokoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoFindFirstArgs} args - Arguments to find a Nd_toko
     * @example
     * // Get one Nd_toko
     * const nd_toko = await prisma.nd_toko.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_tokoFindFirstArgs>(args?: SelectSubset<T, nd_tokoFindFirstArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoFindFirstOrThrowArgs} args - Arguments to find a Nd_toko
     * @example
     * // Get one Nd_toko
     * const nd_toko = await prisma.nd_toko.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_tokoFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_tokoFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_tokos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_tokos
     * const nd_tokos = await prisma.nd_toko.findMany()
     * 
     * // Get first 10 Nd_tokos
     * const nd_tokos = await prisma.nd_toko.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_tokoWithIdOnly = await prisma.nd_toko.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_tokoFindManyArgs>(args?: SelectSubset<T, nd_tokoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_toko.
     * @param {nd_tokoCreateArgs} args - Arguments to create a Nd_toko.
     * @example
     * // Create one Nd_toko
     * const Nd_toko = await prisma.nd_toko.create({
     *   data: {
     *     // ... data to create a Nd_toko
     *   }
     * })
     * 
     */
    create<T extends nd_tokoCreateArgs>(args: SelectSubset<T, nd_tokoCreateArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_tokos.
     * @param {nd_tokoCreateManyArgs} args - Arguments to create many Nd_tokos.
     * @example
     * // Create many Nd_tokos
     * const nd_toko = await prisma.nd_toko.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_tokoCreateManyArgs>(args?: SelectSubset<T, nd_tokoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_toko.
     * @param {nd_tokoDeleteArgs} args - Arguments to delete one Nd_toko.
     * @example
     * // Delete one Nd_toko
     * const Nd_toko = await prisma.nd_toko.delete({
     *   where: {
     *     // ... filter to delete one Nd_toko
     *   }
     * })
     * 
     */
    delete<T extends nd_tokoDeleteArgs>(args: SelectSubset<T, nd_tokoDeleteArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_toko.
     * @param {nd_tokoUpdateArgs} args - Arguments to update one Nd_toko.
     * @example
     * // Update one Nd_toko
     * const nd_toko = await prisma.nd_toko.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_tokoUpdateArgs>(args: SelectSubset<T, nd_tokoUpdateArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_tokos.
     * @param {nd_tokoDeleteManyArgs} args - Arguments to filter Nd_tokos to delete.
     * @example
     * // Delete a few Nd_tokos
     * const { count } = await prisma.nd_toko.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_tokoDeleteManyArgs>(args?: SelectSubset<T, nd_tokoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_tokos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_tokos
     * const nd_toko = await prisma.nd_toko.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_tokoUpdateManyArgs>(args: SelectSubset<T, nd_tokoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_toko.
     * @param {nd_tokoUpsertArgs} args - Arguments to update or create a Nd_toko.
     * @example
     * // Update or create a Nd_toko
     * const nd_toko = await prisma.nd_toko.upsert({
     *   create: {
     *     // ... data to create a Nd_toko
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_toko we want to update
     *   }
     * })
     */
    upsert<T extends nd_tokoUpsertArgs>(args: SelectSubset<T, nd_tokoUpsertArgs<ExtArgs>>): Prisma__nd_tokoClient<$Result.GetResult<Prisma.$nd_tokoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_tokos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoCountArgs} args - Arguments to filter Nd_tokos to count.
     * @example
     * // Count the number of Nd_tokos
     * const count = await prisma.nd_toko.count({
     *   where: {
     *     // ... the filter for the Nd_tokos we want to count
     *   }
     * })
    **/
    count<T extends nd_tokoCountArgs>(
      args?: Subset<T, nd_tokoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_tokoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_toko.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_tokoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_tokoAggregateArgs>(args: Subset<T, Nd_tokoAggregateArgs>): Prisma.PrismaPromise<GetNd_tokoAggregateType<T>>

    /**
     * Group by Nd_toko.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_tokoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_tokoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_tokoGroupByArgs['orderBy'] }
        : { orderBy?: nd_tokoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_tokoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_tokoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_toko model
   */
  readonly fields: nd_tokoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_toko.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_tokoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_toko model
   */
  interface nd_tokoFieldRefs {
    readonly id: FieldRef<"nd_toko", 'Int'>
    readonly nama: FieldRef<"nd_toko", 'String'>
    readonly alias: FieldRef<"nd_toko", 'String'>
    readonly alamat: FieldRef<"nd_toko", 'String'>
    readonly telepon: FieldRef<"nd_toko", 'String'>
    readonly email: FieldRef<"nd_toko", 'String'>
    readonly fax: FieldRef<"nd_toko", 'String'>
    readonly kota: FieldRef<"nd_toko", 'String'>
    readonly kode_pos: FieldRef<"nd_toko", 'String'>
    readonly NPWP: FieldRef<"nd_toko", 'String'>
    readonly pre_faktur: FieldRef<"nd_toko", 'String'>
    readonly kode_toko: FieldRef<"nd_toko", 'String'>
    readonly status_aktif: FieldRef<"nd_toko", 'Int'>
    readonly nama_domain: FieldRef<"nd_toko", 'String'>
    readonly email_pajak: FieldRef<"nd_toko", 'String'>
    readonly index: FieldRef<"nd_toko", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_toko findUnique
   */
  export type nd_tokoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko to fetch.
     */
    where: nd_tokoWhereUniqueInput
  }

  /**
   * nd_toko findUniqueOrThrow
   */
  export type nd_tokoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko to fetch.
     */
    where: nd_tokoWhereUniqueInput
  }

  /**
   * nd_toko findFirst
   */
  export type nd_tokoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko to fetch.
     */
    where?: nd_tokoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_tokos to fetch.
     */
    orderBy?: nd_tokoOrderByWithRelationInput | nd_tokoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_tokos.
     */
    cursor?: nd_tokoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_tokos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_tokos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_tokos.
     */
    distinct?: Nd_tokoScalarFieldEnum | Nd_tokoScalarFieldEnum[]
  }

  /**
   * nd_toko findFirstOrThrow
   */
  export type nd_tokoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko to fetch.
     */
    where?: nd_tokoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_tokos to fetch.
     */
    orderBy?: nd_tokoOrderByWithRelationInput | nd_tokoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_tokos.
     */
    cursor?: nd_tokoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_tokos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_tokos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_tokos.
     */
    distinct?: Nd_tokoScalarFieldEnum | Nd_tokoScalarFieldEnum[]
  }

  /**
   * nd_toko findMany
   */
  export type nd_tokoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter, which nd_tokos to fetch.
     */
    where?: nd_tokoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_tokos to fetch.
     */
    orderBy?: nd_tokoOrderByWithRelationInput | nd_tokoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_tokos.
     */
    cursor?: nd_tokoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_tokos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_tokos.
     */
    skip?: number
    distinct?: Nd_tokoScalarFieldEnum | Nd_tokoScalarFieldEnum[]
  }

  /**
   * nd_toko create
   */
  export type nd_tokoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_toko.
     */
    data?: XOR<nd_tokoCreateInput, nd_tokoUncheckedCreateInput>
  }

  /**
   * nd_toko createMany
   */
  export type nd_tokoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_tokos.
     */
    data: nd_tokoCreateManyInput | nd_tokoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_toko update
   */
  export type nd_tokoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_toko.
     */
    data: XOR<nd_tokoUpdateInput, nd_tokoUncheckedUpdateInput>
    /**
     * Choose, which nd_toko to update.
     */
    where: nd_tokoWhereUniqueInput
  }

  /**
   * nd_toko updateMany
   */
  export type nd_tokoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_tokos.
     */
    data: XOR<nd_tokoUpdateManyMutationInput, nd_tokoUncheckedUpdateManyInput>
    /**
     * Filter which nd_tokos to update
     */
    where?: nd_tokoWhereInput
    /**
     * Limit how many nd_tokos to update.
     */
    limit?: number
  }

  /**
   * nd_toko upsert
   */
  export type nd_tokoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_toko to update in case it exists.
     */
    where: nd_tokoWhereUniqueInput
    /**
     * In case the nd_toko found by the `where` argument doesn't exist, create a new nd_toko with this data.
     */
    create: XOR<nd_tokoCreateInput, nd_tokoUncheckedCreateInput>
    /**
     * In case the nd_toko was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_tokoUpdateInput, nd_tokoUncheckedUpdateInput>
  }

  /**
   * nd_toko delete
   */
  export type nd_tokoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
    /**
     * Filter which nd_toko to delete.
     */
    where: nd_tokoWhereUniqueInput
  }

  /**
   * nd_toko deleteMany
   */
  export type nd_tokoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_tokos to delete
     */
    where?: nd_tokoWhereInput
    /**
     * Limit how many nd_tokos to delete.
     */
    limit?: number
  }

  /**
   * nd_toko without action
   */
  export type nd_tokoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko
     */
    select?: nd_tokoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko
     */
    omit?: nd_tokoOmit<ExtArgs> | null
  }


  /**
   * Model nd_toko_barang_assignment
   */

  export type AggregateNd_toko_barang_assignment = {
    _count: Nd_toko_barang_assignmentCountAggregateOutputType | null
    _avg: Nd_toko_barang_assignmentAvgAggregateOutputType | null
    _sum: Nd_toko_barang_assignmentSumAggregateOutputType | null
    _min: Nd_toko_barang_assignmentMinAggregateOutputType | null
    _max: Nd_toko_barang_assignmentMaxAggregateOutputType | null
  }

  export type Nd_toko_barang_assignmentAvgAggregateOutputType = {
    id: number | null
    toko_id: number | null
    barang_id: number | null
    is_synced: number | null
  }

  export type Nd_toko_barang_assignmentSumAggregateOutputType = {
    id: number | null
    toko_id: number | null
    barang_id: number | null
    is_synced: number | null
  }

  export type Nd_toko_barang_assignmentMinAggregateOutputType = {
    id: number | null
    toko_id: number | null
    barang_id: number | null
    is_synced: number | null
    last_synced: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Nd_toko_barang_assignmentMaxAggregateOutputType = {
    id: number | null
    toko_id: number | null
    barang_id: number | null
    is_synced: number | null
    last_synced: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Nd_toko_barang_assignmentCountAggregateOutputType = {
    id: number
    toko_id: number
    barang_id: number
    is_synced: number
    last_synced: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Nd_toko_barang_assignmentAvgAggregateInputType = {
    id?: true
    toko_id?: true
    barang_id?: true
    is_synced?: true
  }

  export type Nd_toko_barang_assignmentSumAggregateInputType = {
    id?: true
    toko_id?: true
    barang_id?: true
    is_synced?: true
  }

  export type Nd_toko_barang_assignmentMinAggregateInputType = {
    id?: true
    toko_id?: true
    barang_id?: true
    is_synced?: true
    last_synced?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Nd_toko_barang_assignmentMaxAggregateInputType = {
    id?: true
    toko_id?: true
    barang_id?: true
    is_synced?: true
    last_synced?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Nd_toko_barang_assignmentCountAggregateInputType = {
    id?: true
    toko_id?: true
    barang_id?: true
    is_synced?: true
    last_synced?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Nd_toko_barang_assignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_toko_barang_assignment to aggregate.
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_barang_assignments to fetch.
     */
    orderBy?: nd_toko_barang_assignmentOrderByWithRelationInput | nd_toko_barang_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_toko_barang_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_barang_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_barang_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_toko_barang_assignments
    **/
    _count?: true | Nd_toko_barang_assignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_toko_barang_assignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_toko_barang_assignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_toko_barang_assignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_toko_barang_assignmentMaxAggregateInputType
  }

  export type GetNd_toko_barang_assignmentAggregateType<T extends Nd_toko_barang_assignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_toko_barang_assignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_toko_barang_assignment[P]>
      : GetScalarType<T[P], AggregateNd_toko_barang_assignment[P]>
  }




  export type nd_toko_barang_assignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_toko_barang_assignmentWhereInput
    orderBy?: nd_toko_barang_assignmentOrderByWithAggregationInput | nd_toko_barang_assignmentOrderByWithAggregationInput[]
    by: Nd_toko_barang_assignmentScalarFieldEnum[] | Nd_toko_barang_assignmentScalarFieldEnum
    having?: nd_toko_barang_assignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_toko_barang_assignmentCountAggregateInputType | true
    _avg?: Nd_toko_barang_assignmentAvgAggregateInputType
    _sum?: Nd_toko_barang_assignmentSumAggregateInputType
    _min?: Nd_toko_barang_assignmentMinAggregateInputType
    _max?: Nd_toko_barang_assignmentMaxAggregateInputType
  }

  export type Nd_toko_barang_assignmentGroupByOutputType = {
    id: number
    toko_id: number
    barang_id: number
    is_synced: number
    last_synced: Date | null
    createdAt: Date
    updatedAt: Date
    _count: Nd_toko_barang_assignmentCountAggregateOutputType | null
    _avg: Nd_toko_barang_assignmentAvgAggregateOutputType | null
    _sum: Nd_toko_barang_assignmentSumAggregateOutputType | null
    _min: Nd_toko_barang_assignmentMinAggregateOutputType | null
    _max: Nd_toko_barang_assignmentMaxAggregateOutputType | null
  }

  type GetNd_toko_barang_assignmentGroupByPayload<T extends nd_toko_barang_assignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_toko_barang_assignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_toko_barang_assignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_toko_barang_assignmentGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_toko_barang_assignmentGroupByOutputType[P]>
        }
      >
    >


  export type nd_toko_barang_assignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    toko_id?: boolean
    barang_id?: boolean
    is_synced?: boolean
    last_synced?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["nd_toko_barang_assignment"]>



  export type nd_toko_barang_assignmentSelectScalar = {
    id?: boolean
    toko_id?: boolean
    barang_id?: boolean
    is_synced?: boolean
    last_synced?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type nd_toko_barang_assignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "toko_id" | "barang_id" | "is_synced" | "last_synced" | "createdAt" | "updatedAt", ExtArgs["result"]["nd_toko_barang_assignment"]>

  export type $nd_toko_barang_assignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_toko_barang_assignment"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      toko_id: number
      barang_id: number
      is_synced: number
      last_synced: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["nd_toko_barang_assignment"]>
    composites: {}
  }

  type nd_toko_barang_assignmentGetPayload<S extends boolean | null | undefined | nd_toko_barang_assignmentDefaultArgs> = $Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload, S>

  type nd_toko_barang_assignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_toko_barang_assignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_toko_barang_assignmentCountAggregateInputType | true
    }

  export interface nd_toko_barang_assignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_toko_barang_assignment'], meta: { name: 'nd_toko_barang_assignment' } }
    /**
     * Find zero or one Nd_toko_barang_assignment that matches the filter.
     * @param {nd_toko_barang_assignmentFindUniqueArgs} args - Arguments to find a Nd_toko_barang_assignment
     * @example
     * // Get one Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_toko_barang_assignmentFindUniqueArgs>(args: SelectSubset<T, nd_toko_barang_assignmentFindUniqueArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_toko_barang_assignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_toko_barang_assignmentFindUniqueOrThrowArgs} args - Arguments to find a Nd_toko_barang_assignment
     * @example
     * // Get one Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_toko_barang_assignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_toko_barang_assignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko_barang_assignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentFindFirstArgs} args - Arguments to find a Nd_toko_barang_assignment
     * @example
     * // Get one Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_toko_barang_assignmentFindFirstArgs>(args?: SelectSubset<T, nd_toko_barang_assignmentFindFirstArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko_barang_assignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentFindFirstOrThrowArgs} args - Arguments to find a Nd_toko_barang_assignment
     * @example
     * // Get one Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_toko_barang_assignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_toko_barang_assignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_toko_barang_assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_toko_barang_assignments
     * const nd_toko_barang_assignments = await prisma.nd_toko_barang_assignment.findMany()
     * 
     * // Get first 10 Nd_toko_barang_assignments
     * const nd_toko_barang_assignments = await prisma.nd_toko_barang_assignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_toko_barang_assignmentWithIdOnly = await prisma.nd_toko_barang_assignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_toko_barang_assignmentFindManyArgs>(args?: SelectSubset<T, nd_toko_barang_assignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_toko_barang_assignment.
     * @param {nd_toko_barang_assignmentCreateArgs} args - Arguments to create a Nd_toko_barang_assignment.
     * @example
     * // Create one Nd_toko_barang_assignment
     * const Nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.create({
     *   data: {
     *     // ... data to create a Nd_toko_barang_assignment
     *   }
     * })
     * 
     */
    create<T extends nd_toko_barang_assignmentCreateArgs>(args: SelectSubset<T, nd_toko_barang_assignmentCreateArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_toko_barang_assignments.
     * @param {nd_toko_barang_assignmentCreateManyArgs} args - Arguments to create many Nd_toko_barang_assignments.
     * @example
     * // Create many Nd_toko_barang_assignments
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_toko_barang_assignmentCreateManyArgs>(args?: SelectSubset<T, nd_toko_barang_assignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_toko_barang_assignment.
     * @param {nd_toko_barang_assignmentDeleteArgs} args - Arguments to delete one Nd_toko_barang_assignment.
     * @example
     * // Delete one Nd_toko_barang_assignment
     * const Nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.delete({
     *   where: {
     *     // ... filter to delete one Nd_toko_barang_assignment
     *   }
     * })
     * 
     */
    delete<T extends nd_toko_barang_assignmentDeleteArgs>(args: SelectSubset<T, nd_toko_barang_assignmentDeleteArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_toko_barang_assignment.
     * @param {nd_toko_barang_assignmentUpdateArgs} args - Arguments to update one Nd_toko_barang_assignment.
     * @example
     * // Update one Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_toko_barang_assignmentUpdateArgs>(args: SelectSubset<T, nd_toko_barang_assignmentUpdateArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_toko_barang_assignments.
     * @param {nd_toko_barang_assignmentDeleteManyArgs} args - Arguments to filter Nd_toko_barang_assignments to delete.
     * @example
     * // Delete a few Nd_toko_barang_assignments
     * const { count } = await prisma.nd_toko_barang_assignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_toko_barang_assignmentDeleteManyArgs>(args?: SelectSubset<T, nd_toko_barang_assignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_toko_barang_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_toko_barang_assignments
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_toko_barang_assignmentUpdateManyArgs>(args: SelectSubset<T, nd_toko_barang_assignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_toko_barang_assignment.
     * @param {nd_toko_barang_assignmentUpsertArgs} args - Arguments to update or create a Nd_toko_barang_assignment.
     * @example
     * // Update or create a Nd_toko_barang_assignment
     * const nd_toko_barang_assignment = await prisma.nd_toko_barang_assignment.upsert({
     *   create: {
     *     // ... data to create a Nd_toko_barang_assignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_toko_barang_assignment we want to update
     *   }
     * })
     */
    upsert<T extends nd_toko_barang_assignmentUpsertArgs>(args: SelectSubset<T, nd_toko_barang_assignmentUpsertArgs<ExtArgs>>): Prisma__nd_toko_barang_assignmentClient<$Result.GetResult<Prisma.$nd_toko_barang_assignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_toko_barang_assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentCountArgs} args - Arguments to filter Nd_toko_barang_assignments to count.
     * @example
     * // Count the number of Nd_toko_barang_assignments
     * const count = await prisma.nd_toko_barang_assignment.count({
     *   where: {
     *     // ... the filter for the Nd_toko_barang_assignments we want to count
     *   }
     * })
    **/
    count<T extends nd_toko_barang_assignmentCountArgs>(
      args?: Subset<T, nd_toko_barang_assignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_toko_barang_assignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_toko_barang_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_toko_barang_assignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_toko_barang_assignmentAggregateArgs>(args: Subset<T, Nd_toko_barang_assignmentAggregateArgs>): Prisma.PrismaPromise<GetNd_toko_barang_assignmentAggregateType<T>>

    /**
     * Group by Nd_toko_barang_assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_barang_assignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_toko_barang_assignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_toko_barang_assignmentGroupByArgs['orderBy'] }
        : { orderBy?: nd_toko_barang_assignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_toko_barang_assignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_toko_barang_assignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_toko_barang_assignment model
   */
  readonly fields: nd_toko_barang_assignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_toko_barang_assignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_toko_barang_assignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_toko_barang_assignment model
   */
  interface nd_toko_barang_assignmentFieldRefs {
    readonly id: FieldRef<"nd_toko_barang_assignment", 'Int'>
    readonly toko_id: FieldRef<"nd_toko_barang_assignment", 'Int'>
    readonly barang_id: FieldRef<"nd_toko_barang_assignment", 'Int'>
    readonly is_synced: FieldRef<"nd_toko_barang_assignment", 'Int'>
    readonly last_synced: FieldRef<"nd_toko_barang_assignment", 'DateTime'>
    readonly createdAt: FieldRef<"nd_toko_barang_assignment", 'DateTime'>
    readonly updatedAt: FieldRef<"nd_toko_barang_assignment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_toko_barang_assignment findUnique
   */
  export type nd_toko_barang_assignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_barang_assignment to fetch.
     */
    where: nd_toko_barang_assignmentWhereUniqueInput
  }

  /**
   * nd_toko_barang_assignment findUniqueOrThrow
   */
  export type nd_toko_barang_assignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_barang_assignment to fetch.
     */
    where: nd_toko_barang_assignmentWhereUniqueInput
  }

  /**
   * nd_toko_barang_assignment findFirst
   */
  export type nd_toko_barang_assignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_barang_assignment to fetch.
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_barang_assignments to fetch.
     */
    orderBy?: nd_toko_barang_assignmentOrderByWithRelationInput | nd_toko_barang_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_toko_barang_assignments.
     */
    cursor?: nd_toko_barang_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_barang_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_barang_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_toko_barang_assignments.
     */
    distinct?: Nd_toko_barang_assignmentScalarFieldEnum | Nd_toko_barang_assignmentScalarFieldEnum[]
  }

  /**
   * nd_toko_barang_assignment findFirstOrThrow
   */
  export type nd_toko_barang_assignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_barang_assignment to fetch.
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_barang_assignments to fetch.
     */
    orderBy?: nd_toko_barang_assignmentOrderByWithRelationInput | nd_toko_barang_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_toko_barang_assignments.
     */
    cursor?: nd_toko_barang_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_barang_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_barang_assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_toko_barang_assignments.
     */
    distinct?: Nd_toko_barang_assignmentScalarFieldEnum | Nd_toko_barang_assignmentScalarFieldEnum[]
  }

  /**
   * nd_toko_barang_assignment findMany
   */
  export type nd_toko_barang_assignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_barang_assignments to fetch.
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_barang_assignments to fetch.
     */
    orderBy?: nd_toko_barang_assignmentOrderByWithRelationInput | nd_toko_barang_assignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_toko_barang_assignments.
     */
    cursor?: nd_toko_barang_assignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_barang_assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_barang_assignments.
     */
    skip?: number
    distinct?: Nd_toko_barang_assignmentScalarFieldEnum | Nd_toko_barang_assignmentScalarFieldEnum[]
  }

  /**
   * nd_toko_barang_assignment create
   */
  export type nd_toko_barang_assignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_toko_barang_assignment.
     */
    data?: XOR<nd_toko_barang_assignmentCreateInput, nd_toko_barang_assignmentUncheckedCreateInput>
  }

  /**
   * nd_toko_barang_assignment createMany
   */
  export type nd_toko_barang_assignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_toko_barang_assignments.
     */
    data: nd_toko_barang_assignmentCreateManyInput | nd_toko_barang_assignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_toko_barang_assignment update
   */
  export type nd_toko_barang_assignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_toko_barang_assignment.
     */
    data: XOR<nd_toko_barang_assignmentUpdateInput, nd_toko_barang_assignmentUncheckedUpdateInput>
    /**
     * Choose, which nd_toko_barang_assignment to update.
     */
    where: nd_toko_barang_assignmentWhereUniqueInput
  }

  /**
   * nd_toko_barang_assignment updateMany
   */
  export type nd_toko_barang_assignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_toko_barang_assignments.
     */
    data: XOR<nd_toko_barang_assignmentUpdateManyMutationInput, nd_toko_barang_assignmentUncheckedUpdateManyInput>
    /**
     * Filter which nd_toko_barang_assignments to update
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * Limit how many nd_toko_barang_assignments to update.
     */
    limit?: number
  }

  /**
   * nd_toko_barang_assignment upsert
   */
  export type nd_toko_barang_assignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_toko_barang_assignment to update in case it exists.
     */
    where: nd_toko_barang_assignmentWhereUniqueInput
    /**
     * In case the nd_toko_barang_assignment found by the `where` argument doesn't exist, create a new nd_toko_barang_assignment with this data.
     */
    create: XOR<nd_toko_barang_assignmentCreateInput, nd_toko_barang_assignmentUncheckedCreateInput>
    /**
     * In case the nd_toko_barang_assignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_toko_barang_assignmentUpdateInput, nd_toko_barang_assignmentUncheckedUpdateInput>
  }

  /**
   * nd_toko_barang_assignment delete
   */
  export type nd_toko_barang_assignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
    /**
     * Filter which nd_toko_barang_assignment to delete.
     */
    where: nd_toko_barang_assignmentWhereUniqueInput
  }

  /**
   * nd_toko_barang_assignment deleteMany
   */
  export type nd_toko_barang_assignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_toko_barang_assignments to delete
     */
    where?: nd_toko_barang_assignmentWhereInput
    /**
     * Limit how many nd_toko_barang_assignments to delete.
     */
    limit?: number
  }

  /**
   * nd_toko_barang_assignment without action
   */
  export type nd_toko_barang_assignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_barang_assignment
     */
    select?: nd_toko_barang_assignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_barang_assignment
     */
    omit?: nd_toko_barang_assignmentOmit<ExtArgs> | null
  }


  /**
   * Model nd_toko_user
   */

  export type AggregateNd_toko_user = {
    _count: Nd_toko_userCountAggregateOutputType | null
    _avg: Nd_toko_userAvgAggregateOutputType | null
    _sum: Nd_toko_userSumAggregateOutputType | null
    _min: Nd_toko_userMinAggregateOutputType | null
    _max: Nd_toko_userMaxAggregateOutputType | null
  }

  export type Nd_toko_userAvgAggregateOutputType = {
    id: number | null
    toko_id: number | null
    user_id: number | null
    user_id_creator: number | null
  }

  export type Nd_toko_userSumAggregateOutputType = {
    id: number | null
    toko_id: number | null
    user_id: number | null
    user_id_creator: number | null
  }

  export type Nd_toko_userMinAggregateOutputType = {
    id: number | null
    toko_id: number | null
    user_id: number | null
    user_id_creator: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_toko_userMaxAggregateOutputType = {
    id: number | null
    toko_id: number | null
    user_id: number | null
    user_id_creator: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_toko_userCountAggregateOutputType = {
    id: number
    toko_id: number
    user_id: number
    user_id_creator: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_toko_userAvgAggregateInputType = {
    id?: true
    toko_id?: true
    user_id?: true
    user_id_creator?: true
  }

  export type Nd_toko_userSumAggregateInputType = {
    id?: true
    toko_id?: true
    user_id?: true
    user_id_creator?: true
  }

  export type Nd_toko_userMinAggregateInputType = {
    id?: true
    toko_id?: true
    user_id?: true
    user_id_creator?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_toko_userMaxAggregateInputType = {
    id?: true
    toko_id?: true
    user_id?: true
    user_id_creator?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_toko_userCountAggregateInputType = {
    id?: true
    toko_id?: true
    user_id?: true
    user_id_creator?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_toko_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_toko_user to aggregate.
     */
    where?: nd_toko_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_users to fetch.
     */
    orderBy?: nd_toko_userOrderByWithRelationInput | nd_toko_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_toko_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_toko_users
    **/
    _count?: true | Nd_toko_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_toko_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_toko_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_toko_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_toko_userMaxAggregateInputType
  }

  export type GetNd_toko_userAggregateType<T extends Nd_toko_userAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_toko_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_toko_user[P]>
      : GetScalarType<T[P], AggregateNd_toko_user[P]>
  }




  export type nd_toko_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_toko_userWhereInput
    orderBy?: nd_toko_userOrderByWithAggregationInput | nd_toko_userOrderByWithAggregationInput[]
    by: Nd_toko_userScalarFieldEnum[] | Nd_toko_userScalarFieldEnum
    having?: nd_toko_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_toko_userCountAggregateInputType | true
    _avg?: Nd_toko_userAvgAggregateInputType
    _sum?: Nd_toko_userSumAggregateInputType
    _min?: Nd_toko_userMinAggregateInputType
    _max?: Nd_toko_userMaxAggregateInputType
  }

  export type Nd_toko_userGroupByOutputType = {
    id: number
    toko_id: number
    user_id: number
    user_id_creator: number
    created_at: Date
    updated_at: Date
    _count: Nd_toko_userCountAggregateOutputType | null
    _avg: Nd_toko_userAvgAggregateOutputType | null
    _sum: Nd_toko_userSumAggregateOutputType | null
    _min: Nd_toko_userMinAggregateOutputType | null
    _max: Nd_toko_userMaxAggregateOutputType | null
  }

  type GetNd_toko_userGroupByPayload<T extends nd_toko_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_toko_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_toko_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_toko_userGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_toko_userGroupByOutputType[P]>
        }
      >
    >


  export type nd_toko_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    toko_id?: boolean
    user_id?: boolean
    user_id_creator?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["nd_toko_user"]>



  export type nd_toko_userSelectScalar = {
    id?: boolean
    toko_id?: boolean
    user_id?: boolean
    user_id_creator?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_toko_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "toko_id" | "user_id" | "user_id_creator" | "created_at" | "updated_at", ExtArgs["result"]["nd_toko_user"]>

  export type $nd_toko_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_toko_user"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      toko_id: number
      user_id: number
      user_id_creator: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_toko_user"]>
    composites: {}
  }

  type nd_toko_userGetPayload<S extends boolean | null | undefined | nd_toko_userDefaultArgs> = $Result.GetResult<Prisma.$nd_toko_userPayload, S>

  type nd_toko_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_toko_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_toko_userCountAggregateInputType | true
    }

  export interface nd_toko_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_toko_user'], meta: { name: 'nd_toko_user' } }
    /**
     * Find zero or one Nd_toko_user that matches the filter.
     * @param {nd_toko_userFindUniqueArgs} args - Arguments to find a Nd_toko_user
     * @example
     * // Get one Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_toko_userFindUniqueArgs>(args: SelectSubset<T, nd_toko_userFindUniqueArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_toko_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_toko_userFindUniqueOrThrowArgs} args - Arguments to find a Nd_toko_user
     * @example
     * // Get one Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_toko_userFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_toko_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userFindFirstArgs} args - Arguments to find a Nd_toko_user
     * @example
     * // Get one Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_toko_userFindFirstArgs>(args?: SelectSubset<T, nd_toko_userFindFirstArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_toko_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userFindFirstOrThrowArgs} args - Arguments to find a Nd_toko_user
     * @example
     * // Get one Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_toko_userFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_toko_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_toko_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_toko_users
     * const nd_toko_users = await prisma.nd_toko_user.findMany()
     * 
     * // Get first 10 Nd_toko_users
     * const nd_toko_users = await prisma.nd_toko_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_toko_userWithIdOnly = await prisma.nd_toko_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_toko_userFindManyArgs>(args?: SelectSubset<T, nd_toko_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_toko_user.
     * @param {nd_toko_userCreateArgs} args - Arguments to create a Nd_toko_user.
     * @example
     * // Create one Nd_toko_user
     * const Nd_toko_user = await prisma.nd_toko_user.create({
     *   data: {
     *     // ... data to create a Nd_toko_user
     *   }
     * })
     * 
     */
    create<T extends nd_toko_userCreateArgs>(args: SelectSubset<T, nd_toko_userCreateArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_toko_users.
     * @param {nd_toko_userCreateManyArgs} args - Arguments to create many Nd_toko_users.
     * @example
     * // Create many Nd_toko_users
     * const nd_toko_user = await prisma.nd_toko_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_toko_userCreateManyArgs>(args?: SelectSubset<T, nd_toko_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_toko_user.
     * @param {nd_toko_userDeleteArgs} args - Arguments to delete one Nd_toko_user.
     * @example
     * // Delete one Nd_toko_user
     * const Nd_toko_user = await prisma.nd_toko_user.delete({
     *   where: {
     *     // ... filter to delete one Nd_toko_user
     *   }
     * })
     * 
     */
    delete<T extends nd_toko_userDeleteArgs>(args: SelectSubset<T, nd_toko_userDeleteArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_toko_user.
     * @param {nd_toko_userUpdateArgs} args - Arguments to update one Nd_toko_user.
     * @example
     * // Update one Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_toko_userUpdateArgs>(args: SelectSubset<T, nd_toko_userUpdateArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_toko_users.
     * @param {nd_toko_userDeleteManyArgs} args - Arguments to filter Nd_toko_users to delete.
     * @example
     * // Delete a few Nd_toko_users
     * const { count } = await prisma.nd_toko_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_toko_userDeleteManyArgs>(args?: SelectSubset<T, nd_toko_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_toko_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_toko_users
     * const nd_toko_user = await prisma.nd_toko_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_toko_userUpdateManyArgs>(args: SelectSubset<T, nd_toko_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_toko_user.
     * @param {nd_toko_userUpsertArgs} args - Arguments to update or create a Nd_toko_user.
     * @example
     * // Update or create a Nd_toko_user
     * const nd_toko_user = await prisma.nd_toko_user.upsert({
     *   create: {
     *     // ... data to create a Nd_toko_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_toko_user we want to update
     *   }
     * })
     */
    upsert<T extends nd_toko_userUpsertArgs>(args: SelectSubset<T, nd_toko_userUpsertArgs<ExtArgs>>): Prisma__nd_toko_userClient<$Result.GetResult<Prisma.$nd_toko_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_toko_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userCountArgs} args - Arguments to filter Nd_toko_users to count.
     * @example
     * // Count the number of Nd_toko_users
     * const count = await prisma.nd_toko_user.count({
     *   where: {
     *     // ... the filter for the Nd_toko_users we want to count
     *   }
     * })
    **/
    count<T extends nd_toko_userCountArgs>(
      args?: Subset<T, nd_toko_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_toko_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_toko_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_toko_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_toko_userAggregateArgs>(args: Subset<T, Nd_toko_userAggregateArgs>): Prisma.PrismaPromise<GetNd_toko_userAggregateType<T>>

    /**
     * Group by Nd_toko_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_toko_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_toko_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_toko_userGroupByArgs['orderBy'] }
        : { orderBy?: nd_toko_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_toko_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_toko_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_toko_user model
   */
  readonly fields: nd_toko_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_toko_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_toko_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_toko_user model
   */
  interface nd_toko_userFieldRefs {
    readonly id: FieldRef<"nd_toko_user", 'Int'>
    readonly toko_id: FieldRef<"nd_toko_user", 'Int'>
    readonly user_id: FieldRef<"nd_toko_user", 'Int'>
    readonly user_id_creator: FieldRef<"nd_toko_user", 'Int'>
    readonly created_at: FieldRef<"nd_toko_user", 'DateTime'>
    readonly updated_at: FieldRef<"nd_toko_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_toko_user findUnique
   */
  export type nd_toko_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_user to fetch.
     */
    where: nd_toko_userWhereUniqueInput
  }

  /**
   * nd_toko_user findUniqueOrThrow
   */
  export type nd_toko_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_user to fetch.
     */
    where: nd_toko_userWhereUniqueInput
  }

  /**
   * nd_toko_user findFirst
   */
  export type nd_toko_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_user to fetch.
     */
    where?: nd_toko_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_users to fetch.
     */
    orderBy?: nd_toko_userOrderByWithRelationInput | nd_toko_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_toko_users.
     */
    cursor?: nd_toko_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_toko_users.
     */
    distinct?: Nd_toko_userScalarFieldEnum | Nd_toko_userScalarFieldEnum[]
  }

  /**
   * nd_toko_user findFirstOrThrow
   */
  export type nd_toko_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_user to fetch.
     */
    where?: nd_toko_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_users to fetch.
     */
    orderBy?: nd_toko_userOrderByWithRelationInput | nd_toko_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_toko_users.
     */
    cursor?: nd_toko_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_toko_users.
     */
    distinct?: Nd_toko_userScalarFieldEnum | Nd_toko_userScalarFieldEnum[]
  }

  /**
   * nd_toko_user findMany
   */
  export type nd_toko_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter, which nd_toko_users to fetch.
     */
    where?: nd_toko_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_toko_users to fetch.
     */
    orderBy?: nd_toko_userOrderByWithRelationInput | nd_toko_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_toko_users.
     */
    cursor?: nd_toko_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_toko_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_toko_users.
     */
    skip?: number
    distinct?: Nd_toko_userScalarFieldEnum | Nd_toko_userScalarFieldEnum[]
  }

  /**
   * nd_toko_user create
   */
  export type nd_toko_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_toko_user.
     */
    data: XOR<nd_toko_userCreateInput, nd_toko_userUncheckedCreateInput>
  }

  /**
   * nd_toko_user createMany
   */
  export type nd_toko_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_toko_users.
     */
    data: nd_toko_userCreateManyInput | nd_toko_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_toko_user update
   */
  export type nd_toko_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_toko_user.
     */
    data: XOR<nd_toko_userUpdateInput, nd_toko_userUncheckedUpdateInput>
    /**
     * Choose, which nd_toko_user to update.
     */
    where: nd_toko_userWhereUniqueInput
  }

  /**
   * nd_toko_user updateMany
   */
  export type nd_toko_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_toko_users.
     */
    data: XOR<nd_toko_userUpdateManyMutationInput, nd_toko_userUncheckedUpdateManyInput>
    /**
     * Filter which nd_toko_users to update
     */
    where?: nd_toko_userWhereInput
    /**
     * Limit how many nd_toko_users to update.
     */
    limit?: number
  }

  /**
   * nd_toko_user upsert
   */
  export type nd_toko_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_toko_user to update in case it exists.
     */
    where: nd_toko_userWhereUniqueInput
    /**
     * In case the nd_toko_user found by the `where` argument doesn't exist, create a new nd_toko_user with this data.
     */
    create: XOR<nd_toko_userCreateInput, nd_toko_userUncheckedCreateInput>
    /**
     * In case the nd_toko_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_toko_userUpdateInput, nd_toko_userUncheckedUpdateInput>
  }

  /**
   * nd_toko_user delete
   */
  export type nd_toko_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
    /**
     * Filter which nd_toko_user to delete.
     */
    where: nd_toko_userWhereUniqueInput
  }

  /**
   * nd_toko_user deleteMany
   */
  export type nd_toko_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_toko_users to delete
     */
    where?: nd_toko_userWhereInput
    /**
     * Limit how many nd_toko_users to delete.
     */
    limit?: number
  }

  /**
   * nd_toko_user without action
   */
  export type nd_toko_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_toko_user
     */
    select?: nd_toko_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_toko_user
     */
    omit?: nd_toko_userOmit<ExtArgs> | null
  }


  /**
   * Model nd_user
   */

  export type AggregateNd_user = {
    _count: Nd_userCountAggregateOutputType | null
    _avg: Nd_userAvgAggregateOutputType | null
    _sum: Nd_userSumAggregateOutputType | null
    _min: Nd_userMinAggregateOutputType | null
    _max: Nd_userMaxAggregateOutputType | null
  }

  export type Nd_userAvgAggregateOutputType = {
    id: number | null
    has_account: number | null
    jumlah_anak: number | null
    posisi_id: number | null
    printer_list_id: number | null
    status_aktif: number | null
  }

  export type Nd_userSumAggregateOutputType = {
    id: number | null
    has_account: number | null
    jumlah_anak: number | null
    posisi_id: number | null
    printer_list_id: number | null
    status_aktif: number | null
  }

  export type Nd_userMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    roles: string | null
    has_account: number | null
    nama: string | null
    alamat: string | null
    telepon: string | null
    jenis_kelamin: string | null
    kota_lahir: string | null
    tgl_lahir: Date | null
    status_perkawinan: string | null
    jumlah_anak: number | null
    agama: string | null
    nik: string | null
    npwp: string | null
    profile_picture: string | null
    ktp_picture: string | null
    npwp_picture: string | null
    posisi_id: number | null
    time_start: Date | null
    time_end: Date | null
    printer_list_id: number | null
    status_aktif: number | null
    PIN: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_userMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    roles: string | null
    has_account: number | null
    nama: string | null
    alamat: string | null
    telepon: string | null
    jenis_kelamin: string | null
    kota_lahir: string | null
    tgl_lahir: Date | null
    status_perkawinan: string | null
    jumlah_anak: number | null
    agama: string | null
    nik: string | null
    npwp: string | null
    profile_picture: string | null
    ktp_picture: string | null
    npwp_picture: string | null
    posisi_id: number | null
    time_start: Date | null
    time_end: Date | null
    printer_list_id: number | null
    status_aktif: number | null
    PIN: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Nd_userCountAggregateOutputType = {
    id: number
    username: number
    password: number
    roles: number
    has_account: number
    nama: number
    alamat: number
    telepon: number
    jenis_kelamin: number
    kota_lahir: number
    tgl_lahir: number
    status_perkawinan: number
    jumlah_anak: number
    agama: number
    nik: number
    npwp: number
    profile_picture: number
    ktp_picture: number
    npwp_picture: number
    posisi_id: number
    time_start: number
    time_end: number
    printer_list_id: number
    status_aktif: number
    PIN: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Nd_userAvgAggregateInputType = {
    id?: true
    has_account?: true
    jumlah_anak?: true
    posisi_id?: true
    printer_list_id?: true
    status_aktif?: true
  }

  export type Nd_userSumAggregateInputType = {
    id?: true
    has_account?: true
    jumlah_anak?: true
    posisi_id?: true
    printer_list_id?: true
    status_aktif?: true
  }

  export type Nd_userMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roles?: true
    has_account?: true
    nama?: true
    alamat?: true
    telepon?: true
    jenis_kelamin?: true
    kota_lahir?: true
    tgl_lahir?: true
    status_perkawinan?: true
    jumlah_anak?: true
    agama?: true
    nik?: true
    npwp?: true
    profile_picture?: true
    ktp_picture?: true
    npwp_picture?: true
    posisi_id?: true
    time_start?: true
    time_end?: true
    printer_list_id?: true
    status_aktif?: true
    PIN?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_userMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roles?: true
    has_account?: true
    nama?: true
    alamat?: true
    telepon?: true
    jenis_kelamin?: true
    kota_lahir?: true
    tgl_lahir?: true
    status_perkawinan?: true
    jumlah_anak?: true
    agama?: true
    nik?: true
    npwp?: true
    profile_picture?: true
    ktp_picture?: true
    npwp_picture?: true
    posisi_id?: true
    time_start?: true
    time_end?: true
    printer_list_id?: true
    status_aktif?: true
    PIN?: true
    created_at?: true
    updated_at?: true
  }

  export type Nd_userCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    roles?: true
    has_account?: true
    nama?: true
    alamat?: true
    telepon?: true
    jenis_kelamin?: true
    kota_lahir?: true
    tgl_lahir?: true
    status_perkawinan?: true
    jumlah_anak?: true
    agama?: true
    nik?: true
    npwp?: true
    profile_picture?: true
    ktp_picture?: true
    npwp_picture?: true
    posisi_id?: true
    time_start?: true
    time_end?: true
    printer_list_id?: true
    status_aktif?: true
    PIN?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Nd_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_user to aggregate.
     */
    where?: nd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_users to fetch.
     */
    orderBy?: nd_userOrderByWithRelationInput | nd_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_users
    **/
    _count?: true | Nd_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_userMaxAggregateInputType
  }

  export type GetNd_userAggregateType<T extends Nd_userAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_user[P]>
      : GetScalarType<T[P], AggregateNd_user[P]>
  }




  export type nd_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_userWhereInput
    orderBy?: nd_userOrderByWithAggregationInput | nd_userOrderByWithAggregationInput[]
    by: Nd_userScalarFieldEnum[] | Nd_userScalarFieldEnum
    having?: nd_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_userCountAggregateInputType | true
    _avg?: Nd_userAvgAggregateInputType
    _sum?: Nd_userSumAggregateInputType
    _min?: Nd_userMinAggregateInputType
    _max?: Nd_userMaxAggregateInputType
  }

  export type Nd_userGroupByOutputType = {
    id: number
    username: string | null
    password: string | null
    roles: string | null
    has_account: number
    nama: string | null
    alamat: string | null
    telepon: string | null
    jenis_kelamin: string | null
    kota_lahir: string | null
    tgl_lahir: Date | null
    status_perkawinan: string | null
    jumlah_anak: number | null
    agama: string | null
    nik: string | null
    npwp: string | null
    profile_picture: string | null
    ktp_picture: string | null
    npwp_picture: string | null
    posisi_id: number | null
    time_start: Date | null
    time_end: Date | null
    printer_list_id: number | null
    status_aktif: number | null
    PIN: string | null
    created_at: Date
    updated_at: Date
    _count: Nd_userCountAggregateOutputType | null
    _avg: Nd_userAvgAggregateOutputType | null
    _sum: Nd_userSumAggregateOutputType | null
    _min: Nd_userMinAggregateOutputType | null
    _max: Nd_userMaxAggregateOutputType | null
  }

  type GetNd_userGroupByPayload<T extends nd_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_userGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_userGroupByOutputType[P]>
        }
      >
    >


  export type nd_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    roles?: boolean
    has_account?: boolean
    nama?: boolean
    alamat?: boolean
    telepon?: boolean
    jenis_kelamin?: boolean
    kota_lahir?: boolean
    tgl_lahir?: boolean
    status_perkawinan?: boolean
    jumlah_anak?: boolean
    agama?: boolean
    nik?: boolean
    npwp?: boolean
    profile_picture?: boolean
    ktp_picture?: boolean
    npwp_picture?: boolean
    posisi_id?: boolean
    time_start?: boolean
    time_end?: boolean
    printer_list_id?: boolean
    status_aktif?: boolean
    PIN?: boolean
    created_at?: boolean
    updated_at?: boolean
    nd_posisi?: boolean | nd_user$nd_posisiArgs<ExtArgs>
  }, ExtArgs["result"]["nd_user"]>



  export type nd_userSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    roles?: boolean
    has_account?: boolean
    nama?: boolean
    alamat?: boolean
    telepon?: boolean
    jenis_kelamin?: boolean
    kota_lahir?: boolean
    tgl_lahir?: boolean
    status_perkawinan?: boolean
    jumlah_anak?: boolean
    agama?: boolean
    nik?: boolean
    npwp?: boolean
    profile_picture?: boolean
    ktp_picture?: boolean
    npwp_picture?: boolean
    posisi_id?: boolean
    time_start?: boolean
    time_end?: boolean
    printer_list_id?: boolean
    status_aktif?: boolean
    PIN?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type nd_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "roles" | "has_account" | "nama" | "alamat" | "telepon" | "jenis_kelamin" | "kota_lahir" | "tgl_lahir" | "status_perkawinan" | "jumlah_anak" | "agama" | "nik" | "npwp" | "profile_picture" | "ktp_picture" | "npwp_picture" | "posisi_id" | "time_start" | "time_end" | "printer_list_id" | "status_aktif" | "PIN" | "created_at" | "updated_at", ExtArgs["result"]["nd_user"]>
  export type nd_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    nd_posisi?: boolean | nd_user$nd_posisiArgs<ExtArgs>
  }

  export type $nd_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_user"
    objects: {
      nd_posisi: Prisma.$nd_posisiPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string | null
      password: string | null
      roles: string | null
      has_account: number
      nama: string | null
      alamat: string | null
      telepon: string | null
      jenis_kelamin: string | null
      kota_lahir: string | null
      tgl_lahir: Date | null
      status_perkawinan: string | null
      jumlah_anak: number | null
      agama: string | null
      nik: string | null
      npwp: string | null
      profile_picture: string | null
      ktp_picture: string | null
      npwp_picture: string | null
      posisi_id: number | null
      time_start: Date | null
      time_end: Date | null
      printer_list_id: number | null
      status_aktif: number | null
      PIN: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["nd_user"]>
    composites: {}
  }

  type nd_userGetPayload<S extends boolean | null | undefined | nd_userDefaultArgs> = $Result.GetResult<Prisma.$nd_userPayload, S>

  type nd_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_userCountAggregateInputType | true
    }

  export interface nd_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_user'], meta: { name: 'nd_user' } }
    /**
     * Find zero or one Nd_user that matches the filter.
     * @param {nd_userFindUniqueArgs} args - Arguments to find a Nd_user
     * @example
     * // Get one Nd_user
     * const nd_user = await prisma.nd_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_userFindUniqueArgs>(args: SelectSubset<T, nd_userFindUniqueArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_userFindUniqueOrThrowArgs} args - Arguments to find a Nd_user
     * @example
     * // Get one Nd_user
     * const nd_user = await prisma.nd_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_userFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userFindFirstArgs} args - Arguments to find a Nd_user
     * @example
     * // Get one Nd_user
     * const nd_user = await prisma.nd_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_userFindFirstArgs>(args?: SelectSubset<T, nd_userFindFirstArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userFindFirstOrThrowArgs} args - Arguments to find a Nd_user
     * @example
     * // Get one Nd_user
     * const nd_user = await prisma.nd_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_userFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_users
     * const nd_users = await prisma.nd_user.findMany()
     * 
     * // Get first 10 Nd_users
     * const nd_users = await prisma.nd_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_userWithIdOnly = await prisma.nd_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_userFindManyArgs>(args?: SelectSubset<T, nd_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_user.
     * @param {nd_userCreateArgs} args - Arguments to create a Nd_user.
     * @example
     * // Create one Nd_user
     * const Nd_user = await prisma.nd_user.create({
     *   data: {
     *     // ... data to create a Nd_user
     *   }
     * })
     * 
     */
    create<T extends nd_userCreateArgs>(args: SelectSubset<T, nd_userCreateArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_users.
     * @param {nd_userCreateManyArgs} args - Arguments to create many Nd_users.
     * @example
     * // Create many Nd_users
     * const nd_user = await prisma.nd_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_userCreateManyArgs>(args?: SelectSubset<T, nd_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_user.
     * @param {nd_userDeleteArgs} args - Arguments to delete one Nd_user.
     * @example
     * // Delete one Nd_user
     * const Nd_user = await prisma.nd_user.delete({
     *   where: {
     *     // ... filter to delete one Nd_user
     *   }
     * })
     * 
     */
    delete<T extends nd_userDeleteArgs>(args: SelectSubset<T, nd_userDeleteArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_user.
     * @param {nd_userUpdateArgs} args - Arguments to update one Nd_user.
     * @example
     * // Update one Nd_user
     * const nd_user = await prisma.nd_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_userUpdateArgs>(args: SelectSubset<T, nd_userUpdateArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_users.
     * @param {nd_userDeleteManyArgs} args - Arguments to filter Nd_users to delete.
     * @example
     * // Delete a few Nd_users
     * const { count } = await prisma.nd_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_userDeleteManyArgs>(args?: SelectSubset<T, nd_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_users
     * const nd_user = await prisma.nd_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_userUpdateManyArgs>(args: SelectSubset<T, nd_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_user.
     * @param {nd_userUpsertArgs} args - Arguments to update or create a Nd_user.
     * @example
     * // Update or create a Nd_user
     * const nd_user = await prisma.nd_user.upsert({
     *   create: {
     *     // ... data to create a Nd_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_user we want to update
     *   }
     * })
     */
    upsert<T extends nd_userUpsertArgs>(args: SelectSubset<T, nd_userUpsertArgs<ExtArgs>>): Prisma__nd_userClient<$Result.GetResult<Prisma.$nd_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userCountArgs} args - Arguments to filter Nd_users to count.
     * @example
     * // Count the number of Nd_users
     * const count = await prisma.nd_user.count({
     *   where: {
     *     // ... the filter for the Nd_users we want to count
     *   }
     * })
    **/
    count<T extends nd_userCountArgs>(
      args?: Subset<T, nd_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_userAggregateArgs>(args: Subset<T, Nd_userAggregateArgs>): Prisma.PrismaPromise<GetNd_userAggregateType<T>>

    /**
     * Group by Nd_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_userGroupByArgs['orderBy'] }
        : { orderBy?: nd_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_user model
   */
  readonly fields: nd_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    nd_posisi<T extends nd_user$nd_posisiArgs<ExtArgs> = {}>(args?: Subset<T, nd_user$nd_posisiArgs<ExtArgs>>): Prisma__nd_posisiClient<$Result.GetResult<Prisma.$nd_posisiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_user model
   */
  interface nd_userFieldRefs {
    readonly id: FieldRef<"nd_user", 'Int'>
    readonly username: FieldRef<"nd_user", 'String'>
    readonly password: FieldRef<"nd_user", 'String'>
    readonly roles: FieldRef<"nd_user", 'String'>
    readonly has_account: FieldRef<"nd_user", 'Int'>
    readonly nama: FieldRef<"nd_user", 'String'>
    readonly alamat: FieldRef<"nd_user", 'String'>
    readonly telepon: FieldRef<"nd_user", 'String'>
    readonly jenis_kelamin: FieldRef<"nd_user", 'String'>
    readonly kota_lahir: FieldRef<"nd_user", 'String'>
    readonly tgl_lahir: FieldRef<"nd_user", 'DateTime'>
    readonly status_perkawinan: FieldRef<"nd_user", 'String'>
    readonly jumlah_anak: FieldRef<"nd_user", 'Int'>
    readonly agama: FieldRef<"nd_user", 'String'>
    readonly nik: FieldRef<"nd_user", 'String'>
    readonly npwp: FieldRef<"nd_user", 'String'>
    readonly profile_picture: FieldRef<"nd_user", 'String'>
    readonly ktp_picture: FieldRef<"nd_user", 'String'>
    readonly npwp_picture: FieldRef<"nd_user", 'String'>
    readonly posisi_id: FieldRef<"nd_user", 'Int'>
    readonly time_start: FieldRef<"nd_user", 'DateTime'>
    readonly time_end: FieldRef<"nd_user", 'DateTime'>
    readonly printer_list_id: FieldRef<"nd_user", 'Int'>
    readonly status_aktif: FieldRef<"nd_user", 'Int'>
    readonly PIN: FieldRef<"nd_user", 'String'>
    readonly created_at: FieldRef<"nd_user", 'DateTime'>
    readonly updated_at: FieldRef<"nd_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * nd_user findUnique
   */
  export type nd_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter, which nd_user to fetch.
     */
    where: nd_userWhereUniqueInput
  }

  /**
   * nd_user findUniqueOrThrow
   */
  export type nd_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter, which nd_user to fetch.
     */
    where: nd_userWhereUniqueInput
  }

  /**
   * nd_user findFirst
   */
  export type nd_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter, which nd_user to fetch.
     */
    where?: nd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_users to fetch.
     */
    orderBy?: nd_userOrderByWithRelationInput | nd_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_users.
     */
    cursor?: nd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_users.
     */
    distinct?: Nd_userScalarFieldEnum | Nd_userScalarFieldEnum[]
  }

  /**
   * nd_user findFirstOrThrow
   */
  export type nd_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter, which nd_user to fetch.
     */
    where?: nd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_users to fetch.
     */
    orderBy?: nd_userOrderByWithRelationInput | nd_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_users.
     */
    cursor?: nd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_users.
     */
    distinct?: Nd_userScalarFieldEnum | Nd_userScalarFieldEnum[]
  }

  /**
   * nd_user findMany
   */
  export type nd_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter, which nd_users to fetch.
     */
    where?: nd_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_users to fetch.
     */
    orderBy?: nd_userOrderByWithRelationInput | nd_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_users.
     */
    cursor?: nd_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_users.
     */
    skip?: number
    distinct?: Nd_userScalarFieldEnum | Nd_userScalarFieldEnum[]
  }

  /**
   * nd_user create
   */
  export type nd_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * The data needed to create a nd_user.
     */
    data?: XOR<nd_userCreateInput, nd_userUncheckedCreateInput>
  }

  /**
   * nd_user createMany
   */
  export type nd_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_users.
     */
    data: nd_userCreateManyInput | nd_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_user update
   */
  export type nd_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * The data needed to update a nd_user.
     */
    data: XOR<nd_userUpdateInput, nd_userUncheckedUpdateInput>
    /**
     * Choose, which nd_user to update.
     */
    where: nd_userWhereUniqueInput
  }

  /**
   * nd_user updateMany
   */
  export type nd_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_users.
     */
    data: XOR<nd_userUpdateManyMutationInput, nd_userUncheckedUpdateManyInput>
    /**
     * Filter which nd_users to update
     */
    where?: nd_userWhereInput
    /**
     * Limit how many nd_users to update.
     */
    limit?: number
  }

  /**
   * nd_user upsert
   */
  export type nd_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * The filter to search for the nd_user to update in case it exists.
     */
    where: nd_userWhereUniqueInput
    /**
     * In case the nd_user found by the `where` argument doesn't exist, create a new nd_user with this data.
     */
    create: XOR<nd_userCreateInput, nd_userUncheckedCreateInput>
    /**
     * In case the nd_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_userUpdateInput, nd_userUncheckedUpdateInput>
  }

  /**
   * nd_user delete
   */
  export type nd_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
    /**
     * Filter which nd_user to delete.
     */
    where: nd_userWhereUniqueInput
  }

  /**
   * nd_user deleteMany
   */
  export type nd_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_users to delete
     */
    where?: nd_userWhereInput
    /**
     * Limit how many nd_users to delete.
     */
    limit?: number
  }

  /**
   * nd_user.nd_posisi
   */
  export type nd_user$nd_posisiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_posisi
     */
    select?: nd_posisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_posisi
     */
    omit?: nd_posisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_posisiInclude<ExtArgs> | null
    where?: nd_posisiWhereInput
  }

  /**
   * nd_user without action
   */
  export type nd_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_user
     */
    select?: nd_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_user
     */
    omit?: nd_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: nd_userInclude<ExtArgs> | null
  }


  /**
   * Model nd_warna
   */

  export type AggregateNd_warna = {
    _count: Nd_warnaCountAggregateOutputType | null
    _avg: Nd_warnaAvgAggregateOutputType | null
    _sum: Nd_warnaSumAggregateOutputType | null
    _min: Nd_warnaMinAggregateOutputType | null
    _max: Nd_warnaMaxAggregateOutputType | null
  }

  export type Nd_warnaAvgAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_warnaSumAggregateOutputType = {
    id: number | null
    status_aktif: number | null
  }

  export type Nd_warnaMinAggregateOutputType = {
    id: number | null
    warna_beli: string | null
    warna_jual: string | null
    kode_warna: string | null
    status_aktif: number | null
  }

  export type Nd_warnaMaxAggregateOutputType = {
    id: number | null
    warna_beli: string | null
    warna_jual: string | null
    kode_warna: string | null
    status_aktif: number | null
  }

  export type Nd_warnaCountAggregateOutputType = {
    id: number
    warna_beli: number
    warna_jual: number
    kode_warna: number
    status_aktif: number
    _all: number
  }


  export type Nd_warnaAvgAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_warnaSumAggregateInputType = {
    id?: true
    status_aktif?: true
  }

  export type Nd_warnaMinAggregateInputType = {
    id?: true
    warna_beli?: true
    warna_jual?: true
    kode_warna?: true
    status_aktif?: true
  }

  export type Nd_warnaMaxAggregateInputType = {
    id?: true
    warna_beli?: true
    warna_jual?: true
    kode_warna?: true
    status_aktif?: true
  }

  export type Nd_warnaCountAggregateInputType = {
    id?: true
    warna_beli?: true
    warna_jual?: true
    kode_warna?: true
    status_aktif?: true
    _all?: true
  }

  export type Nd_warnaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_warna to aggregate.
     */
    where?: nd_warnaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_warnas to fetch.
     */
    orderBy?: nd_warnaOrderByWithRelationInput | nd_warnaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: nd_warnaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_warnas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_warnas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned nd_warnas
    **/
    _count?: true | Nd_warnaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Nd_warnaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Nd_warnaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Nd_warnaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Nd_warnaMaxAggregateInputType
  }

  export type GetNd_warnaAggregateType<T extends Nd_warnaAggregateArgs> = {
        [P in keyof T & keyof AggregateNd_warna]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNd_warna[P]>
      : GetScalarType<T[P], AggregateNd_warna[P]>
  }




  export type nd_warnaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: nd_warnaWhereInput
    orderBy?: nd_warnaOrderByWithAggregationInput | nd_warnaOrderByWithAggregationInput[]
    by: Nd_warnaScalarFieldEnum[] | Nd_warnaScalarFieldEnum
    having?: nd_warnaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Nd_warnaCountAggregateInputType | true
    _avg?: Nd_warnaAvgAggregateInputType
    _sum?: Nd_warnaSumAggregateInputType
    _min?: Nd_warnaMinAggregateInputType
    _max?: Nd_warnaMaxAggregateInputType
  }

  export type Nd_warnaGroupByOutputType = {
    id: number
    warna_beli: string | null
    warna_jual: string | null
    kode_warna: string | null
    status_aktif: number
    _count: Nd_warnaCountAggregateOutputType | null
    _avg: Nd_warnaAvgAggregateOutputType | null
    _sum: Nd_warnaSumAggregateOutputType | null
    _min: Nd_warnaMinAggregateOutputType | null
    _max: Nd_warnaMaxAggregateOutputType | null
  }

  type GetNd_warnaGroupByPayload<T extends nd_warnaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Nd_warnaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Nd_warnaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Nd_warnaGroupByOutputType[P]>
            : GetScalarType<T[P], Nd_warnaGroupByOutputType[P]>
        }
      >
    >


  export type nd_warnaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    warna_beli?: boolean
    warna_jual?: boolean
    kode_warna?: boolean
    status_aktif?: boolean
  }, ExtArgs["result"]["nd_warna"]>



  export type nd_warnaSelectScalar = {
    id?: boolean
    warna_beli?: boolean
    warna_jual?: boolean
    kode_warna?: boolean
    status_aktif?: boolean
  }

  export type nd_warnaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "warna_beli" | "warna_jual" | "kode_warna" | "status_aktif", ExtArgs["result"]["nd_warna"]>

  export type $nd_warnaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "nd_warna"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      warna_beli: string | null
      warna_jual: string | null
      kode_warna: string | null
      status_aktif: number
    }, ExtArgs["result"]["nd_warna"]>
    composites: {}
  }

  type nd_warnaGetPayload<S extends boolean | null | undefined | nd_warnaDefaultArgs> = $Result.GetResult<Prisma.$nd_warnaPayload, S>

  type nd_warnaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<nd_warnaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Nd_warnaCountAggregateInputType | true
    }

  export interface nd_warnaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['nd_warna'], meta: { name: 'nd_warna' } }
    /**
     * Find zero or one Nd_warna that matches the filter.
     * @param {nd_warnaFindUniqueArgs} args - Arguments to find a Nd_warna
     * @example
     * // Get one Nd_warna
     * const nd_warna = await prisma.nd_warna.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends nd_warnaFindUniqueArgs>(args: SelectSubset<T, nd_warnaFindUniqueArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Nd_warna that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {nd_warnaFindUniqueOrThrowArgs} args - Arguments to find a Nd_warna
     * @example
     * // Get one Nd_warna
     * const nd_warna = await prisma.nd_warna.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends nd_warnaFindUniqueOrThrowArgs>(args: SelectSubset<T, nd_warnaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_warna that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaFindFirstArgs} args - Arguments to find a Nd_warna
     * @example
     * // Get one Nd_warna
     * const nd_warna = await prisma.nd_warna.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends nd_warnaFindFirstArgs>(args?: SelectSubset<T, nd_warnaFindFirstArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Nd_warna that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaFindFirstOrThrowArgs} args - Arguments to find a Nd_warna
     * @example
     * // Get one Nd_warna
     * const nd_warna = await prisma.nd_warna.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends nd_warnaFindFirstOrThrowArgs>(args?: SelectSubset<T, nd_warnaFindFirstOrThrowArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Nd_warnas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nd_warnas
     * const nd_warnas = await prisma.nd_warna.findMany()
     * 
     * // Get first 10 Nd_warnas
     * const nd_warnas = await prisma.nd_warna.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nd_warnaWithIdOnly = await prisma.nd_warna.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends nd_warnaFindManyArgs>(args?: SelectSubset<T, nd_warnaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Nd_warna.
     * @param {nd_warnaCreateArgs} args - Arguments to create a Nd_warna.
     * @example
     * // Create one Nd_warna
     * const Nd_warna = await prisma.nd_warna.create({
     *   data: {
     *     // ... data to create a Nd_warna
     *   }
     * })
     * 
     */
    create<T extends nd_warnaCreateArgs>(args: SelectSubset<T, nd_warnaCreateArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Nd_warnas.
     * @param {nd_warnaCreateManyArgs} args - Arguments to create many Nd_warnas.
     * @example
     * // Create many Nd_warnas
     * const nd_warna = await prisma.nd_warna.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends nd_warnaCreateManyArgs>(args?: SelectSubset<T, nd_warnaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Nd_warna.
     * @param {nd_warnaDeleteArgs} args - Arguments to delete one Nd_warna.
     * @example
     * // Delete one Nd_warna
     * const Nd_warna = await prisma.nd_warna.delete({
     *   where: {
     *     // ... filter to delete one Nd_warna
     *   }
     * })
     * 
     */
    delete<T extends nd_warnaDeleteArgs>(args: SelectSubset<T, nd_warnaDeleteArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Nd_warna.
     * @param {nd_warnaUpdateArgs} args - Arguments to update one Nd_warna.
     * @example
     * // Update one Nd_warna
     * const nd_warna = await prisma.nd_warna.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends nd_warnaUpdateArgs>(args: SelectSubset<T, nd_warnaUpdateArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Nd_warnas.
     * @param {nd_warnaDeleteManyArgs} args - Arguments to filter Nd_warnas to delete.
     * @example
     * // Delete a few Nd_warnas
     * const { count } = await prisma.nd_warna.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends nd_warnaDeleteManyArgs>(args?: SelectSubset<T, nd_warnaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nd_warnas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nd_warnas
     * const nd_warna = await prisma.nd_warna.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends nd_warnaUpdateManyArgs>(args: SelectSubset<T, nd_warnaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nd_warna.
     * @param {nd_warnaUpsertArgs} args - Arguments to update or create a Nd_warna.
     * @example
     * // Update or create a Nd_warna
     * const nd_warna = await prisma.nd_warna.upsert({
     *   create: {
     *     // ... data to create a Nd_warna
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nd_warna we want to update
     *   }
     * })
     */
    upsert<T extends nd_warnaUpsertArgs>(args: SelectSubset<T, nd_warnaUpsertArgs<ExtArgs>>): Prisma__nd_warnaClient<$Result.GetResult<Prisma.$nd_warnaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Nd_warnas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaCountArgs} args - Arguments to filter Nd_warnas to count.
     * @example
     * // Count the number of Nd_warnas
     * const count = await prisma.nd_warna.count({
     *   where: {
     *     // ... the filter for the Nd_warnas we want to count
     *   }
     * })
    **/
    count<T extends nd_warnaCountArgs>(
      args?: Subset<T, nd_warnaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Nd_warnaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nd_warna.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Nd_warnaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Nd_warnaAggregateArgs>(args: Subset<T, Nd_warnaAggregateArgs>): Prisma.PrismaPromise<GetNd_warnaAggregateType<T>>

    /**
     * Group by Nd_warna.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {nd_warnaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends nd_warnaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: nd_warnaGroupByArgs['orderBy'] }
        : { orderBy?: nd_warnaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, nd_warnaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNd_warnaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the nd_warna model
   */
  readonly fields: nd_warnaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for nd_warna.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__nd_warnaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the nd_warna model
   */
  interface nd_warnaFieldRefs {
    readonly id: FieldRef<"nd_warna", 'Int'>
    readonly warna_beli: FieldRef<"nd_warna", 'String'>
    readonly warna_jual: FieldRef<"nd_warna", 'String'>
    readonly kode_warna: FieldRef<"nd_warna", 'String'>
    readonly status_aktif: FieldRef<"nd_warna", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * nd_warna findUnique
   */
  export type nd_warnaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter, which nd_warna to fetch.
     */
    where: nd_warnaWhereUniqueInput
  }

  /**
   * nd_warna findUniqueOrThrow
   */
  export type nd_warnaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter, which nd_warna to fetch.
     */
    where: nd_warnaWhereUniqueInput
  }

  /**
   * nd_warna findFirst
   */
  export type nd_warnaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter, which nd_warna to fetch.
     */
    where?: nd_warnaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_warnas to fetch.
     */
    orderBy?: nd_warnaOrderByWithRelationInput | nd_warnaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_warnas.
     */
    cursor?: nd_warnaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_warnas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_warnas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_warnas.
     */
    distinct?: Nd_warnaScalarFieldEnum | Nd_warnaScalarFieldEnum[]
  }

  /**
   * nd_warna findFirstOrThrow
   */
  export type nd_warnaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter, which nd_warna to fetch.
     */
    where?: nd_warnaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_warnas to fetch.
     */
    orderBy?: nd_warnaOrderByWithRelationInput | nd_warnaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for nd_warnas.
     */
    cursor?: nd_warnaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_warnas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_warnas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of nd_warnas.
     */
    distinct?: Nd_warnaScalarFieldEnum | Nd_warnaScalarFieldEnum[]
  }

  /**
   * nd_warna findMany
   */
  export type nd_warnaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter, which nd_warnas to fetch.
     */
    where?: nd_warnaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of nd_warnas to fetch.
     */
    orderBy?: nd_warnaOrderByWithRelationInput | nd_warnaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing nd_warnas.
     */
    cursor?: nd_warnaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` nd_warnas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` nd_warnas.
     */
    skip?: number
    distinct?: Nd_warnaScalarFieldEnum | Nd_warnaScalarFieldEnum[]
  }

  /**
   * nd_warna create
   */
  export type nd_warnaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * The data needed to create a nd_warna.
     */
    data?: XOR<nd_warnaCreateInput, nd_warnaUncheckedCreateInput>
  }

  /**
   * nd_warna createMany
   */
  export type nd_warnaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many nd_warnas.
     */
    data: nd_warnaCreateManyInput | nd_warnaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * nd_warna update
   */
  export type nd_warnaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * The data needed to update a nd_warna.
     */
    data: XOR<nd_warnaUpdateInput, nd_warnaUncheckedUpdateInput>
    /**
     * Choose, which nd_warna to update.
     */
    where: nd_warnaWhereUniqueInput
  }

  /**
   * nd_warna updateMany
   */
  export type nd_warnaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update nd_warnas.
     */
    data: XOR<nd_warnaUpdateManyMutationInput, nd_warnaUncheckedUpdateManyInput>
    /**
     * Filter which nd_warnas to update
     */
    where?: nd_warnaWhereInput
    /**
     * Limit how many nd_warnas to update.
     */
    limit?: number
  }

  /**
   * nd_warna upsert
   */
  export type nd_warnaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * The filter to search for the nd_warna to update in case it exists.
     */
    where: nd_warnaWhereUniqueInput
    /**
     * In case the nd_warna found by the `where` argument doesn't exist, create a new nd_warna with this data.
     */
    create: XOR<nd_warnaCreateInput, nd_warnaUncheckedCreateInput>
    /**
     * In case the nd_warna was found with the provided `where` argument, update it with this data.
     */
    update: XOR<nd_warnaUpdateInput, nd_warnaUncheckedUpdateInput>
  }

  /**
   * nd_warna delete
   */
  export type nd_warnaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
    /**
     * Filter which nd_warna to delete.
     */
    where: nd_warnaWhereUniqueInput
  }

  /**
   * nd_warna deleteMany
   */
  export type nd_warnaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which nd_warnas to delete
     */
    where?: nd_warnaWhereInput
    /**
     * Limit how many nd_warnas to delete.
     */
    limit?: number
  }

  /**
   * nd_warna without action
   */
  export type nd_warnaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the nd_warna
     */
    select?: nd_warnaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the nd_warna
     */
    omit?: nd_warnaOmit<ExtArgs> | null
  }


  /**
   * Model query_log
   */

  export type AggregateQuery_log = {
    _count: Query_logCountAggregateOutputType | null
    _avg: Query_logAvgAggregateOutputType | null
    _sum: Query_logSumAggregateOutputType | null
    _min: Query_logMinAggregateOutputType | null
    _max: Query_logMaxAggregateOutputType | null
  }

  export type Query_logAvgAggregateOutputType = {
    id: number | null
    affected_id: number | null
  }

  export type Query_logSumAggregateOutputType = {
    id: number | null
    affected_id: number | null
  }

  export type Query_logMinAggregateOutputType = {
    id: number | null
    table_name: string | null
    affected_id: number | null
    query: string | null
    params: string | null
    username: string | null
    timestamp: Date | null
  }

  export type Query_logMaxAggregateOutputType = {
    id: number | null
    table_name: string | null
    affected_id: number | null
    query: string | null
    params: string | null
    username: string | null
    timestamp: Date | null
  }

  export type Query_logCountAggregateOutputType = {
    id: number
    table_name: number
    affected_id: number
    query: number
    params: number
    username: number
    timestamp: number
    _all: number
  }


  export type Query_logAvgAggregateInputType = {
    id?: true
    affected_id?: true
  }

  export type Query_logSumAggregateInputType = {
    id?: true
    affected_id?: true
  }

  export type Query_logMinAggregateInputType = {
    id?: true
    table_name?: true
    affected_id?: true
    query?: true
    params?: true
    username?: true
    timestamp?: true
  }

  export type Query_logMaxAggregateInputType = {
    id?: true
    table_name?: true
    affected_id?: true
    query?: true
    params?: true
    username?: true
    timestamp?: true
  }

  export type Query_logCountAggregateInputType = {
    id?: true
    table_name?: true
    affected_id?: true
    query?: true
    params?: true
    username?: true
    timestamp?: true
    _all?: true
  }

  export type Query_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which query_log to aggregate.
     */
    where?: query_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of query_logs to fetch.
     */
    orderBy?: query_logOrderByWithRelationInput | query_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: query_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` query_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` query_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned query_logs
    **/
    _count?: true | Query_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Query_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Query_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Query_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Query_logMaxAggregateInputType
  }

  export type GetQuery_logAggregateType<T extends Query_logAggregateArgs> = {
        [P in keyof T & keyof AggregateQuery_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQuery_log[P]>
      : GetScalarType<T[P], AggregateQuery_log[P]>
  }




  export type query_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: query_logWhereInput
    orderBy?: query_logOrderByWithAggregationInput | query_logOrderByWithAggregationInput[]
    by: Query_logScalarFieldEnum[] | Query_logScalarFieldEnum
    having?: query_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Query_logCountAggregateInputType | true
    _avg?: Query_logAvgAggregateInputType
    _sum?: Query_logSumAggregateInputType
    _min?: Query_logMinAggregateInputType
    _max?: Query_logMaxAggregateInputType
  }

  export type Query_logGroupByOutputType = {
    id: number
    table_name: string
    affected_id: number
    query: string
    params: string
    username: string | null
    timestamp: Date
    _count: Query_logCountAggregateOutputType | null
    _avg: Query_logAvgAggregateOutputType | null
    _sum: Query_logSumAggregateOutputType | null
    _min: Query_logMinAggregateOutputType | null
    _max: Query_logMaxAggregateOutputType | null
  }

  type GetQuery_logGroupByPayload<T extends query_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Query_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Query_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Query_logGroupByOutputType[P]>
            : GetScalarType<T[P], Query_logGroupByOutputType[P]>
        }
      >
    >


  export type query_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    affected_id?: boolean
    query?: boolean
    params?: boolean
    username?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["query_log"]>



  export type query_logSelectScalar = {
    id?: boolean
    table_name?: boolean
    affected_id?: boolean
    query?: boolean
    params?: boolean
    username?: boolean
    timestamp?: boolean
  }

  export type query_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "table_name" | "affected_id" | "query" | "params" | "username" | "timestamp", ExtArgs["result"]["query_log"]>

  export type $query_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "query_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      table_name: string
      affected_id: number
      query: string
      params: string
      username: string | null
      timestamp: Date
    }, ExtArgs["result"]["query_log"]>
    composites: {}
  }

  type query_logGetPayload<S extends boolean | null | undefined | query_logDefaultArgs> = $Result.GetResult<Prisma.$query_logPayload, S>

  type query_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<query_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Query_logCountAggregateInputType | true
    }

  export interface query_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['query_log'], meta: { name: 'query_log' } }
    /**
     * Find zero or one Query_log that matches the filter.
     * @param {query_logFindUniqueArgs} args - Arguments to find a Query_log
     * @example
     * // Get one Query_log
     * const query_log = await prisma.query_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends query_logFindUniqueArgs>(args: SelectSubset<T, query_logFindUniqueArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Query_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {query_logFindUniqueOrThrowArgs} args - Arguments to find a Query_log
     * @example
     * // Get one Query_log
     * const query_log = await prisma.query_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends query_logFindUniqueOrThrowArgs>(args: SelectSubset<T, query_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Query_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logFindFirstArgs} args - Arguments to find a Query_log
     * @example
     * // Get one Query_log
     * const query_log = await prisma.query_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends query_logFindFirstArgs>(args?: SelectSubset<T, query_logFindFirstArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Query_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logFindFirstOrThrowArgs} args - Arguments to find a Query_log
     * @example
     * // Get one Query_log
     * const query_log = await prisma.query_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends query_logFindFirstOrThrowArgs>(args?: SelectSubset<T, query_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Query_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Query_logs
     * const query_logs = await prisma.query_log.findMany()
     * 
     * // Get first 10 Query_logs
     * const query_logs = await prisma.query_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const query_logWithIdOnly = await prisma.query_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends query_logFindManyArgs>(args?: SelectSubset<T, query_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Query_log.
     * @param {query_logCreateArgs} args - Arguments to create a Query_log.
     * @example
     * // Create one Query_log
     * const Query_log = await prisma.query_log.create({
     *   data: {
     *     // ... data to create a Query_log
     *   }
     * })
     * 
     */
    create<T extends query_logCreateArgs>(args: SelectSubset<T, query_logCreateArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Query_logs.
     * @param {query_logCreateManyArgs} args - Arguments to create many Query_logs.
     * @example
     * // Create many Query_logs
     * const query_log = await prisma.query_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends query_logCreateManyArgs>(args?: SelectSubset<T, query_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Query_log.
     * @param {query_logDeleteArgs} args - Arguments to delete one Query_log.
     * @example
     * // Delete one Query_log
     * const Query_log = await prisma.query_log.delete({
     *   where: {
     *     // ... filter to delete one Query_log
     *   }
     * })
     * 
     */
    delete<T extends query_logDeleteArgs>(args: SelectSubset<T, query_logDeleteArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Query_log.
     * @param {query_logUpdateArgs} args - Arguments to update one Query_log.
     * @example
     * // Update one Query_log
     * const query_log = await prisma.query_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends query_logUpdateArgs>(args: SelectSubset<T, query_logUpdateArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Query_logs.
     * @param {query_logDeleteManyArgs} args - Arguments to filter Query_logs to delete.
     * @example
     * // Delete a few Query_logs
     * const { count } = await prisma.query_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends query_logDeleteManyArgs>(args?: SelectSubset<T, query_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Query_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Query_logs
     * const query_log = await prisma.query_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends query_logUpdateManyArgs>(args: SelectSubset<T, query_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Query_log.
     * @param {query_logUpsertArgs} args - Arguments to update or create a Query_log.
     * @example
     * // Update or create a Query_log
     * const query_log = await prisma.query_log.upsert({
     *   create: {
     *     // ... data to create a Query_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Query_log we want to update
     *   }
     * })
     */
    upsert<T extends query_logUpsertArgs>(args: SelectSubset<T, query_logUpsertArgs<ExtArgs>>): Prisma__query_logClient<$Result.GetResult<Prisma.$query_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Query_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logCountArgs} args - Arguments to filter Query_logs to count.
     * @example
     * // Count the number of Query_logs
     * const count = await prisma.query_log.count({
     *   where: {
     *     // ... the filter for the Query_logs we want to count
     *   }
     * })
    **/
    count<T extends query_logCountArgs>(
      args?: Subset<T, query_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Query_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Query_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Query_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Query_logAggregateArgs>(args: Subset<T, Query_logAggregateArgs>): Prisma.PrismaPromise<GetQuery_logAggregateType<T>>

    /**
     * Group by Query_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {query_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends query_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: query_logGroupByArgs['orderBy'] }
        : { orderBy?: query_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, query_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQuery_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the query_log model
   */
  readonly fields: query_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for query_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__query_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the query_log model
   */
  interface query_logFieldRefs {
    readonly id: FieldRef<"query_log", 'Int'>
    readonly table_name: FieldRef<"query_log", 'String'>
    readonly affected_id: FieldRef<"query_log", 'Int'>
    readonly query: FieldRef<"query_log", 'String'>
    readonly params: FieldRef<"query_log", 'String'>
    readonly username: FieldRef<"query_log", 'String'>
    readonly timestamp: FieldRef<"query_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * query_log findUnique
   */
  export type query_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter, which query_log to fetch.
     */
    where: query_logWhereUniqueInput
  }

  /**
   * query_log findUniqueOrThrow
   */
  export type query_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter, which query_log to fetch.
     */
    where: query_logWhereUniqueInput
  }

  /**
   * query_log findFirst
   */
  export type query_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter, which query_log to fetch.
     */
    where?: query_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of query_logs to fetch.
     */
    orderBy?: query_logOrderByWithRelationInput | query_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for query_logs.
     */
    cursor?: query_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` query_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` query_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of query_logs.
     */
    distinct?: Query_logScalarFieldEnum | Query_logScalarFieldEnum[]
  }

  /**
   * query_log findFirstOrThrow
   */
  export type query_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter, which query_log to fetch.
     */
    where?: query_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of query_logs to fetch.
     */
    orderBy?: query_logOrderByWithRelationInput | query_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for query_logs.
     */
    cursor?: query_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` query_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` query_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of query_logs.
     */
    distinct?: Query_logScalarFieldEnum | Query_logScalarFieldEnum[]
  }

  /**
   * query_log findMany
   */
  export type query_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter, which query_logs to fetch.
     */
    where?: query_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of query_logs to fetch.
     */
    orderBy?: query_logOrderByWithRelationInput | query_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing query_logs.
     */
    cursor?: query_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` query_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` query_logs.
     */
    skip?: number
    distinct?: Query_logScalarFieldEnum | Query_logScalarFieldEnum[]
  }

  /**
   * query_log create
   */
  export type query_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * The data needed to create a query_log.
     */
    data?: XOR<query_logCreateInput, query_logUncheckedCreateInput>
  }

  /**
   * query_log createMany
   */
  export type query_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many query_logs.
     */
    data: query_logCreateManyInput | query_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * query_log update
   */
  export type query_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * The data needed to update a query_log.
     */
    data: XOR<query_logUpdateInput, query_logUncheckedUpdateInput>
    /**
     * Choose, which query_log to update.
     */
    where: query_logWhereUniqueInput
  }

  /**
   * query_log updateMany
   */
  export type query_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update query_logs.
     */
    data: XOR<query_logUpdateManyMutationInput, query_logUncheckedUpdateManyInput>
    /**
     * Filter which query_logs to update
     */
    where?: query_logWhereInput
    /**
     * Limit how many query_logs to update.
     */
    limit?: number
  }

  /**
   * query_log upsert
   */
  export type query_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * The filter to search for the query_log to update in case it exists.
     */
    where: query_logWhereUniqueInput
    /**
     * In case the query_log found by the `where` argument doesn't exist, create a new query_log with this data.
     */
    create: XOR<query_logCreateInput, query_logUncheckedCreateInput>
    /**
     * In case the query_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<query_logUpdateInput, query_logUncheckedUpdateInput>
  }

  /**
   * query_log delete
   */
  export type query_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
    /**
     * Filter which query_log to delete.
     */
    where: query_logWhereUniqueInput
  }

  /**
   * query_log deleteMany
   */
  export type query_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which query_logs to delete
     */
    where?: query_logWhereInput
    /**
     * Limit how many query_logs to delete.
     */
    limit?: number
  }

  /**
   * query_log without action
   */
  export type query_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the query_log
     */
    select?: query_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the query_log
     */
    omit?: query_logOmit<ExtArgs> | null
  }


  /**
   * Model user_log
   */

  export type AggregateUser_log = {
    _count: User_logCountAggregateOutputType | null
    _avg: User_logAvgAggregateOutputType | null
    _sum: User_logSumAggregateOutputType | null
    _min: User_logMinAggregateOutputType | null
    _max: User_logMaxAggregateOutputType | null
  }

  export type User_logAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type User_logSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type User_logMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    activity: string | null
    timestamp: Date | null
  }

  export type User_logMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    activity: string | null
    timestamp: Date | null
  }

  export type User_logCountAggregateOutputType = {
    id: number
    user_id: number
    activity: number
    timestamp: number
    _all: number
  }


  export type User_logAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type User_logSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type User_logMinAggregateInputType = {
    id?: true
    user_id?: true
    activity?: true
    timestamp?: true
  }

  export type User_logMaxAggregateInputType = {
    id?: true
    user_id?: true
    activity?: true
    timestamp?: true
  }

  export type User_logCountAggregateInputType = {
    id?: true
    user_id?: true
    activity?: true
    timestamp?: true
    _all?: true
  }

  export type User_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_log to aggregate.
     */
    where?: user_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_logs to fetch.
     */
    orderBy?: user_logOrderByWithRelationInput | user_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_logs
    **/
    _count?: true | User_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_logMaxAggregateInputType
  }

  export type GetUser_logAggregateType<T extends User_logAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_log[P]>
      : GetScalarType<T[P], AggregateUser_log[P]>
  }




  export type user_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_logWhereInput
    orderBy?: user_logOrderByWithAggregationInput | user_logOrderByWithAggregationInput[]
    by: User_logScalarFieldEnum[] | User_logScalarFieldEnum
    having?: user_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_logCountAggregateInputType | true
    _avg?: User_logAvgAggregateInputType
    _sum?: User_logSumAggregateInputType
    _min?: User_logMinAggregateInputType
    _max?: User_logMaxAggregateInputType
  }

  export type User_logGroupByOutputType = {
    id: number
    user_id: number
    activity: string
    timestamp: Date
    _count: User_logCountAggregateOutputType | null
    _avg: User_logAvgAggregateOutputType | null
    _sum: User_logSumAggregateOutputType | null
    _min: User_logMinAggregateOutputType | null
    _max: User_logMaxAggregateOutputType | null
  }

  type GetUser_logGroupByPayload<T extends user_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_logGroupByOutputType[P]>
            : GetScalarType<T[P], User_logGroupByOutputType[P]>
        }
      >
    >


  export type user_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    activity?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["user_log"]>



  export type user_logSelectScalar = {
    id?: boolean
    user_id?: boolean
    activity?: boolean
    timestamp?: boolean
  }

  export type user_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "activity" | "timestamp", ExtArgs["result"]["user_log"]>

  export type $user_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      activity: string
      timestamp: Date
    }, ExtArgs["result"]["user_log"]>
    composites: {}
  }

  type user_logGetPayload<S extends boolean | null | undefined | user_logDefaultArgs> = $Result.GetResult<Prisma.$user_logPayload, S>

  type user_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_logCountAggregateInputType | true
    }

  export interface user_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_log'], meta: { name: 'user_log' } }
    /**
     * Find zero or one User_log that matches the filter.
     * @param {user_logFindUniqueArgs} args - Arguments to find a User_log
     * @example
     * // Get one User_log
     * const user_log = await prisma.user_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_logFindUniqueArgs>(args: SelectSubset<T, user_logFindUniqueArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_logFindUniqueOrThrowArgs} args - Arguments to find a User_log
     * @example
     * // Get one User_log
     * const user_log = await prisma.user_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_logFindUniqueOrThrowArgs>(args: SelectSubset<T, user_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logFindFirstArgs} args - Arguments to find a User_log
     * @example
     * // Get one User_log
     * const user_log = await prisma.user_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_logFindFirstArgs>(args?: SelectSubset<T, user_logFindFirstArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logFindFirstOrThrowArgs} args - Arguments to find a User_log
     * @example
     * // Get one User_log
     * const user_log = await prisma.user_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_logFindFirstOrThrowArgs>(args?: SelectSubset<T, user_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_logs
     * const user_logs = await prisma.user_log.findMany()
     * 
     * // Get first 10 User_logs
     * const user_logs = await prisma.user_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_logWithIdOnly = await prisma.user_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_logFindManyArgs>(args?: SelectSubset<T, user_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_log.
     * @param {user_logCreateArgs} args - Arguments to create a User_log.
     * @example
     * // Create one User_log
     * const User_log = await prisma.user_log.create({
     *   data: {
     *     // ... data to create a User_log
     *   }
     * })
     * 
     */
    create<T extends user_logCreateArgs>(args: SelectSubset<T, user_logCreateArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_logs.
     * @param {user_logCreateManyArgs} args - Arguments to create many User_logs.
     * @example
     * // Create many User_logs
     * const user_log = await prisma.user_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_logCreateManyArgs>(args?: SelectSubset<T, user_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_log.
     * @param {user_logDeleteArgs} args - Arguments to delete one User_log.
     * @example
     * // Delete one User_log
     * const User_log = await prisma.user_log.delete({
     *   where: {
     *     // ... filter to delete one User_log
     *   }
     * })
     * 
     */
    delete<T extends user_logDeleteArgs>(args: SelectSubset<T, user_logDeleteArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_log.
     * @param {user_logUpdateArgs} args - Arguments to update one User_log.
     * @example
     * // Update one User_log
     * const user_log = await prisma.user_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_logUpdateArgs>(args: SelectSubset<T, user_logUpdateArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_logs.
     * @param {user_logDeleteManyArgs} args - Arguments to filter User_logs to delete.
     * @example
     * // Delete a few User_logs
     * const { count } = await prisma.user_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_logDeleteManyArgs>(args?: SelectSubset<T, user_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_logs
     * const user_log = await prisma.user_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_logUpdateManyArgs>(args: SelectSubset<T, user_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_log.
     * @param {user_logUpsertArgs} args - Arguments to update or create a User_log.
     * @example
     * // Update or create a User_log
     * const user_log = await prisma.user_log.upsert({
     *   create: {
     *     // ... data to create a User_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_log we want to update
     *   }
     * })
     */
    upsert<T extends user_logUpsertArgs>(args: SelectSubset<T, user_logUpsertArgs<ExtArgs>>): Prisma__user_logClient<$Result.GetResult<Prisma.$user_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logCountArgs} args - Arguments to filter User_logs to count.
     * @example
     * // Count the number of User_logs
     * const count = await prisma.user_log.count({
     *   where: {
     *     // ... the filter for the User_logs we want to count
     *   }
     * })
    **/
    count<T extends user_logCountArgs>(
      args?: Subset<T, user_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_logAggregateArgs>(args: Subset<T, User_logAggregateArgs>): Prisma.PrismaPromise<GetUser_logAggregateType<T>>

    /**
     * Group by User_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_logGroupByArgs['orderBy'] }
        : { orderBy?: user_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_log model
   */
  readonly fields: user_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_log model
   */
  interface user_logFieldRefs {
    readonly id: FieldRef<"user_log", 'Int'>
    readonly user_id: FieldRef<"user_log", 'Int'>
    readonly activity: FieldRef<"user_log", 'String'>
    readonly timestamp: FieldRef<"user_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_log findUnique
   */
  export type user_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter, which user_log to fetch.
     */
    where: user_logWhereUniqueInput
  }

  /**
   * user_log findUniqueOrThrow
   */
  export type user_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter, which user_log to fetch.
     */
    where: user_logWhereUniqueInput
  }

  /**
   * user_log findFirst
   */
  export type user_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter, which user_log to fetch.
     */
    where?: user_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_logs to fetch.
     */
    orderBy?: user_logOrderByWithRelationInput | user_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_logs.
     */
    cursor?: user_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_logs.
     */
    distinct?: User_logScalarFieldEnum | User_logScalarFieldEnum[]
  }

  /**
   * user_log findFirstOrThrow
   */
  export type user_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter, which user_log to fetch.
     */
    where?: user_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_logs to fetch.
     */
    orderBy?: user_logOrderByWithRelationInput | user_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_logs.
     */
    cursor?: user_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_logs.
     */
    distinct?: User_logScalarFieldEnum | User_logScalarFieldEnum[]
  }

  /**
   * user_log findMany
   */
  export type user_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter, which user_logs to fetch.
     */
    where?: user_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_logs to fetch.
     */
    orderBy?: user_logOrderByWithRelationInput | user_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_logs.
     */
    cursor?: user_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_logs.
     */
    skip?: number
    distinct?: User_logScalarFieldEnum | User_logScalarFieldEnum[]
  }

  /**
   * user_log create
   */
  export type user_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * The data needed to create a user_log.
     */
    data?: XOR<user_logCreateInput, user_logUncheckedCreateInput>
  }

  /**
   * user_log createMany
   */
  export type user_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_logs.
     */
    data: user_logCreateManyInput | user_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_log update
   */
  export type user_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * The data needed to update a user_log.
     */
    data: XOR<user_logUpdateInput, user_logUncheckedUpdateInput>
    /**
     * Choose, which user_log to update.
     */
    where: user_logWhereUniqueInput
  }

  /**
   * user_log updateMany
   */
  export type user_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_logs.
     */
    data: XOR<user_logUpdateManyMutationInput, user_logUncheckedUpdateManyInput>
    /**
     * Filter which user_logs to update
     */
    where?: user_logWhereInput
    /**
     * Limit how many user_logs to update.
     */
    limit?: number
  }

  /**
   * user_log upsert
   */
  export type user_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * The filter to search for the user_log to update in case it exists.
     */
    where: user_logWhereUniqueInput
    /**
     * In case the user_log found by the `where` argument doesn't exist, create a new user_log with this data.
     */
    create: XOR<user_logCreateInput, user_logUncheckedCreateInput>
    /**
     * In case the user_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_logUpdateInput, user_logUncheckedUpdateInput>
  }

  /**
   * user_log delete
   */
  export type user_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
    /**
     * Filter which user_log to delete.
     */
    where: user_logWhereUniqueInput
  }

  /**
   * user_log deleteMany
   */
  export type user_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_logs to delete
     */
    where?: user_logWhereInput
    /**
     * Limit how many user_logs to delete.
     */
    limit?: number
  }

  /**
   * user_log without action
   */
  export type user_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_log
     */
    select?: user_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_log
     */
    omit?: user_logOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Nd_barangScalarFieldEnum: {
    id: 'id',
    jenis_barang: 'jenis_barang',
    nama_jual: 'nama_jual',
    satuan_id: 'satuan_id',
    qty_warning: 'qty_warning',
    deskripsi_info: 'deskripsi_info',
    status_aktif: 'status_aktif',
    tipe_qty: 'tipe_qty',
    grade: 'grade',
    bahan: 'bahan',
    fitur: 'fitur',
    tipe: 'tipe',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_barangScalarFieldEnum = (typeof Nd_barangScalarFieldEnum)[keyof typeof Nd_barangScalarFieldEnum]


  export const Nd_barang_bahanScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan',
    status_aktif: 'status_aktif'
  };

  export type Nd_barang_bahanScalarFieldEnum = (typeof Nd_barang_bahanScalarFieldEnum)[keyof typeof Nd_barang_bahanScalarFieldEnum]


  export const Nd_barang_beliScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    barang_id: 'barang_id',
    status_aktif: 'status_aktif',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_barang_beliScalarFieldEnum = (typeof Nd_barang_beliScalarFieldEnum)[keyof typeof Nd_barang_beliScalarFieldEnum]


  export const Nd_barang_fiturScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan',
    status_aktif: 'status_aktif'
  };

  export type Nd_barang_fiturScalarFieldEnum = (typeof Nd_barang_fiturScalarFieldEnum)[keyof typeof Nd_barang_fiturScalarFieldEnum]


  export const Nd_barang_gradeScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan',
    status_aktif: 'status_aktif'
  };

  export type Nd_barang_gradeScalarFieldEnum = (typeof Nd_barang_gradeScalarFieldEnum)[keyof typeof Nd_barang_gradeScalarFieldEnum]


  export const Nd_barang_skuScalarFieldEnum: {
    id: 'id',
    sku_id: 'sku_id',
    nama_barang: 'nama_barang',
    nama_jual: 'nama_jual',
    barang_id: 'barang_id',
    warna_id: 'warna_id',
    satuan_id: 'satuan_id',
    status_aktif: 'status_aktif',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_barang_skuScalarFieldEnum = (typeof Nd_barang_skuScalarFieldEnum)[keyof typeof Nd_barang_skuScalarFieldEnum]


  export const Nd_barang_tipeScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan',
    status_aktif: 'status_aktif'
  };

  export type Nd_barang_tipeScalarFieldEnum = (typeof Nd_barang_tipeScalarFieldEnum)[keyof typeof Nd_barang_tipeScalarFieldEnum]


  export const Nd_customerScalarFieldEnum: {
    id: 'id',
    customer_type_id: 'customer_type_id',
    nama: 'nama',
    alias: 'alias',
    alamat: 'alamat',
    telepon: 'telepon',
    telepon1: 'telepon1',
    telepon2: 'telepon2',
    npwp: 'npwp',
    nik: 'nik',
    kota: 'kota',
    provinsi: 'provinsi',
    kode_pos: 'kode_pos',
    email: 'email',
    contact_person: 'contact_person',
    tempo_kredit: 'tempo_kredit',
    warning_kredit: 'warning_kredit',
    limit_warning_type: 'limit_warning_type',
    limit_amount: 'limit_amount',
    limit_atas: 'limit_atas',
    limit_warning_amount: 'limit_warning_amount',
    status_aktif: 'status_aktif',
    img_link: 'img_link',
    npwp_link: 'npwp_link',
    ktp_link: 'ktp_link',
    medsos_link: 'medsos_link',
    updated_at: 'updated_at',
    tipe_company: 'tipe_company',
    blok: 'blok',
    no: 'no',
    rt: 'rt',
    rw: 'rw',
    kecamatan: 'kecamatan',
    kelurahan: 'kelurahan',
    locked_status: 'locked_status',
    jenis_pekerjaan: 'jenis_pekerjaan',
    jenis_produk: 'jenis_produk',
    user_id: 'user_id'
  };

  export type Nd_customerScalarFieldEnum = (typeof Nd_customerScalarFieldEnum)[keyof typeof Nd_customerScalarFieldEnum]


  export const Nd_departmentScalarFieldEnum: {
    id: 'id',
    kode: 'kode',
    nama: 'nama',
    status_aktif: 'status_aktif',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_departmentScalarFieldEnum = (typeof Nd_departmentScalarFieldEnum)[keyof typeof Nd_departmentScalarFieldEnum]


  export const Nd_documentScalarFieldEnum: {
    id: 'id',
    toko_id: 'toko_id',
    tanggal: 'tanggal',
    document_control_id: 'document_control_id',
    document_number_raw: 'document_number_raw',
    document_number: 'document_number',
    document_status: 'document_status',
    judul: 'judul',
    dari: 'dari',
    kepada: 'kepada',
    keterangan: 'keterangan',
    penanggung_jawab: 'penanggung_jawab',
    username: 'username',
    status_aktif: 'status_aktif'
  };

  export type Nd_documentScalarFieldEnum = (typeof Nd_documentScalarFieldEnum)[keyof typeof Nd_documentScalarFieldEnum]


  export const Nd_document_controlScalarFieldEnum: {
    id: 'id',
    department_id: 'department_id',
    tipe_dokumen: 'tipe_dokumen',
    no_kode: 'no_kode',
    kode: 'kode',
    nama: 'nama',
    keterangan: 'keterangan',
    status_aktif: 'status_aktif',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_document_controlScalarFieldEnum = (typeof Nd_document_controlScalarFieldEnum)[keyof typeof Nd_document_controlScalarFieldEnum]


  export const Nd_gudangScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    lokasi: 'lokasi',
    status_default: 'status_default',
    visible: 'visible',
    gudang_group_id: 'gudang_group_id',
    urutan: 'urutan',
    status_aktif: 'status_aktif'
  };

  export type Nd_gudangScalarFieldEnum = (typeof Nd_gudangScalarFieldEnum)[keyof typeof Nd_gudangScalarFieldEnum]


  export const Nd_posisiScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type Nd_posisiScalarFieldEnum = (typeof Nd_posisiScalarFieldEnum)[keyof typeof Nd_posisiScalarFieldEnum]


  export const Nd_satuanScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    status_aktif: 'status_aktif'
  };

  export type Nd_satuanScalarFieldEnum = (typeof Nd_satuanScalarFieldEnum)[keyof typeof Nd_satuanScalarFieldEnum]


  export const Nd_supplierScalarFieldEnum: {
    id: 'id',
    kode: 'kode',
    nama: 'nama',
    alamat: 'alamat',
    telepon: 'telepon',
    kota: 'kota',
    fax: 'fax',
    kode_pos: 'kode_pos',
    nama_bank: 'nama_bank',
    no_rek_bank: 'no_rek_bank',
    email: 'email',
    website: 'website',
    status_aktif: 'status_aktif'
  };

  export type Nd_supplierScalarFieldEnum = (typeof Nd_supplierScalarFieldEnum)[keyof typeof Nd_supplierScalarFieldEnum]


  export const Nd_tokoScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    alias: 'alias',
    alamat: 'alamat',
    telepon: 'telepon',
    email: 'email',
    fax: 'fax',
    kota: 'kota',
    kode_pos: 'kode_pos',
    NPWP: 'NPWP',
    pre_faktur: 'pre_faktur',
    kode_toko: 'kode_toko',
    status_aktif: 'status_aktif',
    nama_domain: 'nama_domain',
    email_pajak: 'email_pajak',
    index: 'index'
  };

  export type Nd_tokoScalarFieldEnum = (typeof Nd_tokoScalarFieldEnum)[keyof typeof Nd_tokoScalarFieldEnum]


  export const Nd_toko_barang_assignmentScalarFieldEnum: {
    id: 'id',
    toko_id: 'toko_id',
    barang_id: 'barang_id',
    is_synced: 'is_synced',
    last_synced: 'last_synced',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Nd_toko_barang_assignmentScalarFieldEnum = (typeof Nd_toko_barang_assignmentScalarFieldEnum)[keyof typeof Nd_toko_barang_assignmentScalarFieldEnum]


  export const Nd_toko_userScalarFieldEnum: {
    id: 'id',
    toko_id: 'toko_id',
    user_id: 'user_id',
    user_id_creator: 'user_id_creator',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_toko_userScalarFieldEnum = (typeof Nd_toko_userScalarFieldEnum)[keyof typeof Nd_toko_userScalarFieldEnum]


  export const Nd_userScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    roles: 'roles',
    has_account: 'has_account',
    nama: 'nama',
    alamat: 'alamat',
    telepon: 'telepon',
    jenis_kelamin: 'jenis_kelamin',
    kota_lahir: 'kota_lahir',
    tgl_lahir: 'tgl_lahir',
    status_perkawinan: 'status_perkawinan',
    jumlah_anak: 'jumlah_anak',
    agama: 'agama',
    nik: 'nik',
    npwp: 'npwp',
    profile_picture: 'profile_picture',
    ktp_picture: 'ktp_picture',
    npwp_picture: 'npwp_picture',
    posisi_id: 'posisi_id',
    time_start: 'time_start',
    time_end: 'time_end',
    printer_list_id: 'printer_list_id',
    status_aktif: 'status_aktif',
    PIN: 'PIN',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Nd_userScalarFieldEnum = (typeof Nd_userScalarFieldEnum)[keyof typeof Nd_userScalarFieldEnum]


  export const Nd_warnaScalarFieldEnum: {
    id: 'id',
    warna_beli: 'warna_beli',
    warna_jual: 'warna_jual',
    kode_warna: 'kode_warna',
    status_aktif: 'status_aktif'
  };

  export type Nd_warnaScalarFieldEnum = (typeof Nd_warnaScalarFieldEnum)[keyof typeof Nd_warnaScalarFieldEnum]


  export const Query_logScalarFieldEnum: {
    id: 'id',
    table_name: 'table_name',
    affected_id: 'affected_id',
    query: 'query',
    params: 'params',
    username: 'username',
    timestamp: 'timestamp'
  };

  export type Query_logScalarFieldEnum = (typeof Query_logScalarFieldEnum)[keyof typeof Query_logScalarFieldEnum]


  export const User_logScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    activity: 'activity',
    timestamp: 'timestamp'
  };

  export type User_logScalarFieldEnum = (typeof User_logScalarFieldEnum)[keyof typeof User_logScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const nd_barangOrderByRelevanceFieldEnum: {
    jenis_barang: 'jenis_barang',
    nama_jual: 'nama_jual',
    deskripsi_info: 'deskripsi_info',
    grade: 'grade',
    bahan: 'bahan',
    fitur: 'fitur',
    tipe: 'tipe'
  };

  export type nd_barangOrderByRelevanceFieldEnum = (typeof nd_barangOrderByRelevanceFieldEnum)[keyof typeof nd_barangOrderByRelevanceFieldEnum]


  export const nd_barang_bahanOrderByRelevanceFieldEnum: {
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan'
  };

  export type nd_barang_bahanOrderByRelevanceFieldEnum = (typeof nd_barang_bahanOrderByRelevanceFieldEnum)[keyof typeof nd_barang_bahanOrderByRelevanceFieldEnum]


  export const nd_barang_beliOrderByRelevanceFieldEnum: {
    nama: 'nama'
  };

  export type nd_barang_beliOrderByRelevanceFieldEnum = (typeof nd_barang_beliOrderByRelevanceFieldEnum)[keyof typeof nd_barang_beliOrderByRelevanceFieldEnum]


  export const nd_barang_fiturOrderByRelevanceFieldEnum: {
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan'
  };

  export type nd_barang_fiturOrderByRelevanceFieldEnum = (typeof nd_barang_fiturOrderByRelevanceFieldEnum)[keyof typeof nd_barang_fiturOrderByRelevanceFieldEnum]


  export const nd_barang_gradeOrderByRelevanceFieldEnum: {
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan'
  };

  export type nd_barang_gradeOrderByRelevanceFieldEnum = (typeof nd_barang_gradeOrderByRelevanceFieldEnum)[keyof typeof nd_barang_gradeOrderByRelevanceFieldEnum]


  export const nd_barang_skuOrderByRelevanceFieldEnum: {
    sku_id: 'sku_id',
    nama_barang: 'nama_barang',
    nama_jual: 'nama_jual'
  };

  export type nd_barang_skuOrderByRelevanceFieldEnum = (typeof nd_barang_skuOrderByRelevanceFieldEnum)[keyof typeof nd_barang_skuOrderByRelevanceFieldEnum]


  export const nd_barang_tipeOrderByRelevanceFieldEnum: {
    nama: 'nama',
    kode: 'kode',
    keterangan: 'keterangan'
  };

  export type nd_barang_tipeOrderByRelevanceFieldEnum = (typeof nd_barang_tipeOrderByRelevanceFieldEnum)[keyof typeof nd_barang_tipeOrderByRelevanceFieldEnum]


  export const nd_customerOrderByRelevanceFieldEnum: {
    nama: 'nama',
    alias: 'alias',
    alamat: 'alamat',
    telepon: 'telepon',
    telepon1: 'telepon1',
    telepon2: 'telepon2',
    npwp: 'npwp',
    nik: 'nik',
    kota: 'kota',
    provinsi: 'provinsi',
    kode_pos: 'kode_pos',
    email: 'email',
    contact_person: 'contact_person',
    img_link: 'img_link',
    npwp_link: 'npwp_link',
    ktp_link: 'ktp_link',
    medsos_link: 'medsos_link',
    tipe_company: 'tipe_company',
    blok: 'blok',
    no: 'no',
    rt: 'rt',
    rw: 'rw',
    kecamatan: 'kecamatan',
    kelurahan: 'kelurahan',
    jenis_pekerjaan: 'jenis_pekerjaan',
    jenis_produk: 'jenis_produk'
  };

  export type nd_customerOrderByRelevanceFieldEnum = (typeof nd_customerOrderByRelevanceFieldEnum)[keyof typeof nd_customerOrderByRelevanceFieldEnum]


  export const nd_departmentOrderByRelevanceFieldEnum: {
    kode: 'kode',
    nama: 'nama'
  };

  export type nd_departmentOrderByRelevanceFieldEnum = (typeof nd_departmentOrderByRelevanceFieldEnum)[keyof typeof nd_departmentOrderByRelevanceFieldEnum]


  export const nd_documentOrderByRelevanceFieldEnum: {
    document_number: 'document_number',
    document_status: 'document_status',
    judul: 'judul',
    dari: 'dari',
    kepada: 'kepada',
    keterangan: 'keterangan',
    penanggung_jawab: 'penanggung_jawab',
    username: 'username'
  };

  export type nd_documentOrderByRelevanceFieldEnum = (typeof nd_documentOrderByRelevanceFieldEnum)[keyof typeof nd_documentOrderByRelevanceFieldEnum]


  export const nd_document_controlOrderByRelevanceFieldEnum: {
    tipe_dokumen: 'tipe_dokumen',
    kode: 'kode',
    nama: 'nama',
    keterangan: 'keterangan'
  };

  export type nd_document_controlOrderByRelevanceFieldEnum = (typeof nd_document_controlOrderByRelevanceFieldEnum)[keyof typeof nd_document_controlOrderByRelevanceFieldEnum]


  export const nd_gudangOrderByRelevanceFieldEnum: {
    nama: 'nama',
    lokasi: 'lokasi'
  };

  export type nd_gudangOrderByRelevanceFieldEnum = (typeof nd_gudangOrderByRelevanceFieldEnum)[keyof typeof nd_gudangOrderByRelevanceFieldEnum]


  export const nd_posisiOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type nd_posisiOrderByRelevanceFieldEnum = (typeof nd_posisiOrderByRelevanceFieldEnum)[keyof typeof nd_posisiOrderByRelevanceFieldEnum]


  export const nd_satuanOrderByRelevanceFieldEnum: {
    nama: 'nama'
  };

  export type nd_satuanOrderByRelevanceFieldEnum = (typeof nd_satuanOrderByRelevanceFieldEnum)[keyof typeof nd_satuanOrderByRelevanceFieldEnum]


  export const nd_supplierOrderByRelevanceFieldEnum: {
    kode: 'kode',
    nama: 'nama',
    alamat: 'alamat',
    telepon: 'telepon',
    kota: 'kota',
    fax: 'fax',
    kode_pos: 'kode_pos',
    nama_bank: 'nama_bank',
    no_rek_bank: 'no_rek_bank',
    email: 'email',
    website: 'website'
  };

  export type nd_supplierOrderByRelevanceFieldEnum = (typeof nd_supplierOrderByRelevanceFieldEnum)[keyof typeof nd_supplierOrderByRelevanceFieldEnum]


  export const nd_tokoOrderByRelevanceFieldEnum: {
    nama: 'nama',
    alias: 'alias',
    alamat: 'alamat',
    telepon: 'telepon',
    email: 'email',
    fax: 'fax',
    kota: 'kota',
    kode_pos: 'kode_pos',
    NPWP: 'NPWP',
    pre_faktur: 'pre_faktur',
    kode_toko: 'kode_toko',
    nama_domain: 'nama_domain',
    email_pajak: 'email_pajak'
  };

  export type nd_tokoOrderByRelevanceFieldEnum = (typeof nd_tokoOrderByRelevanceFieldEnum)[keyof typeof nd_tokoOrderByRelevanceFieldEnum]


  export const nd_userOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password',
    roles: 'roles',
    nama: 'nama',
    alamat: 'alamat',
    telepon: 'telepon',
    jenis_kelamin: 'jenis_kelamin',
    kota_lahir: 'kota_lahir',
    status_perkawinan: 'status_perkawinan',
    agama: 'agama',
    nik: 'nik',
    npwp: 'npwp',
    profile_picture: 'profile_picture',
    ktp_picture: 'ktp_picture',
    npwp_picture: 'npwp_picture',
    PIN: 'PIN'
  };

  export type nd_userOrderByRelevanceFieldEnum = (typeof nd_userOrderByRelevanceFieldEnum)[keyof typeof nd_userOrderByRelevanceFieldEnum]


  export const nd_warnaOrderByRelevanceFieldEnum: {
    warna_beli: 'warna_beli',
    warna_jual: 'warna_jual',
    kode_warna: 'kode_warna'
  };

  export type nd_warnaOrderByRelevanceFieldEnum = (typeof nd_warnaOrderByRelevanceFieldEnum)[keyof typeof nd_warnaOrderByRelevanceFieldEnum]


  export const query_logOrderByRelevanceFieldEnum: {
    table_name: 'table_name',
    query: 'query',
    params: 'params',
    username: 'username'
  };

  export type query_logOrderByRelevanceFieldEnum = (typeof query_logOrderByRelevanceFieldEnum)[keyof typeof query_logOrderByRelevanceFieldEnum]


  export const user_logOrderByRelevanceFieldEnum: {
    activity: 'activity'
  };

  export type user_logOrderByRelevanceFieldEnum = (typeof user_logOrderByRelevanceFieldEnum)[keyof typeof user_logOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type nd_barangWhereInput = {
    AND?: nd_barangWhereInput | nd_barangWhereInput[]
    OR?: nd_barangWhereInput[]
    NOT?: nd_barangWhereInput | nd_barangWhereInput[]
    id?: IntFilter<"nd_barang"> | number
    jenis_barang?: StringNullableFilter<"nd_barang"> | string | null
    nama_jual?: StringNullableFilter<"nd_barang"> | string | null
    satuan_id?: IntNullableFilter<"nd_barang"> | number | null
    qty_warning?: IntFilter<"nd_barang"> | number
    deskripsi_info?: StringNullableFilter<"nd_barang"> | string | null
    status_aktif?: IntNullableFilter<"nd_barang"> | number | null
    tipe_qty?: BoolNullableFilter<"nd_barang"> | boolean | null
    grade?: StringNullableFilter<"nd_barang"> | string | null
    bahan?: StringNullableFilter<"nd_barang"> | string | null
    fitur?: StringNullableFilter<"nd_barang"> | string | null
    tipe?: StringNullableFilter<"nd_barang"> | string | null
    created_at?: DateTimeFilter<"nd_barang"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang"> | Date | string
    nd_satuan?: XOR<Nd_satuanNullableScalarRelationFilter, nd_satuanWhereInput> | null
  }

  export type nd_barangOrderByWithRelationInput = {
    id?: SortOrder
    jenis_barang?: SortOrderInput | SortOrder
    nama_jual?: SortOrderInput | SortOrder
    satuan_id?: SortOrderInput | SortOrder
    qty_warning?: SortOrder
    deskripsi_info?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    tipe_qty?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    bahan?: SortOrderInput | SortOrder
    fitur?: SortOrderInput | SortOrder
    tipe?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nd_satuan?: nd_satuanOrderByWithRelationInput
    _relevance?: nd_barangOrderByRelevanceInput
  }

  export type nd_barangWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama_jual_satuan_id?: nd_barangNama_jualSatuan_idCompoundUniqueInput
    AND?: nd_barangWhereInput | nd_barangWhereInput[]
    OR?: nd_barangWhereInput[]
    NOT?: nd_barangWhereInput | nd_barangWhereInput[]
    jenis_barang?: StringNullableFilter<"nd_barang"> | string | null
    nama_jual?: StringNullableFilter<"nd_barang"> | string | null
    satuan_id?: IntNullableFilter<"nd_barang"> | number | null
    qty_warning?: IntFilter<"nd_barang"> | number
    deskripsi_info?: StringNullableFilter<"nd_barang"> | string | null
    status_aktif?: IntNullableFilter<"nd_barang"> | number | null
    tipe_qty?: BoolNullableFilter<"nd_barang"> | boolean | null
    grade?: StringNullableFilter<"nd_barang"> | string | null
    bahan?: StringNullableFilter<"nd_barang"> | string | null
    fitur?: StringNullableFilter<"nd_barang"> | string | null
    tipe?: StringNullableFilter<"nd_barang"> | string | null
    created_at?: DateTimeFilter<"nd_barang"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang"> | Date | string
    nd_satuan?: XOR<Nd_satuanNullableScalarRelationFilter, nd_satuanWhereInput> | null
  }, "id" | "nama_jual_satuan_id">

  export type nd_barangOrderByWithAggregationInput = {
    id?: SortOrder
    jenis_barang?: SortOrderInput | SortOrder
    nama_jual?: SortOrderInput | SortOrder
    satuan_id?: SortOrderInput | SortOrder
    qty_warning?: SortOrder
    deskripsi_info?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    tipe_qty?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    bahan?: SortOrderInput | SortOrder
    fitur?: SortOrderInput | SortOrder
    tipe?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_barangCountOrderByAggregateInput
    _avg?: nd_barangAvgOrderByAggregateInput
    _max?: nd_barangMaxOrderByAggregateInput
    _min?: nd_barangMinOrderByAggregateInput
    _sum?: nd_barangSumOrderByAggregateInput
  }

  export type nd_barangScalarWhereWithAggregatesInput = {
    AND?: nd_barangScalarWhereWithAggregatesInput | nd_barangScalarWhereWithAggregatesInput[]
    OR?: nd_barangScalarWhereWithAggregatesInput[]
    NOT?: nd_barangScalarWhereWithAggregatesInput | nd_barangScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang"> | number
    jenis_barang?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    nama_jual?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    satuan_id?: IntNullableWithAggregatesFilter<"nd_barang"> | number | null
    qty_warning?: IntWithAggregatesFilter<"nd_barang"> | number
    deskripsi_info?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    status_aktif?: IntNullableWithAggregatesFilter<"nd_barang"> | number | null
    tipe_qty?: BoolNullableWithAggregatesFilter<"nd_barang"> | boolean | null
    grade?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    bahan?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    fitur?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    tipe?: StringNullableWithAggregatesFilter<"nd_barang"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"nd_barang"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_barang"> | Date | string
  }

  export type nd_barang_bahanWhereInput = {
    AND?: nd_barang_bahanWhereInput | nd_barang_bahanWhereInput[]
    OR?: nd_barang_bahanWhereInput[]
    NOT?: nd_barang_bahanWhereInput | nd_barang_bahanWhereInput[]
    id?: IntFilter<"nd_barang_bahan"> | number
    nama?: StringFilter<"nd_barang_bahan"> | string
    kode?: StringFilter<"nd_barang_bahan"> | string
    keterangan?: StringNullableFilter<"nd_barang_bahan"> | string | null
    status_aktif?: IntFilter<"nd_barang_bahan"> | number
  }

  export type nd_barang_bahanOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_barang_bahanOrderByRelevanceInput
  }

  export type nd_barang_bahanWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nd_barang_bahanWhereInput | nd_barang_bahanWhereInput[]
    OR?: nd_barang_bahanWhereInput[]
    NOT?: nd_barang_bahanWhereInput | nd_barang_bahanWhereInput[]
    nama?: StringFilter<"nd_barang_bahan"> | string
    kode?: StringFilter<"nd_barang_bahan"> | string
    keterangan?: StringNullableFilter<"nd_barang_bahan"> | string | null
    status_aktif?: IntFilter<"nd_barang_bahan"> | number
  }, "id">

  export type nd_barang_bahanOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_barang_bahanCountOrderByAggregateInput
    _avg?: nd_barang_bahanAvgOrderByAggregateInput
    _max?: nd_barang_bahanMaxOrderByAggregateInput
    _min?: nd_barang_bahanMinOrderByAggregateInput
    _sum?: nd_barang_bahanSumOrderByAggregateInput
  }

  export type nd_barang_bahanScalarWhereWithAggregatesInput = {
    AND?: nd_barang_bahanScalarWhereWithAggregatesInput | nd_barang_bahanScalarWhereWithAggregatesInput[]
    OR?: nd_barang_bahanScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_bahanScalarWhereWithAggregatesInput | nd_barang_bahanScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_bahan"> | number
    nama?: StringWithAggregatesFilter<"nd_barang_bahan"> | string
    kode?: StringWithAggregatesFilter<"nd_barang_bahan"> | string
    keterangan?: StringNullableWithAggregatesFilter<"nd_barang_bahan"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_barang_bahan"> | number
  }

  export type nd_barang_beliWhereInput = {
    AND?: nd_barang_beliWhereInput | nd_barang_beliWhereInput[]
    OR?: nd_barang_beliWhereInput[]
    NOT?: nd_barang_beliWhereInput | nd_barang_beliWhereInput[]
    id?: IntFilter<"nd_barang_beli"> | number
    nama?: StringNullableFilter<"nd_barang_beli"> | string | null
    barang_id?: IntNullableFilter<"nd_barang_beli"> | number | null
    status_aktif?: IntNullableFilter<"nd_barang_beli"> | number | null
    created_at?: DateTimeFilter<"nd_barang_beli"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang_beli"> | Date | string
  }

  export type nd_barang_beliOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    barang_id?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: nd_barang_beliOrderByRelevanceInput
  }

  export type nd_barang_beliWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama_barang_id?: nd_barang_beliNamaBarang_idCompoundUniqueInput
    AND?: nd_barang_beliWhereInput | nd_barang_beliWhereInput[]
    OR?: nd_barang_beliWhereInput[]
    NOT?: nd_barang_beliWhereInput | nd_barang_beliWhereInput[]
    nama?: StringNullableFilter<"nd_barang_beli"> | string | null
    barang_id?: IntNullableFilter<"nd_barang_beli"> | number | null
    status_aktif?: IntNullableFilter<"nd_barang_beli"> | number | null
    created_at?: DateTimeFilter<"nd_barang_beli"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang_beli"> | Date | string
  }, "id" | "nama_barang_id">

  export type nd_barang_beliOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    barang_id?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_barang_beliCountOrderByAggregateInput
    _avg?: nd_barang_beliAvgOrderByAggregateInput
    _max?: nd_barang_beliMaxOrderByAggregateInput
    _min?: nd_barang_beliMinOrderByAggregateInput
    _sum?: nd_barang_beliSumOrderByAggregateInput
  }

  export type nd_barang_beliScalarWhereWithAggregatesInput = {
    AND?: nd_barang_beliScalarWhereWithAggregatesInput | nd_barang_beliScalarWhereWithAggregatesInput[]
    OR?: nd_barang_beliScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_beliScalarWhereWithAggregatesInput | nd_barang_beliScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_beli"> | number
    nama?: StringNullableWithAggregatesFilter<"nd_barang_beli"> | string | null
    barang_id?: IntNullableWithAggregatesFilter<"nd_barang_beli"> | number | null
    status_aktif?: IntNullableWithAggregatesFilter<"nd_barang_beli"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"nd_barang_beli"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_barang_beli"> | Date | string
  }

  export type nd_barang_fiturWhereInput = {
    AND?: nd_barang_fiturWhereInput | nd_barang_fiturWhereInput[]
    OR?: nd_barang_fiturWhereInput[]
    NOT?: nd_barang_fiturWhereInput | nd_barang_fiturWhereInput[]
    id?: IntFilter<"nd_barang_fitur"> | number
    nama?: StringFilter<"nd_barang_fitur"> | string
    kode?: StringFilter<"nd_barang_fitur"> | string
    keterangan?: StringNullableFilter<"nd_barang_fitur"> | string | null
    status_aktif?: IntFilter<"nd_barang_fitur"> | number
  }

  export type nd_barang_fiturOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_barang_fiturOrderByRelevanceInput
  }

  export type nd_barang_fiturWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    kode?: string
    AND?: nd_barang_fiturWhereInput | nd_barang_fiturWhereInput[]
    OR?: nd_barang_fiturWhereInput[]
    NOT?: nd_barang_fiturWhereInput | nd_barang_fiturWhereInput[]
    keterangan?: StringNullableFilter<"nd_barang_fitur"> | string | null
    status_aktif?: IntFilter<"nd_barang_fitur"> | number
  }, "id" | "nama" | "kode">

  export type nd_barang_fiturOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_barang_fiturCountOrderByAggregateInput
    _avg?: nd_barang_fiturAvgOrderByAggregateInput
    _max?: nd_barang_fiturMaxOrderByAggregateInput
    _min?: nd_barang_fiturMinOrderByAggregateInput
    _sum?: nd_barang_fiturSumOrderByAggregateInput
  }

  export type nd_barang_fiturScalarWhereWithAggregatesInput = {
    AND?: nd_barang_fiturScalarWhereWithAggregatesInput | nd_barang_fiturScalarWhereWithAggregatesInput[]
    OR?: nd_barang_fiturScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_fiturScalarWhereWithAggregatesInput | nd_barang_fiturScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_fitur"> | number
    nama?: StringWithAggregatesFilter<"nd_barang_fitur"> | string
    kode?: StringWithAggregatesFilter<"nd_barang_fitur"> | string
    keterangan?: StringNullableWithAggregatesFilter<"nd_barang_fitur"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_barang_fitur"> | number
  }

  export type nd_barang_gradeWhereInput = {
    AND?: nd_barang_gradeWhereInput | nd_barang_gradeWhereInput[]
    OR?: nd_barang_gradeWhereInput[]
    NOT?: nd_barang_gradeWhereInput | nd_barang_gradeWhereInput[]
    id?: IntFilter<"nd_barang_grade"> | number
    nama?: StringFilter<"nd_barang_grade"> | string
    kode?: StringFilter<"nd_barang_grade"> | string
    keterangan?: StringNullableFilter<"nd_barang_grade"> | string | null
    status_aktif?: IntFilter<"nd_barang_grade"> | number
  }

  export type nd_barang_gradeOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_barang_gradeOrderByRelevanceInput
  }

  export type nd_barang_gradeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    kode?: string
    AND?: nd_barang_gradeWhereInput | nd_barang_gradeWhereInput[]
    OR?: nd_barang_gradeWhereInput[]
    NOT?: nd_barang_gradeWhereInput | nd_barang_gradeWhereInput[]
    keterangan?: StringNullableFilter<"nd_barang_grade"> | string | null
    status_aktif?: IntFilter<"nd_barang_grade"> | number
  }, "id" | "nama" | "kode">

  export type nd_barang_gradeOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_barang_gradeCountOrderByAggregateInput
    _avg?: nd_barang_gradeAvgOrderByAggregateInput
    _max?: nd_barang_gradeMaxOrderByAggregateInput
    _min?: nd_barang_gradeMinOrderByAggregateInput
    _sum?: nd_barang_gradeSumOrderByAggregateInput
  }

  export type nd_barang_gradeScalarWhereWithAggregatesInput = {
    AND?: nd_barang_gradeScalarWhereWithAggregatesInput | nd_barang_gradeScalarWhereWithAggregatesInput[]
    OR?: nd_barang_gradeScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_gradeScalarWhereWithAggregatesInput | nd_barang_gradeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_grade"> | number
    nama?: StringWithAggregatesFilter<"nd_barang_grade"> | string
    kode?: StringWithAggregatesFilter<"nd_barang_grade"> | string
    keterangan?: StringNullableWithAggregatesFilter<"nd_barang_grade"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_barang_grade"> | number
  }

  export type nd_barang_skuWhereInput = {
    AND?: nd_barang_skuWhereInput | nd_barang_skuWhereInput[]
    OR?: nd_barang_skuWhereInput[]
    NOT?: nd_barang_skuWhereInput | nd_barang_skuWhereInput[]
    id?: IntFilter<"nd_barang_sku"> | number
    sku_id?: StringFilter<"nd_barang_sku"> | string
    nama_barang?: StringFilter<"nd_barang_sku"> | string
    nama_jual?: StringFilter<"nd_barang_sku"> | string
    barang_id?: IntFilter<"nd_barang_sku"> | number
    warna_id?: IntFilter<"nd_barang_sku"> | number
    satuan_id?: IntFilter<"nd_barang_sku"> | number
    status_aktif?: IntFilter<"nd_barang_sku"> | number
    created_at?: DateTimeFilter<"nd_barang_sku"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang_sku"> | Date | string
  }

  export type nd_barang_skuOrderByWithRelationInput = {
    id?: SortOrder
    sku_id?: SortOrder
    nama_barang?: SortOrder
    nama_jual?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: nd_barang_skuOrderByRelevanceInput
  }

  export type nd_barang_skuWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sku_id?: string
    barang_id_warna_id_satuan_id?: nd_barang_skuBarang_idWarna_idSatuan_idCompoundUniqueInput
    AND?: nd_barang_skuWhereInput | nd_barang_skuWhereInput[]
    OR?: nd_barang_skuWhereInput[]
    NOT?: nd_barang_skuWhereInput | nd_barang_skuWhereInput[]
    nama_barang?: StringFilter<"nd_barang_sku"> | string
    nama_jual?: StringFilter<"nd_barang_sku"> | string
    barang_id?: IntFilter<"nd_barang_sku"> | number
    warna_id?: IntFilter<"nd_barang_sku"> | number
    satuan_id?: IntFilter<"nd_barang_sku"> | number
    status_aktif?: IntFilter<"nd_barang_sku"> | number
    created_at?: DateTimeFilter<"nd_barang_sku"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang_sku"> | Date | string
  }, "id" | "sku_id" | "barang_id_warna_id_satuan_id">

  export type nd_barang_skuOrderByWithAggregationInput = {
    id?: SortOrder
    sku_id?: SortOrder
    nama_barang?: SortOrder
    nama_jual?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_barang_skuCountOrderByAggregateInput
    _avg?: nd_barang_skuAvgOrderByAggregateInput
    _max?: nd_barang_skuMaxOrderByAggregateInput
    _min?: nd_barang_skuMinOrderByAggregateInput
    _sum?: nd_barang_skuSumOrderByAggregateInput
  }

  export type nd_barang_skuScalarWhereWithAggregatesInput = {
    AND?: nd_barang_skuScalarWhereWithAggregatesInput | nd_barang_skuScalarWhereWithAggregatesInput[]
    OR?: nd_barang_skuScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_skuScalarWhereWithAggregatesInput | nd_barang_skuScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_sku"> | number
    sku_id?: StringWithAggregatesFilter<"nd_barang_sku"> | string
    nama_barang?: StringWithAggregatesFilter<"nd_barang_sku"> | string
    nama_jual?: StringWithAggregatesFilter<"nd_barang_sku"> | string
    barang_id?: IntWithAggregatesFilter<"nd_barang_sku"> | number
    warna_id?: IntWithAggregatesFilter<"nd_barang_sku"> | number
    satuan_id?: IntWithAggregatesFilter<"nd_barang_sku"> | number
    status_aktif?: IntWithAggregatesFilter<"nd_barang_sku"> | number
    created_at?: DateTimeWithAggregatesFilter<"nd_barang_sku"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_barang_sku"> | Date | string
  }

  export type nd_barang_tipeWhereInput = {
    AND?: nd_barang_tipeWhereInput | nd_barang_tipeWhereInput[]
    OR?: nd_barang_tipeWhereInput[]
    NOT?: nd_barang_tipeWhereInput | nd_barang_tipeWhereInput[]
    id?: IntFilter<"nd_barang_tipe"> | number
    nama?: StringFilter<"nd_barang_tipe"> | string
    kode?: StringFilter<"nd_barang_tipe"> | string
    keterangan?: StringNullableFilter<"nd_barang_tipe"> | string | null
    status_aktif?: IntFilter<"nd_barang_tipe"> | number
  }

  export type nd_barang_tipeOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_barang_tipeOrderByRelevanceInput
  }

  export type nd_barang_tipeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    kode?: string
    AND?: nd_barang_tipeWhereInput | nd_barang_tipeWhereInput[]
    OR?: nd_barang_tipeWhereInput[]
    NOT?: nd_barang_tipeWhereInput | nd_barang_tipeWhereInput[]
    keterangan?: StringNullableFilter<"nd_barang_tipe"> | string | null
    status_aktif?: IntFilter<"nd_barang_tipe"> | number
  }, "id" | "nama" | "kode">

  export type nd_barang_tipeOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_barang_tipeCountOrderByAggregateInput
    _avg?: nd_barang_tipeAvgOrderByAggregateInput
    _max?: nd_barang_tipeMaxOrderByAggregateInput
    _min?: nd_barang_tipeMinOrderByAggregateInput
    _sum?: nd_barang_tipeSumOrderByAggregateInput
  }

  export type nd_barang_tipeScalarWhereWithAggregatesInput = {
    AND?: nd_barang_tipeScalarWhereWithAggregatesInput | nd_barang_tipeScalarWhereWithAggregatesInput[]
    OR?: nd_barang_tipeScalarWhereWithAggregatesInput[]
    NOT?: nd_barang_tipeScalarWhereWithAggregatesInput | nd_barang_tipeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_barang_tipe"> | number
    nama?: StringWithAggregatesFilter<"nd_barang_tipe"> | string
    kode?: StringWithAggregatesFilter<"nd_barang_tipe"> | string
    keterangan?: StringNullableWithAggregatesFilter<"nd_barang_tipe"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_barang_tipe"> | number
  }

  export type nd_customerWhereInput = {
    AND?: nd_customerWhereInput | nd_customerWhereInput[]
    OR?: nd_customerWhereInput[]
    NOT?: nd_customerWhereInput | nd_customerWhereInput[]
    id?: IntFilter<"nd_customer"> | number
    customer_type_id?: BoolFilter<"nd_customer"> | boolean
    nama?: StringNullableFilter<"nd_customer"> | string | null
    alias?: StringFilter<"nd_customer"> | string
    alamat?: StringNullableFilter<"nd_customer"> | string | null
    telepon?: StringNullableFilter<"nd_customer"> | string | null
    telepon1?: StringNullableFilter<"nd_customer"> | string | null
    telepon2?: StringNullableFilter<"nd_customer"> | string | null
    npwp?: StringNullableFilter<"nd_customer"> | string | null
    nik?: StringNullableFilter<"nd_customer"> | string | null
    kota?: StringNullableFilter<"nd_customer"> | string | null
    provinsi?: StringNullableFilter<"nd_customer"> | string | null
    kode_pos?: StringNullableFilter<"nd_customer"> | string | null
    email?: StringNullableFilter<"nd_customer"> | string | null
    contact_person?: StringFilter<"nd_customer"> | string
    tempo_kredit?: IntNullableFilter<"nd_customer"> | number | null
    warning_kredit?: IntNullableFilter<"nd_customer"> | number | null
    limit_warning_type?: IntNullableFilter<"nd_customer"> | number | null
    limit_amount?: IntNullableFilter<"nd_customer"> | number | null
    limit_atas?: IntNullableFilter<"nd_customer"> | number | null
    limit_warning_amount?: IntNullableFilter<"nd_customer"> | number | null
    status_aktif?: BoolFilter<"nd_customer"> | boolean
    img_link?: StringNullableFilter<"nd_customer"> | string | null
    npwp_link?: StringNullableFilter<"nd_customer"> | string | null
    ktp_link?: StringNullableFilter<"nd_customer"> | string | null
    medsos_link?: StringNullableFilter<"nd_customer"> | string | null
    updated_at?: DateTimeFilter<"nd_customer"> | Date | string
    tipe_company?: StringNullableFilter<"nd_customer"> | string | null
    blok?: StringFilter<"nd_customer"> | string
    no?: StringNullableFilter<"nd_customer"> | string | null
    rt?: StringFilter<"nd_customer"> | string
    rw?: StringFilter<"nd_customer"> | string
    kecamatan?: StringFilter<"nd_customer"> | string
    kelurahan?: StringFilter<"nd_customer"> | string
    locked_status?: BoolFilter<"nd_customer"> | boolean
    jenis_pekerjaan?: StringNullableFilter<"nd_customer"> | string | null
    jenis_produk?: StringNullableFilter<"nd_customer"> | string | null
    user_id?: IntFilter<"nd_customer"> | number
  }

  export type nd_customerOrderByWithRelationInput = {
    id?: SortOrder
    customer_type_id?: SortOrder
    nama?: SortOrderInput | SortOrder
    alias?: SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    telepon1?: SortOrderInput | SortOrder
    telepon2?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    provinsi?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_person?: SortOrder
    tempo_kredit?: SortOrderInput | SortOrder
    warning_kredit?: SortOrderInput | SortOrder
    limit_warning_type?: SortOrderInput | SortOrder
    limit_amount?: SortOrderInput | SortOrder
    limit_atas?: SortOrderInput | SortOrder
    limit_warning_amount?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    img_link?: SortOrderInput | SortOrder
    npwp_link?: SortOrderInput | SortOrder
    ktp_link?: SortOrderInput | SortOrder
    medsos_link?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    tipe_company?: SortOrderInput | SortOrder
    blok?: SortOrder
    no?: SortOrderInput | SortOrder
    rt?: SortOrder
    rw?: SortOrder
    kecamatan?: SortOrder
    kelurahan?: SortOrder
    locked_status?: SortOrder
    jenis_pekerjaan?: SortOrderInput | SortOrder
    jenis_produk?: SortOrderInput | SortOrder
    user_id?: SortOrder
    _relevance?: nd_customerOrderByRelevanceInput
  }

  export type nd_customerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nd_customerWhereInput | nd_customerWhereInput[]
    OR?: nd_customerWhereInput[]
    NOT?: nd_customerWhereInput | nd_customerWhereInput[]
    customer_type_id?: BoolFilter<"nd_customer"> | boolean
    nama?: StringNullableFilter<"nd_customer"> | string | null
    alias?: StringFilter<"nd_customer"> | string
    alamat?: StringNullableFilter<"nd_customer"> | string | null
    telepon?: StringNullableFilter<"nd_customer"> | string | null
    telepon1?: StringNullableFilter<"nd_customer"> | string | null
    telepon2?: StringNullableFilter<"nd_customer"> | string | null
    npwp?: StringNullableFilter<"nd_customer"> | string | null
    nik?: StringNullableFilter<"nd_customer"> | string | null
    kota?: StringNullableFilter<"nd_customer"> | string | null
    provinsi?: StringNullableFilter<"nd_customer"> | string | null
    kode_pos?: StringNullableFilter<"nd_customer"> | string | null
    email?: StringNullableFilter<"nd_customer"> | string | null
    contact_person?: StringFilter<"nd_customer"> | string
    tempo_kredit?: IntNullableFilter<"nd_customer"> | number | null
    warning_kredit?: IntNullableFilter<"nd_customer"> | number | null
    limit_warning_type?: IntNullableFilter<"nd_customer"> | number | null
    limit_amount?: IntNullableFilter<"nd_customer"> | number | null
    limit_atas?: IntNullableFilter<"nd_customer"> | number | null
    limit_warning_amount?: IntNullableFilter<"nd_customer"> | number | null
    status_aktif?: BoolFilter<"nd_customer"> | boolean
    img_link?: StringNullableFilter<"nd_customer"> | string | null
    npwp_link?: StringNullableFilter<"nd_customer"> | string | null
    ktp_link?: StringNullableFilter<"nd_customer"> | string | null
    medsos_link?: StringNullableFilter<"nd_customer"> | string | null
    updated_at?: DateTimeFilter<"nd_customer"> | Date | string
    tipe_company?: StringNullableFilter<"nd_customer"> | string | null
    blok?: StringFilter<"nd_customer"> | string
    no?: StringNullableFilter<"nd_customer"> | string | null
    rt?: StringFilter<"nd_customer"> | string
    rw?: StringFilter<"nd_customer"> | string
    kecamatan?: StringFilter<"nd_customer"> | string
    kelurahan?: StringFilter<"nd_customer"> | string
    locked_status?: BoolFilter<"nd_customer"> | boolean
    jenis_pekerjaan?: StringNullableFilter<"nd_customer"> | string | null
    jenis_produk?: StringNullableFilter<"nd_customer"> | string | null
    user_id?: IntFilter<"nd_customer"> | number
  }, "id">

  export type nd_customerOrderByWithAggregationInput = {
    id?: SortOrder
    customer_type_id?: SortOrder
    nama?: SortOrderInput | SortOrder
    alias?: SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    telepon1?: SortOrderInput | SortOrder
    telepon2?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    provinsi?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    contact_person?: SortOrder
    tempo_kredit?: SortOrderInput | SortOrder
    warning_kredit?: SortOrderInput | SortOrder
    limit_warning_type?: SortOrderInput | SortOrder
    limit_amount?: SortOrderInput | SortOrder
    limit_atas?: SortOrderInput | SortOrder
    limit_warning_amount?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    img_link?: SortOrderInput | SortOrder
    npwp_link?: SortOrderInput | SortOrder
    ktp_link?: SortOrderInput | SortOrder
    medsos_link?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    tipe_company?: SortOrderInput | SortOrder
    blok?: SortOrder
    no?: SortOrderInput | SortOrder
    rt?: SortOrder
    rw?: SortOrder
    kecamatan?: SortOrder
    kelurahan?: SortOrder
    locked_status?: SortOrder
    jenis_pekerjaan?: SortOrderInput | SortOrder
    jenis_produk?: SortOrderInput | SortOrder
    user_id?: SortOrder
    _count?: nd_customerCountOrderByAggregateInput
    _avg?: nd_customerAvgOrderByAggregateInput
    _max?: nd_customerMaxOrderByAggregateInput
    _min?: nd_customerMinOrderByAggregateInput
    _sum?: nd_customerSumOrderByAggregateInput
  }

  export type nd_customerScalarWhereWithAggregatesInput = {
    AND?: nd_customerScalarWhereWithAggregatesInput | nd_customerScalarWhereWithAggregatesInput[]
    OR?: nd_customerScalarWhereWithAggregatesInput[]
    NOT?: nd_customerScalarWhereWithAggregatesInput | nd_customerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_customer"> | number
    customer_type_id?: BoolWithAggregatesFilter<"nd_customer"> | boolean
    nama?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    alias?: StringWithAggregatesFilter<"nd_customer"> | string
    alamat?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    telepon?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    telepon1?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    telepon2?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    npwp?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    nik?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    kota?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    provinsi?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    kode_pos?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    email?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    contact_person?: StringWithAggregatesFilter<"nd_customer"> | string
    tempo_kredit?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    warning_kredit?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    limit_warning_type?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    limit_amount?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    limit_atas?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    limit_warning_amount?: IntNullableWithAggregatesFilter<"nd_customer"> | number | null
    status_aktif?: BoolWithAggregatesFilter<"nd_customer"> | boolean
    img_link?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    npwp_link?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    ktp_link?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    medsos_link?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"nd_customer"> | Date | string
    tipe_company?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    blok?: StringWithAggregatesFilter<"nd_customer"> | string
    no?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    rt?: StringWithAggregatesFilter<"nd_customer"> | string
    rw?: StringWithAggregatesFilter<"nd_customer"> | string
    kecamatan?: StringWithAggregatesFilter<"nd_customer"> | string
    kelurahan?: StringWithAggregatesFilter<"nd_customer"> | string
    locked_status?: BoolWithAggregatesFilter<"nd_customer"> | boolean
    jenis_pekerjaan?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    jenis_produk?: StringNullableWithAggregatesFilter<"nd_customer"> | string | null
    user_id?: IntWithAggregatesFilter<"nd_customer"> | number
  }

  export type nd_departmentWhereInput = {
    AND?: nd_departmentWhereInput | nd_departmentWhereInput[]
    OR?: nd_departmentWhereInput[]
    NOT?: nd_departmentWhereInput | nd_departmentWhereInput[]
    id?: IntFilter<"nd_department"> | number
    kode?: StringFilter<"nd_department"> | string
    nama?: StringFilter<"nd_department"> | string
    status_aktif?: IntFilter<"nd_department"> | number
    created_at?: DateTimeFilter<"nd_department"> | Date | string
    updated_at?: DateTimeFilter<"nd_department"> | Date | string
  }

  export type nd_departmentOrderByWithRelationInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: nd_departmentOrderByRelevanceInput
  }

  export type nd_departmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    kode_nama?: nd_departmentKodeNamaCompoundUniqueInput
    AND?: nd_departmentWhereInput | nd_departmentWhereInput[]
    OR?: nd_departmentWhereInput[]
    NOT?: nd_departmentWhereInput | nd_departmentWhereInput[]
    kode?: StringFilter<"nd_department"> | string
    nama?: StringFilter<"nd_department"> | string
    status_aktif?: IntFilter<"nd_department"> | number
    created_at?: DateTimeFilter<"nd_department"> | Date | string
    updated_at?: DateTimeFilter<"nd_department"> | Date | string
  }, "id" | "kode_nama">

  export type nd_departmentOrderByWithAggregationInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_departmentCountOrderByAggregateInput
    _avg?: nd_departmentAvgOrderByAggregateInput
    _max?: nd_departmentMaxOrderByAggregateInput
    _min?: nd_departmentMinOrderByAggregateInput
    _sum?: nd_departmentSumOrderByAggregateInput
  }

  export type nd_departmentScalarWhereWithAggregatesInput = {
    AND?: nd_departmentScalarWhereWithAggregatesInput | nd_departmentScalarWhereWithAggregatesInput[]
    OR?: nd_departmentScalarWhereWithAggregatesInput[]
    NOT?: nd_departmentScalarWhereWithAggregatesInput | nd_departmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_department"> | number
    kode?: StringWithAggregatesFilter<"nd_department"> | string
    nama?: StringWithAggregatesFilter<"nd_department"> | string
    status_aktif?: IntWithAggregatesFilter<"nd_department"> | number
    created_at?: DateTimeWithAggregatesFilter<"nd_department"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_department"> | Date | string
  }

  export type nd_documentWhereInput = {
    AND?: nd_documentWhereInput | nd_documentWhereInput[]
    OR?: nd_documentWhereInput[]
    NOT?: nd_documentWhereInput | nd_documentWhereInput[]
    id?: IntFilter<"nd_document"> | number
    toko_id?: IntFilter<"nd_document"> | number
    tanggal?: DateTimeNullableFilter<"nd_document"> | Date | string | null
    document_control_id?: IntFilter<"nd_document"> | number
    document_number_raw?: IntNullableFilter<"nd_document"> | number | null
    document_number?: StringNullableFilter<"nd_document"> | string | null
    document_status?: StringFilter<"nd_document"> | string
    judul?: StringFilter<"nd_document"> | string
    dari?: StringFilter<"nd_document"> | string
    kepada?: StringFilter<"nd_document"> | string
    keterangan?: StringFilter<"nd_document"> | string
    penanggung_jawab?: StringFilter<"nd_document"> | string
    username?: StringFilter<"nd_document"> | string
    status_aktif?: IntFilter<"nd_document"> | number
  }

  export type nd_documentOrderByWithRelationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    tanggal?: SortOrderInput | SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrderInput | SortOrder
    document_number?: SortOrderInput | SortOrder
    document_status?: SortOrder
    judul?: SortOrder
    dari?: SortOrder
    kepada?: SortOrder
    keterangan?: SortOrder
    penanggung_jawab?: SortOrder
    username?: SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_documentOrderByRelevanceInput
  }

  export type nd_documentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nd_documentWhereInput | nd_documentWhereInput[]
    OR?: nd_documentWhereInput[]
    NOT?: nd_documentWhereInput | nd_documentWhereInput[]
    toko_id?: IntFilter<"nd_document"> | number
    tanggal?: DateTimeNullableFilter<"nd_document"> | Date | string | null
    document_control_id?: IntFilter<"nd_document"> | number
    document_number_raw?: IntNullableFilter<"nd_document"> | number | null
    document_number?: StringNullableFilter<"nd_document"> | string | null
    document_status?: StringFilter<"nd_document"> | string
    judul?: StringFilter<"nd_document"> | string
    dari?: StringFilter<"nd_document"> | string
    kepada?: StringFilter<"nd_document"> | string
    keterangan?: StringFilter<"nd_document"> | string
    penanggung_jawab?: StringFilter<"nd_document"> | string
    username?: StringFilter<"nd_document"> | string
    status_aktif?: IntFilter<"nd_document"> | number
  }, "id">

  export type nd_documentOrderByWithAggregationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    tanggal?: SortOrderInput | SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrderInput | SortOrder
    document_number?: SortOrderInput | SortOrder
    document_status?: SortOrder
    judul?: SortOrder
    dari?: SortOrder
    kepada?: SortOrder
    keterangan?: SortOrder
    penanggung_jawab?: SortOrder
    username?: SortOrder
    status_aktif?: SortOrder
    _count?: nd_documentCountOrderByAggregateInput
    _avg?: nd_documentAvgOrderByAggregateInput
    _max?: nd_documentMaxOrderByAggregateInput
    _min?: nd_documentMinOrderByAggregateInput
    _sum?: nd_documentSumOrderByAggregateInput
  }

  export type nd_documentScalarWhereWithAggregatesInput = {
    AND?: nd_documentScalarWhereWithAggregatesInput | nd_documentScalarWhereWithAggregatesInput[]
    OR?: nd_documentScalarWhereWithAggregatesInput[]
    NOT?: nd_documentScalarWhereWithAggregatesInput | nd_documentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_document"> | number
    toko_id?: IntWithAggregatesFilter<"nd_document"> | number
    tanggal?: DateTimeNullableWithAggregatesFilter<"nd_document"> | Date | string | null
    document_control_id?: IntWithAggregatesFilter<"nd_document"> | number
    document_number_raw?: IntNullableWithAggregatesFilter<"nd_document"> | number | null
    document_number?: StringNullableWithAggregatesFilter<"nd_document"> | string | null
    document_status?: StringWithAggregatesFilter<"nd_document"> | string
    judul?: StringWithAggregatesFilter<"nd_document"> | string
    dari?: StringWithAggregatesFilter<"nd_document"> | string
    kepada?: StringWithAggregatesFilter<"nd_document"> | string
    keterangan?: StringWithAggregatesFilter<"nd_document"> | string
    penanggung_jawab?: StringWithAggregatesFilter<"nd_document"> | string
    username?: StringWithAggregatesFilter<"nd_document"> | string
    status_aktif?: IntWithAggregatesFilter<"nd_document"> | number
  }

  export type nd_document_controlWhereInput = {
    AND?: nd_document_controlWhereInput | nd_document_controlWhereInput[]
    OR?: nd_document_controlWhereInput[]
    NOT?: nd_document_controlWhereInput | nd_document_controlWhereInput[]
    id?: IntFilter<"nd_document_control"> | number
    department_id?: IntFilter<"nd_document_control"> | number
    tipe_dokumen?: StringNullableFilter<"nd_document_control"> | string | null
    no_kode?: IntNullableFilter<"nd_document_control"> | number | null
    kode?: StringFilter<"nd_document_control"> | string
    nama?: StringFilter<"nd_document_control"> | string
    keterangan?: StringNullableFilter<"nd_document_control"> | string | null
    status_aktif?: IntFilter<"nd_document_control"> | number
    created_at?: DateTimeFilter<"nd_document_control"> | Date | string
    updated_at?: DateTimeFilter<"nd_document_control"> | Date | string
  }

  export type nd_document_controlOrderByWithRelationInput = {
    id?: SortOrder
    department_id?: SortOrder
    tipe_dokumen?: SortOrderInput | SortOrder
    no_kode?: SortOrderInput | SortOrder
    kode?: SortOrder
    nama?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: nd_document_controlOrderByRelevanceInput
  }

  export type nd_document_controlWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    kode_nama?: nd_document_controlKodeNamaCompoundUniqueInput
    AND?: nd_document_controlWhereInput | nd_document_controlWhereInput[]
    OR?: nd_document_controlWhereInput[]
    NOT?: nd_document_controlWhereInput | nd_document_controlWhereInput[]
    department_id?: IntFilter<"nd_document_control"> | number
    tipe_dokumen?: StringNullableFilter<"nd_document_control"> | string | null
    no_kode?: IntNullableFilter<"nd_document_control"> | number | null
    kode?: StringFilter<"nd_document_control"> | string
    nama?: StringFilter<"nd_document_control"> | string
    keterangan?: StringNullableFilter<"nd_document_control"> | string | null
    status_aktif?: IntFilter<"nd_document_control"> | number
    created_at?: DateTimeFilter<"nd_document_control"> | Date | string
    updated_at?: DateTimeFilter<"nd_document_control"> | Date | string
  }, "id" | "kode_nama">

  export type nd_document_controlOrderByWithAggregationInput = {
    id?: SortOrder
    department_id?: SortOrder
    tipe_dokumen?: SortOrderInput | SortOrder
    no_kode?: SortOrderInput | SortOrder
    kode?: SortOrder
    nama?: SortOrder
    keterangan?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_document_controlCountOrderByAggregateInput
    _avg?: nd_document_controlAvgOrderByAggregateInput
    _max?: nd_document_controlMaxOrderByAggregateInput
    _min?: nd_document_controlMinOrderByAggregateInput
    _sum?: nd_document_controlSumOrderByAggregateInput
  }

  export type nd_document_controlScalarWhereWithAggregatesInput = {
    AND?: nd_document_controlScalarWhereWithAggregatesInput | nd_document_controlScalarWhereWithAggregatesInput[]
    OR?: nd_document_controlScalarWhereWithAggregatesInput[]
    NOT?: nd_document_controlScalarWhereWithAggregatesInput | nd_document_controlScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_document_control"> | number
    department_id?: IntWithAggregatesFilter<"nd_document_control"> | number
    tipe_dokumen?: StringNullableWithAggregatesFilter<"nd_document_control"> | string | null
    no_kode?: IntNullableWithAggregatesFilter<"nd_document_control"> | number | null
    kode?: StringWithAggregatesFilter<"nd_document_control"> | string
    nama?: StringWithAggregatesFilter<"nd_document_control"> | string
    keterangan?: StringNullableWithAggregatesFilter<"nd_document_control"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_document_control"> | number
    created_at?: DateTimeWithAggregatesFilter<"nd_document_control"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_document_control"> | Date | string
  }

  export type nd_gudangWhereInput = {
    AND?: nd_gudangWhereInput | nd_gudangWhereInput[]
    OR?: nd_gudangWhereInput[]
    NOT?: nd_gudangWhereInput | nd_gudangWhereInput[]
    id?: IntFilter<"nd_gudang"> | number
    nama?: StringNullableFilter<"nd_gudang"> | string | null
    lokasi?: StringNullableFilter<"nd_gudang"> | string | null
    status_default?: IntFilter<"nd_gudang"> | number
    visible?: BoolFilter<"nd_gudang"> | boolean
    gudang_group_id?: IntNullableFilter<"nd_gudang"> | number | null
    urutan?: IntFilter<"nd_gudang"> | number
    status_aktif?: IntFilter<"nd_gudang"> | number
  }

  export type nd_gudangOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    lokasi?: SortOrderInput | SortOrder
    status_default?: SortOrder
    visible?: SortOrder
    gudang_group_id?: SortOrderInput | SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_gudangOrderByRelevanceInput
  }

  export type nd_gudangWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    AND?: nd_gudangWhereInput | nd_gudangWhereInput[]
    OR?: nd_gudangWhereInput[]
    NOT?: nd_gudangWhereInput | nd_gudangWhereInput[]
    lokasi?: StringNullableFilter<"nd_gudang"> | string | null
    status_default?: IntFilter<"nd_gudang"> | number
    visible?: BoolFilter<"nd_gudang"> | boolean
    gudang_group_id?: IntNullableFilter<"nd_gudang"> | number | null
    urutan?: IntFilter<"nd_gudang"> | number
    status_aktif?: IntFilter<"nd_gudang"> | number
  }, "id" | "nama">

  export type nd_gudangOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    lokasi?: SortOrderInput | SortOrder
    status_default?: SortOrder
    visible?: SortOrder
    gudang_group_id?: SortOrderInput | SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
    _count?: nd_gudangCountOrderByAggregateInput
    _avg?: nd_gudangAvgOrderByAggregateInput
    _max?: nd_gudangMaxOrderByAggregateInput
    _min?: nd_gudangMinOrderByAggregateInput
    _sum?: nd_gudangSumOrderByAggregateInput
  }

  export type nd_gudangScalarWhereWithAggregatesInput = {
    AND?: nd_gudangScalarWhereWithAggregatesInput | nd_gudangScalarWhereWithAggregatesInput[]
    OR?: nd_gudangScalarWhereWithAggregatesInput[]
    NOT?: nd_gudangScalarWhereWithAggregatesInput | nd_gudangScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_gudang"> | number
    nama?: StringNullableWithAggregatesFilter<"nd_gudang"> | string | null
    lokasi?: StringNullableWithAggregatesFilter<"nd_gudang"> | string | null
    status_default?: IntWithAggregatesFilter<"nd_gudang"> | number
    visible?: BoolWithAggregatesFilter<"nd_gudang"> | boolean
    gudang_group_id?: IntNullableWithAggregatesFilter<"nd_gudang"> | number | null
    urutan?: IntWithAggregatesFilter<"nd_gudang"> | number
    status_aktif?: IntWithAggregatesFilter<"nd_gudang"> | number
  }

  export type nd_posisiWhereInput = {
    AND?: nd_posisiWhereInput | nd_posisiWhereInput[]
    OR?: nd_posisiWhereInput[]
    NOT?: nd_posisiWhereInput | nd_posisiWhereInput[]
    id?: IntFilter<"nd_posisi"> | number
    name?: StringNullableFilter<"nd_posisi"> | string | null
    nd_user?: Nd_userListRelationFilter
  }

  export type nd_posisiOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    nd_user?: nd_userOrderByRelationAggregateInput
    _relevance?: nd_posisiOrderByRelevanceInput
  }

  export type nd_posisiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nd_posisiWhereInput | nd_posisiWhereInput[]
    OR?: nd_posisiWhereInput[]
    NOT?: nd_posisiWhereInput | nd_posisiWhereInput[]
    name?: StringNullableFilter<"nd_posisi"> | string | null
    nd_user?: Nd_userListRelationFilter
  }, "id">

  export type nd_posisiOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    _count?: nd_posisiCountOrderByAggregateInput
    _avg?: nd_posisiAvgOrderByAggregateInput
    _max?: nd_posisiMaxOrderByAggregateInput
    _min?: nd_posisiMinOrderByAggregateInput
    _sum?: nd_posisiSumOrderByAggregateInput
  }

  export type nd_posisiScalarWhereWithAggregatesInput = {
    AND?: nd_posisiScalarWhereWithAggregatesInput | nd_posisiScalarWhereWithAggregatesInput[]
    OR?: nd_posisiScalarWhereWithAggregatesInput[]
    NOT?: nd_posisiScalarWhereWithAggregatesInput | nd_posisiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_posisi"> | number
    name?: StringNullableWithAggregatesFilter<"nd_posisi"> | string | null
  }

  export type nd_satuanWhereInput = {
    AND?: nd_satuanWhereInput | nd_satuanWhereInput[]
    OR?: nd_satuanWhereInput[]
    NOT?: nd_satuanWhereInput | nd_satuanWhereInput[]
    id?: IntFilter<"nd_satuan"> | number
    nama?: StringNullableFilter<"nd_satuan"> | string | null
    status_aktif?: IntNullableFilter<"nd_satuan"> | number | null
    nd_barang?: Nd_barangListRelationFilter
  }

  export type nd_satuanOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    nd_barang?: nd_barangOrderByRelationAggregateInput
    _relevance?: nd_satuanOrderByRelevanceInput
  }

  export type nd_satuanWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    AND?: nd_satuanWhereInput | nd_satuanWhereInput[]
    OR?: nd_satuanWhereInput[]
    NOT?: nd_satuanWhereInput | nd_satuanWhereInput[]
    status_aktif?: IntNullableFilter<"nd_satuan"> | number | null
    nd_barang?: Nd_barangListRelationFilter
  }, "id" | "nama">

  export type nd_satuanOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    _count?: nd_satuanCountOrderByAggregateInput
    _avg?: nd_satuanAvgOrderByAggregateInput
    _max?: nd_satuanMaxOrderByAggregateInput
    _min?: nd_satuanMinOrderByAggregateInput
    _sum?: nd_satuanSumOrderByAggregateInput
  }

  export type nd_satuanScalarWhereWithAggregatesInput = {
    AND?: nd_satuanScalarWhereWithAggregatesInput | nd_satuanScalarWhereWithAggregatesInput[]
    OR?: nd_satuanScalarWhereWithAggregatesInput[]
    NOT?: nd_satuanScalarWhereWithAggregatesInput | nd_satuanScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_satuan"> | number
    nama?: StringNullableWithAggregatesFilter<"nd_satuan"> | string | null
    status_aktif?: IntNullableWithAggregatesFilter<"nd_satuan"> | number | null
  }

  export type nd_supplierWhereInput = {
    AND?: nd_supplierWhereInput | nd_supplierWhereInput[]
    OR?: nd_supplierWhereInput[]
    NOT?: nd_supplierWhereInput | nd_supplierWhereInput[]
    id?: IntFilter<"nd_supplier"> | number
    kode?: StringNullableFilter<"nd_supplier"> | string | null
    nama?: StringNullableFilter<"nd_supplier"> | string | null
    alamat?: StringNullableFilter<"nd_supplier"> | string | null
    telepon?: StringNullableFilter<"nd_supplier"> | string | null
    kota?: StringNullableFilter<"nd_supplier"> | string | null
    fax?: StringNullableFilter<"nd_supplier"> | string | null
    kode_pos?: StringNullableFilter<"nd_supplier"> | string | null
    nama_bank?: StringNullableFilter<"nd_supplier"> | string | null
    no_rek_bank?: StringNullableFilter<"nd_supplier"> | string | null
    email?: StringNullableFilter<"nd_supplier"> | string | null
    website?: StringNullableFilter<"nd_supplier"> | string | null
    status_aktif?: IntFilter<"nd_supplier"> | number
  }

  export type nd_supplierOrderByWithRelationInput = {
    id?: SortOrder
    kode?: SortOrderInput | SortOrder
    nama?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    nama_bank?: SortOrderInput | SortOrder
    no_rek_bank?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_supplierOrderByRelevanceInput
  }

  export type nd_supplierWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    kode?: string
    nama?: string
    AND?: nd_supplierWhereInput | nd_supplierWhereInput[]
    OR?: nd_supplierWhereInput[]
    NOT?: nd_supplierWhereInput | nd_supplierWhereInput[]
    alamat?: StringNullableFilter<"nd_supplier"> | string | null
    telepon?: StringNullableFilter<"nd_supplier"> | string | null
    kota?: StringNullableFilter<"nd_supplier"> | string | null
    fax?: StringNullableFilter<"nd_supplier"> | string | null
    kode_pos?: StringNullableFilter<"nd_supplier"> | string | null
    nama_bank?: StringNullableFilter<"nd_supplier"> | string | null
    no_rek_bank?: StringNullableFilter<"nd_supplier"> | string | null
    email?: StringNullableFilter<"nd_supplier"> | string | null
    website?: StringNullableFilter<"nd_supplier"> | string | null
    status_aktif?: IntFilter<"nd_supplier"> | number
  }, "id" | "kode" | "nama">

  export type nd_supplierOrderByWithAggregationInput = {
    id?: SortOrder
    kode?: SortOrderInput | SortOrder
    nama?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    nama_bank?: SortOrderInput | SortOrder
    no_rek_bank?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_supplierCountOrderByAggregateInput
    _avg?: nd_supplierAvgOrderByAggregateInput
    _max?: nd_supplierMaxOrderByAggregateInput
    _min?: nd_supplierMinOrderByAggregateInput
    _sum?: nd_supplierSumOrderByAggregateInput
  }

  export type nd_supplierScalarWhereWithAggregatesInput = {
    AND?: nd_supplierScalarWhereWithAggregatesInput | nd_supplierScalarWhereWithAggregatesInput[]
    OR?: nd_supplierScalarWhereWithAggregatesInput[]
    NOT?: nd_supplierScalarWhereWithAggregatesInput | nd_supplierScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_supplier"> | number
    kode?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    nama?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    alamat?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    telepon?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    kota?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    fax?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    kode_pos?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    nama_bank?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    no_rek_bank?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    email?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    website?: StringNullableWithAggregatesFilter<"nd_supplier"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_supplier"> | number
  }

  export type nd_tokoWhereInput = {
    AND?: nd_tokoWhereInput | nd_tokoWhereInput[]
    OR?: nd_tokoWhereInput[]
    NOT?: nd_tokoWhereInput | nd_tokoWhereInput[]
    id?: IntFilter<"nd_toko"> | number
    nama?: StringNullableFilter<"nd_toko"> | string | null
    alias?: StringFilter<"nd_toko"> | string
    alamat?: StringNullableFilter<"nd_toko"> | string | null
    telepon?: StringNullableFilter<"nd_toko"> | string | null
    email?: StringNullableFilter<"nd_toko"> | string | null
    fax?: StringNullableFilter<"nd_toko"> | string | null
    kota?: StringNullableFilter<"nd_toko"> | string | null
    kode_pos?: StringNullableFilter<"nd_toko"> | string | null
    NPWP?: StringNullableFilter<"nd_toko"> | string | null
    pre_faktur?: StringNullableFilter<"nd_toko"> | string | null
    kode_toko?: StringNullableFilter<"nd_toko"> | string | null
    status_aktif?: IntFilter<"nd_toko"> | number
    nama_domain?: StringNullableFilter<"nd_toko"> | string | null
    email_pajak?: StringNullableFilter<"nd_toko"> | string | null
    index?: IntNullableFilter<"nd_toko"> | number | null
  }

  export type nd_tokoOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    alias?: SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    NPWP?: SortOrderInput | SortOrder
    pre_faktur?: SortOrderInput | SortOrder
    kode_toko?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    nama_domain?: SortOrderInput | SortOrder
    email_pajak?: SortOrderInput | SortOrder
    index?: SortOrderInput | SortOrder
    _relevance?: nd_tokoOrderByRelevanceInput
  }

  export type nd_tokoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    alias?: string
    NPWP?: string
    kode_toko?: string
    AND?: nd_tokoWhereInput | nd_tokoWhereInput[]
    OR?: nd_tokoWhereInput[]
    NOT?: nd_tokoWhereInput | nd_tokoWhereInput[]
    alamat?: StringNullableFilter<"nd_toko"> | string | null
    telepon?: StringNullableFilter<"nd_toko"> | string | null
    email?: StringNullableFilter<"nd_toko"> | string | null
    fax?: StringNullableFilter<"nd_toko"> | string | null
    kota?: StringNullableFilter<"nd_toko"> | string | null
    kode_pos?: StringNullableFilter<"nd_toko"> | string | null
    pre_faktur?: StringNullableFilter<"nd_toko"> | string | null
    status_aktif?: IntFilter<"nd_toko"> | number
    nama_domain?: StringNullableFilter<"nd_toko"> | string | null
    email_pajak?: StringNullableFilter<"nd_toko"> | string | null
    index?: IntNullableFilter<"nd_toko"> | number | null
  }, "id" | "nama" | "alias" | "NPWP" | "kode_toko">

  export type nd_tokoOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrderInput | SortOrder
    alias?: SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    fax?: SortOrderInput | SortOrder
    kota?: SortOrderInput | SortOrder
    kode_pos?: SortOrderInput | SortOrder
    NPWP?: SortOrderInput | SortOrder
    pre_faktur?: SortOrderInput | SortOrder
    kode_toko?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    nama_domain?: SortOrderInput | SortOrder
    email_pajak?: SortOrderInput | SortOrder
    index?: SortOrderInput | SortOrder
    _count?: nd_tokoCountOrderByAggregateInput
    _avg?: nd_tokoAvgOrderByAggregateInput
    _max?: nd_tokoMaxOrderByAggregateInput
    _min?: nd_tokoMinOrderByAggregateInput
    _sum?: nd_tokoSumOrderByAggregateInput
  }

  export type nd_tokoScalarWhereWithAggregatesInput = {
    AND?: nd_tokoScalarWhereWithAggregatesInput | nd_tokoScalarWhereWithAggregatesInput[]
    OR?: nd_tokoScalarWhereWithAggregatesInput[]
    NOT?: nd_tokoScalarWhereWithAggregatesInput | nd_tokoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_toko"> | number
    nama?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    alias?: StringWithAggregatesFilter<"nd_toko"> | string
    alamat?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    telepon?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    email?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    fax?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    kota?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    kode_pos?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    NPWP?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    pre_faktur?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    kode_toko?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_toko"> | number
    nama_domain?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    email_pajak?: StringNullableWithAggregatesFilter<"nd_toko"> | string | null
    index?: IntNullableWithAggregatesFilter<"nd_toko"> | number | null
  }

  export type nd_toko_barang_assignmentWhereInput = {
    AND?: nd_toko_barang_assignmentWhereInput | nd_toko_barang_assignmentWhereInput[]
    OR?: nd_toko_barang_assignmentWhereInput[]
    NOT?: nd_toko_barang_assignmentWhereInput | nd_toko_barang_assignmentWhereInput[]
    id?: IntFilter<"nd_toko_barang_assignment"> | number
    toko_id?: IntFilter<"nd_toko_barang_assignment"> | number
    barang_id?: IntFilter<"nd_toko_barang_assignment"> | number
    is_synced?: IntFilter<"nd_toko_barang_assignment"> | number
    last_synced?: DateTimeNullableFilter<"nd_toko_barang_assignment"> | Date | string | null
    createdAt?: DateTimeFilter<"nd_toko_barang_assignment"> | Date | string
    updatedAt?: DateTimeFilter<"nd_toko_barang_assignment"> | Date | string
  }

  export type nd_toko_barang_assignmentOrderByWithRelationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
    last_synced?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type nd_toko_barang_assignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    toko_id_barang_id?: nd_toko_barang_assignmentToko_idBarang_idCompoundUniqueInput
    AND?: nd_toko_barang_assignmentWhereInput | nd_toko_barang_assignmentWhereInput[]
    OR?: nd_toko_barang_assignmentWhereInput[]
    NOT?: nd_toko_barang_assignmentWhereInput | nd_toko_barang_assignmentWhereInput[]
    toko_id?: IntFilter<"nd_toko_barang_assignment"> | number
    barang_id?: IntFilter<"nd_toko_barang_assignment"> | number
    is_synced?: IntFilter<"nd_toko_barang_assignment"> | number
    last_synced?: DateTimeNullableFilter<"nd_toko_barang_assignment"> | Date | string | null
    createdAt?: DateTimeFilter<"nd_toko_barang_assignment"> | Date | string
    updatedAt?: DateTimeFilter<"nd_toko_barang_assignment"> | Date | string
  }, "id" | "toko_id_barang_id">

  export type nd_toko_barang_assignmentOrderByWithAggregationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
    last_synced?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: nd_toko_barang_assignmentCountOrderByAggregateInput
    _avg?: nd_toko_barang_assignmentAvgOrderByAggregateInput
    _max?: nd_toko_barang_assignmentMaxOrderByAggregateInput
    _min?: nd_toko_barang_assignmentMinOrderByAggregateInput
    _sum?: nd_toko_barang_assignmentSumOrderByAggregateInput
  }

  export type nd_toko_barang_assignmentScalarWhereWithAggregatesInput = {
    AND?: nd_toko_barang_assignmentScalarWhereWithAggregatesInput | nd_toko_barang_assignmentScalarWhereWithAggregatesInput[]
    OR?: nd_toko_barang_assignmentScalarWhereWithAggregatesInput[]
    NOT?: nd_toko_barang_assignmentScalarWhereWithAggregatesInput | nd_toko_barang_assignmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_toko_barang_assignment"> | number
    toko_id?: IntWithAggregatesFilter<"nd_toko_barang_assignment"> | number
    barang_id?: IntWithAggregatesFilter<"nd_toko_barang_assignment"> | number
    is_synced?: IntWithAggregatesFilter<"nd_toko_barang_assignment"> | number
    last_synced?: DateTimeNullableWithAggregatesFilter<"nd_toko_barang_assignment"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"nd_toko_barang_assignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"nd_toko_barang_assignment"> | Date | string
  }

  export type nd_toko_userWhereInput = {
    AND?: nd_toko_userWhereInput | nd_toko_userWhereInput[]
    OR?: nd_toko_userWhereInput[]
    NOT?: nd_toko_userWhereInput | nd_toko_userWhereInput[]
    id?: IntFilter<"nd_toko_user"> | number
    toko_id?: IntFilter<"nd_toko_user"> | number
    user_id?: IntFilter<"nd_toko_user"> | number
    user_id_creator?: IntFilter<"nd_toko_user"> | number
    created_at?: DateTimeFilter<"nd_toko_user"> | Date | string
    updated_at?: DateTimeFilter<"nd_toko_user"> | Date | string
  }

  export type nd_toko_userOrderByWithRelationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_toko_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: nd_toko_userWhereInput | nd_toko_userWhereInput[]
    OR?: nd_toko_userWhereInput[]
    NOT?: nd_toko_userWhereInput | nd_toko_userWhereInput[]
    toko_id?: IntFilter<"nd_toko_user"> | number
    user_id?: IntFilter<"nd_toko_user"> | number
    user_id_creator?: IntFilter<"nd_toko_user"> | number
    created_at?: DateTimeFilter<"nd_toko_user"> | Date | string
    updated_at?: DateTimeFilter<"nd_toko_user"> | Date | string
  }, "id">

  export type nd_toko_userOrderByWithAggregationInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_toko_userCountOrderByAggregateInput
    _avg?: nd_toko_userAvgOrderByAggregateInput
    _max?: nd_toko_userMaxOrderByAggregateInput
    _min?: nd_toko_userMinOrderByAggregateInput
    _sum?: nd_toko_userSumOrderByAggregateInput
  }

  export type nd_toko_userScalarWhereWithAggregatesInput = {
    AND?: nd_toko_userScalarWhereWithAggregatesInput | nd_toko_userScalarWhereWithAggregatesInput[]
    OR?: nd_toko_userScalarWhereWithAggregatesInput[]
    NOT?: nd_toko_userScalarWhereWithAggregatesInput | nd_toko_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_toko_user"> | number
    toko_id?: IntWithAggregatesFilter<"nd_toko_user"> | number
    user_id?: IntWithAggregatesFilter<"nd_toko_user"> | number
    user_id_creator?: IntWithAggregatesFilter<"nd_toko_user"> | number
    created_at?: DateTimeWithAggregatesFilter<"nd_toko_user"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_toko_user"> | Date | string
  }

  export type nd_userWhereInput = {
    AND?: nd_userWhereInput | nd_userWhereInput[]
    OR?: nd_userWhereInput[]
    NOT?: nd_userWhereInput | nd_userWhereInput[]
    id?: IntFilter<"nd_user"> | number
    username?: StringNullableFilter<"nd_user"> | string | null
    password?: StringNullableFilter<"nd_user"> | string | null
    roles?: StringNullableFilter<"nd_user"> | string | null
    has_account?: IntFilter<"nd_user"> | number
    nama?: StringNullableFilter<"nd_user"> | string | null
    alamat?: StringNullableFilter<"nd_user"> | string | null
    telepon?: StringNullableFilter<"nd_user"> | string | null
    jenis_kelamin?: StringNullableFilter<"nd_user"> | string | null
    kota_lahir?: StringNullableFilter<"nd_user"> | string | null
    tgl_lahir?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    status_perkawinan?: StringNullableFilter<"nd_user"> | string | null
    jumlah_anak?: IntNullableFilter<"nd_user"> | number | null
    agama?: StringNullableFilter<"nd_user"> | string | null
    nik?: StringNullableFilter<"nd_user"> | string | null
    npwp?: StringNullableFilter<"nd_user"> | string | null
    profile_picture?: StringNullableFilter<"nd_user"> | string | null
    ktp_picture?: StringNullableFilter<"nd_user"> | string | null
    npwp_picture?: StringNullableFilter<"nd_user"> | string | null
    posisi_id?: IntNullableFilter<"nd_user"> | number | null
    time_start?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    time_end?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    printer_list_id?: IntNullableFilter<"nd_user"> | number | null
    status_aktif?: IntNullableFilter<"nd_user"> | number | null
    PIN?: StringNullableFilter<"nd_user"> | string | null
    created_at?: DateTimeFilter<"nd_user"> | Date | string
    updated_at?: DateTimeFilter<"nd_user"> | Date | string
    nd_posisi?: XOR<Nd_posisiNullableScalarRelationFilter, nd_posisiWhereInput> | null
  }

  export type nd_userOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    roles?: SortOrderInput | SortOrder
    has_account?: SortOrder
    nama?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    jenis_kelamin?: SortOrderInput | SortOrder
    kota_lahir?: SortOrderInput | SortOrder
    tgl_lahir?: SortOrderInput | SortOrder
    status_perkawinan?: SortOrderInput | SortOrder
    jumlah_anak?: SortOrderInput | SortOrder
    agama?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    profile_picture?: SortOrderInput | SortOrder
    ktp_picture?: SortOrderInput | SortOrder
    npwp_picture?: SortOrderInput | SortOrder
    posisi_id?: SortOrderInput | SortOrder
    time_start?: SortOrderInput | SortOrder
    time_end?: SortOrderInput | SortOrder
    printer_list_id?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    PIN?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nd_posisi?: nd_posisiOrderByWithRelationInput
    _relevance?: nd_userOrderByRelevanceInput
  }

  export type nd_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    username_nama?: nd_userUsernameNamaCompoundUniqueInput
    AND?: nd_userWhereInput | nd_userWhereInput[]
    OR?: nd_userWhereInput[]
    NOT?: nd_userWhereInput | nd_userWhereInput[]
    password?: StringNullableFilter<"nd_user"> | string | null
    roles?: StringNullableFilter<"nd_user"> | string | null
    has_account?: IntFilter<"nd_user"> | number
    nama?: StringNullableFilter<"nd_user"> | string | null
    alamat?: StringNullableFilter<"nd_user"> | string | null
    telepon?: StringNullableFilter<"nd_user"> | string | null
    jenis_kelamin?: StringNullableFilter<"nd_user"> | string | null
    kota_lahir?: StringNullableFilter<"nd_user"> | string | null
    tgl_lahir?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    status_perkawinan?: StringNullableFilter<"nd_user"> | string | null
    jumlah_anak?: IntNullableFilter<"nd_user"> | number | null
    agama?: StringNullableFilter<"nd_user"> | string | null
    nik?: StringNullableFilter<"nd_user"> | string | null
    npwp?: StringNullableFilter<"nd_user"> | string | null
    profile_picture?: StringNullableFilter<"nd_user"> | string | null
    ktp_picture?: StringNullableFilter<"nd_user"> | string | null
    npwp_picture?: StringNullableFilter<"nd_user"> | string | null
    posisi_id?: IntNullableFilter<"nd_user"> | number | null
    time_start?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    time_end?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    printer_list_id?: IntNullableFilter<"nd_user"> | number | null
    status_aktif?: IntNullableFilter<"nd_user"> | number | null
    PIN?: StringNullableFilter<"nd_user"> | string | null
    created_at?: DateTimeFilter<"nd_user"> | Date | string
    updated_at?: DateTimeFilter<"nd_user"> | Date | string
    nd_posisi?: XOR<Nd_posisiNullableScalarRelationFilter, nd_posisiWhereInput> | null
  }, "id" | "username" | "username_nama">

  export type nd_userOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    roles?: SortOrderInput | SortOrder
    has_account?: SortOrder
    nama?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    telepon?: SortOrderInput | SortOrder
    jenis_kelamin?: SortOrderInput | SortOrder
    kota_lahir?: SortOrderInput | SortOrder
    tgl_lahir?: SortOrderInput | SortOrder
    status_perkawinan?: SortOrderInput | SortOrder
    jumlah_anak?: SortOrderInput | SortOrder
    agama?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    npwp?: SortOrderInput | SortOrder
    profile_picture?: SortOrderInput | SortOrder
    ktp_picture?: SortOrderInput | SortOrder
    npwp_picture?: SortOrderInput | SortOrder
    posisi_id?: SortOrderInput | SortOrder
    time_start?: SortOrderInput | SortOrder
    time_end?: SortOrderInput | SortOrder
    printer_list_id?: SortOrderInput | SortOrder
    status_aktif?: SortOrderInput | SortOrder
    PIN?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: nd_userCountOrderByAggregateInput
    _avg?: nd_userAvgOrderByAggregateInput
    _max?: nd_userMaxOrderByAggregateInput
    _min?: nd_userMinOrderByAggregateInput
    _sum?: nd_userSumOrderByAggregateInput
  }

  export type nd_userScalarWhereWithAggregatesInput = {
    AND?: nd_userScalarWhereWithAggregatesInput | nd_userScalarWhereWithAggregatesInput[]
    OR?: nd_userScalarWhereWithAggregatesInput[]
    NOT?: nd_userScalarWhereWithAggregatesInput | nd_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_user"> | number
    username?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    password?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    roles?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    has_account?: IntWithAggregatesFilter<"nd_user"> | number
    nama?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    alamat?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    telepon?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    jenis_kelamin?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    kota_lahir?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    tgl_lahir?: DateTimeNullableWithAggregatesFilter<"nd_user"> | Date | string | null
    status_perkawinan?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    jumlah_anak?: IntNullableWithAggregatesFilter<"nd_user"> | number | null
    agama?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    nik?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    npwp?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    profile_picture?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    ktp_picture?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    npwp_picture?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    posisi_id?: IntNullableWithAggregatesFilter<"nd_user"> | number | null
    time_start?: DateTimeNullableWithAggregatesFilter<"nd_user"> | Date | string | null
    time_end?: DateTimeNullableWithAggregatesFilter<"nd_user"> | Date | string | null
    printer_list_id?: IntNullableWithAggregatesFilter<"nd_user"> | number | null
    status_aktif?: IntNullableWithAggregatesFilter<"nd_user"> | number | null
    PIN?: StringNullableWithAggregatesFilter<"nd_user"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"nd_user"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"nd_user"> | Date | string
  }

  export type nd_warnaWhereInput = {
    AND?: nd_warnaWhereInput | nd_warnaWhereInput[]
    OR?: nd_warnaWhereInput[]
    NOT?: nd_warnaWhereInput | nd_warnaWhereInput[]
    id?: IntFilter<"nd_warna"> | number
    warna_beli?: StringNullableFilter<"nd_warna"> | string | null
    warna_jual?: StringNullableFilter<"nd_warna"> | string | null
    kode_warna?: StringNullableFilter<"nd_warna"> | string | null
    status_aktif?: IntFilter<"nd_warna"> | number
  }

  export type nd_warnaOrderByWithRelationInput = {
    id?: SortOrder
    warna_beli?: SortOrderInput | SortOrder
    warna_jual?: SortOrderInput | SortOrder
    kode_warna?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _relevance?: nd_warnaOrderByRelevanceInput
  }

  export type nd_warnaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    warna_jual?: string
    AND?: nd_warnaWhereInput | nd_warnaWhereInput[]
    OR?: nd_warnaWhereInput[]
    NOT?: nd_warnaWhereInput | nd_warnaWhereInput[]
    warna_beli?: StringNullableFilter<"nd_warna"> | string | null
    kode_warna?: StringNullableFilter<"nd_warna"> | string | null
    status_aktif?: IntFilter<"nd_warna"> | number
  }, "id" | "warna_jual">

  export type nd_warnaOrderByWithAggregationInput = {
    id?: SortOrder
    warna_beli?: SortOrderInput | SortOrder
    warna_jual?: SortOrderInput | SortOrder
    kode_warna?: SortOrderInput | SortOrder
    status_aktif?: SortOrder
    _count?: nd_warnaCountOrderByAggregateInput
    _avg?: nd_warnaAvgOrderByAggregateInput
    _max?: nd_warnaMaxOrderByAggregateInput
    _min?: nd_warnaMinOrderByAggregateInput
    _sum?: nd_warnaSumOrderByAggregateInput
  }

  export type nd_warnaScalarWhereWithAggregatesInput = {
    AND?: nd_warnaScalarWhereWithAggregatesInput | nd_warnaScalarWhereWithAggregatesInput[]
    OR?: nd_warnaScalarWhereWithAggregatesInput[]
    NOT?: nd_warnaScalarWhereWithAggregatesInput | nd_warnaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"nd_warna"> | number
    warna_beli?: StringNullableWithAggregatesFilter<"nd_warna"> | string | null
    warna_jual?: StringNullableWithAggregatesFilter<"nd_warna"> | string | null
    kode_warna?: StringNullableWithAggregatesFilter<"nd_warna"> | string | null
    status_aktif?: IntWithAggregatesFilter<"nd_warna"> | number
  }

  export type query_logWhereInput = {
    AND?: query_logWhereInput | query_logWhereInput[]
    OR?: query_logWhereInput[]
    NOT?: query_logWhereInput | query_logWhereInput[]
    id?: IntFilter<"query_log"> | number
    table_name?: StringFilter<"query_log"> | string
    affected_id?: IntFilter<"query_log"> | number
    query?: StringFilter<"query_log"> | string
    params?: StringFilter<"query_log"> | string
    username?: StringNullableFilter<"query_log"> | string | null
    timestamp?: DateTimeFilter<"query_log"> | Date | string
  }

  export type query_logOrderByWithRelationInput = {
    id?: SortOrder
    table_name?: SortOrder
    affected_id?: SortOrder
    query?: SortOrder
    params?: SortOrder
    username?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _relevance?: query_logOrderByRelevanceInput
  }

  export type query_logWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: query_logWhereInput | query_logWhereInput[]
    OR?: query_logWhereInput[]
    NOT?: query_logWhereInput | query_logWhereInput[]
    table_name?: StringFilter<"query_log"> | string
    affected_id?: IntFilter<"query_log"> | number
    query?: StringFilter<"query_log"> | string
    params?: StringFilter<"query_log"> | string
    username?: StringNullableFilter<"query_log"> | string | null
    timestamp?: DateTimeFilter<"query_log"> | Date | string
  }, "id">

  export type query_logOrderByWithAggregationInput = {
    id?: SortOrder
    table_name?: SortOrder
    affected_id?: SortOrder
    query?: SortOrder
    params?: SortOrder
    username?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: query_logCountOrderByAggregateInput
    _avg?: query_logAvgOrderByAggregateInput
    _max?: query_logMaxOrderByAggregateInput
    _min?: query_logMinOrderByAggregateInput
    _sum?: query_logSumOrderByAggregateInput
  }

  export type query_logScalarWhereWithAggregatesInput = {
    AND?: query_logScalarWhereWithAggregatesInput | query_logScalarWhereWithAggregatesInput[]
    OR?: query_logScalarWhereWithAggregatesInput[]
    NOT?: query_logScalarWhereWithAggregatesInput | query_logScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"query_log"> | number
    table_name?: StringWithAggregatesFilter<"query_log"> | string
    affected_id?: IntWithAggregatesFilter<"query_log"> | number
    query?: StringWithAggregatesFilter<"query_log"> | string
    params?: StringWithAggregatesFilter<"query_log"> | string
    username?: StringNullableWithAggregatesFilter<"query_log"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"query_log"> | Date | string
  }

  export type user_logWhereInput = {
    AND?: user_logWhereInput | user_logWhereInput[]
    OR?: user_logWhereInput[]
    NOT?: user_logWhereInput | user_logWhereInput[]
    id?: IntFilter<"user_log"> | number
    user_id?: IntFilter<"user_log"> | number
    activity?: StringFilter<"user_log"> | string
    timestamp?: DateTimeFilter<"user_log"> | Date | string
  }

  export type user_logOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    activity?: SortOrder
    timestamp?: SortOrder
    _relevance?: user_logOrderByRelevanceInput
  }

  export type user_logWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: user_logWhereInput | user_logWhereInput[]
    OR?: user_logWhereInput[]
    NOT?: user_logWhereInput | user_logWhereInput[]
    user_id?: IntFilter<"user_log"> | number
    activity?: StringFilter<"user_log"> | string
    timestamp?: DateTimeFilter<"user_log"> | Date | string
  }, "id">

  export type user_logOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    activity?: SortOrder
    timestamp?: SortOrder
    _count?: user_logCountOrderByAggregateInput
    _avg?: user_logAvgOrderByAggregateInput
    _max?: user_logMaxOrderByAggregateInput
    _min?: user_logMinOrderByAggregateInput
    _sum?: user_logSumOrderByAggregateInput
  }

  export type user_logScalarWhereWithAggregatesInput = {
    AND?: user_logScalarWhereWithAggregatesInput | user_logScalarWhereWithAggregatesInput[]
    OR?: user_logScalarWhereWithAggregatesInput[]
    NOT?: user_logScalarWhereWithAggregatesInput | user_logScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_log"> | number
    user_id?: IntWithAggregatesFilter<"user_log"> | number
    activity?: StringWithAggregatesFilter<"user_log"> | string
    timestamp?: DateTimeWithAggregatesFilter<"user_log"> | Date | string
  }

  export type nd_barangCreateInput = {
    jenis_barang?: string | null
    nama_jual?: string | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nd_satuan?: nd_satuanCreateNestedOneWithoutNd_barangInput
  }

  export type nd_barangUncheckedCreateInput = {
    id?: number
    jenis_barang?: string | null
    nama_jual?: string | null
    satuan_id?: number | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barangUpdateInput = {
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nd_satuan?: nd_satuanUpdateOneWithoutNd_barangNestedInput
  }

  export type nd_barangUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    satuan_id?: NullableIntFieldUpdateOperationsInput | number | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barangCreateManyInput = {
    id?: number
    jenis_barang?: string | null
    nama_jual?: string | null
    satuan_id?: number | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barangUpdateManyMutationInput = {
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barangUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    satuan_id?: NullableIntFieldUpdateOperationsInput | number | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_bahanCreateInput = {
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_bahanUncheckedCreateInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_bahanUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_bahanUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_bahanCreateManyInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_bahanUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_bahanUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_beliCreateInput = {
    nama?: string | null
    barang_id?: number | null
    status_aktif?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_beliUncheckedCreateInput = {
    id?: number
    nama?: string | null
    barang_id?: number | null
    status_aktif?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_beliUpdateInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    barang_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_beliUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    barang_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_beliCreateManyInput = {
    id?: number
    nama?: string | null
    barang_id?: number | null
    status_aktif?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_beliUpdateManyMutationInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    barang_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_beliUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    barang_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_fiturCreateInput = {
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_fiturUncheckedCreateInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_fiturUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_fiturUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_fiturCreateManyInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_fiturUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_fiturUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_gradeCreateInput = {
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_gradeUncheckedCreateInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_gradeUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_gradeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_gradeCreateManyInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_gradeUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_gradeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_skuCreateInput = {
    sku_id?: string
    nama_barang?: string
    nama_jual?: string
    barang_id?: number
    warna_id?: number
    satuan_id?: number
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_skuUncheckedCreateInput = {
    id?: number
    sku_id?: string
    nama_barang?: string
    nama_jual?: string
    barang_id?: number
    warna_id?: number
    satuan_id?: number
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_skuUpdateInput = {
    sku_id?: StringFieldUpdateOperationsInput | string
    nama_barang?: StringFieldUpdateOperationsInput | string
    nama_jual?: StringFieldUpdateOperationsInput | string
    barang_id?: IntFieldUpdateOperationsInput | number
    warna_id?: IntFieldUpdateOperationsInput | number
    satuan_id?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_skuUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sku_id?: StringFieldUpdateOperationsInput | string
    nama_barang?: StringFieldUpdateOperationsInput | string
    nama_jual?: StringFieldUpdateOperationsInput | string
    barang_id?: IntFieldUpdateOperationsInput | number
    warna_id?: IntFieldUpdateOperationsInput | number
    satuan_id?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_skuCreateManyInput = {
    id?: number
    sku_id?: string
    nama_barang?: string
    nama_jual?: string
    barang_id?: number
    warna_id?: number
    satuan_id?: number
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barang_skuUpdateManyMutationInput = {
    sku_id?: StringFieldUpdateOperationsInput | string
    nama_barang?: StringFieldUpdateOperationsInput | string
    nama_jual?: StringFieldUpdateOperationsInput | string
    barang_id?: IntFieldUpdateOperationsInput | number
    warna_id?: IntFieldUpdateOperationsInput | number
    satuan_id?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_skuUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sku_id?: StringFieldUpdateOperationsInput | string
    nama_barang?: StringFieldUpdateOperationsInput | string
    nama_jual?: StringFieldUpdateOperationsInput | string
    barang_id?: IntFieldUpdateOperationsInput | number
    warna_id?: IntFieldUpdateOperationsInput | number
    satuan_id?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barang_tipeCreateInput = {
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_tipeUncheckedCreateInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_tipeUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_tipeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_tipeCreateManyInput = {
    id?: number
    nama?: string
    kode?: string
    keterangan?: string | null
    status_aktif?: number
  }

  export type nd_barang_tipeUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_barang_tipeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    kode?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_customerCreateInput = {
    customer_type_id?: boolean
    nama?: string | null
    alias: string
    alamat?: string | null
    telepon?: string | null
    telepon1?: string | null
    telepon2?: string | null
    npwp?: string | null
    nik?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    email?: string | null
    contact_person: string
    tempo_kredit?: number | null
    warning_kredit?: number | null
    limit_warning_type?: number | null
    limit_amount?: number | null
    limit_atas?: number | null
    limit_warning_amount?: number | null
    status_aktif?: boolean
    img_link?: string | null
    npwp_link?: string | null
    ktp_link?: string | null
    medsos_link?: string | null
    updated_at?: Date | string
    tipe_company?: string | null
    blok?: string
    no?: string | null
    rt?: string
    rw?: string
    kecamatan?: string
    kelurahan?: string
    locked_status?: boolean
    jenis_pekerjaan?: string | null
    jenis_produk?: string | null
    user_id?: number
  }

  export type nd_customerUncheckedCreateInput = {
    id?: number
    customer_type_id?: boolean
    nama?: string | null
    alias: string
    alamat?: string | null
    telepon?: string | null
    telepon1?: string | null
    telepon2?: string | null
    npwp?: string | null
    nik?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    email?: string | null
    contact_person: string
    tempo_kredit?: number | null
    warning_kredit?: number | null
    limit_warning_type?: number | null
    limit_amount?: number | null
    limit_atas?: number | null
    limit_warning_amount?: number | null
    status_aktif?: boolean
    img_link?: string | null
    npwp_link?: string | null
    ktp_link?: string | null
    medsos_link?: string | null
    updated_at?: Date | string
    tipe_company?: string | null
    blok?: string
    no?: string | null
    rt?: string
    rw?: string
    kecamatan?: string
    kelurahan?: string
    locked_status?: boolean
    jenis_pekerjaan?: string | null
    jenis_produk?: string | null
    user_id?: number
  }

  export type nd_customerUpdateInput = {
    customer_type_id?: BoolFieldUpdateOperationsInput | boolean
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    telepon1?: NullableStringFieldUpdateOperationsInput | string | null
    telepon2?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: StringFieldUpdateOperationsInput | string
    tempo_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    warning_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_type?: NullableIntFieldUpdateOperationsInput | number | null
    limit_amount?: NullableIntFieldUpdateOperationsInput | number | null
    limit_atas?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_amount?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: BoolFieldUpdateOperationsInput | boolean
    img_link?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_link?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_link?: NullableStringFieldUpdateOperationsInput | string | null
    medsos_link?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipe_company?: NullableStringFieldUpdateOperationsInput | string | null
    blok?: StringFieldUpdateOperationsInput | string
    no?: NullableStringFieldUpdateOperationsInput | string | null
    rt?: StringFieldUpdateOperationsInput | string
    rw?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kelurahan?: StringFieldUpdateOperationsInput | string
    locked_status?: BoolFieldUpdateOperationsInput | boolean
    jenis_pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_produk?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type nd_customerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customer_type_id?: BoolFieldUpdateOperationsInput | boolean
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    telepon1?: NullableStringFieldUpdateOperationsInput | string | null
    telepon2?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: StringFieldUpdateOperationsInput | string
    tempo_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    warning_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_type?: NullableIntFieldUpdateOperationsInput | number | null
    limit_amount?: NullableIntFieldUpdateOperationsInput | number | null
    limit_atas?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_amount?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: BoolFieldUpdateOperationsInput | boolean
    img_link?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_link?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_link?: NullableStringFieldUpdateOperationsInput | string | null
    medsos_link?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipe_company?: NullableStringFieldUpdateOperationsInput | string | null
    blok?: StringFieldUpdateOperationsInput | string
    no?: NullableStringFieldUpdateOperationsInput | string | null
    rt?: StringFieldUpdateOperationsInput | string
    rw?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kelurahan?: StringFieldUpdateOperationsInput | string
    locked_status?: BoolFieldUpdateOperationsInput | boolean
    jenis_pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_produk?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type nd_customerCreateManyInput = {
    id?: number
    customer_type_id?: boolean
    nama?: string | null
    alias: string
    alamat?: string | null
    telepon?: string | null
    telepon1?: string | null
    telepon2?: string | null
    npwp?: string | null
    nik?: string | null
    kota?: string | null
    provinsi?: string | null
    kode_pos?: string | null
    email?: string | null
    contact_person: string
    tempo_kredit?: number | null
    warning_kredit?: number | null
    limit_warning_type?: number | null
    limit_amount?: number | null
    limit_atas?: number | null
    limit_warning_amount?: number | null
    status_aktif?: boolean
    img_link?: string | null
    npwp_link?: string | null
    ktp_link?: string | null
    medsos_link?: string | null
    updated_at?: Date | string
    tipe_company?: string | null
    blok?: string
    no?: string | null
    rt?: string
    rw?: string
    kecamatan?: string
    kelurahan?: string
    locked_status?: boolean
    jenis_pekerjaan?: string | null
    jenis_produk?: string | null
    user_id?: number
  }

  export type nd_customerUpdateManyMutationInput = {
    customer_type_id?: BoolFieldUpdateOperationsInput | boolean
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    telepon1?: NullableStringFieldUpdateOperationsInput | string | null
    telepon2?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: StringFieldUpdateOperationsInput | string
    tempo_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    warning_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_type?: NullableIntFieldUpdateOperationsInput | number | null
    limit_amount?: NullableIntFieldUpdateOperationsInput | number | null
    limit_atas?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_amount?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: BoolFieldUpdateOperationsInput | boolean
    img_link?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_link?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_link?: NullableStringFieldUpdateOperationsInput | string | null
    medsos_link?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipe_company?: NullableStringFieldUpdateOperationsInput | string | null
    blok?: StringFieldUpdateOperationsInput | string
    no?: NullableStringFieldUpdateOperationsInput | string | null
    rt?: StringFieldUpdateOperationsInput | string
    rw?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kelurahan?: StringFieldUpdateOperationsInput | string
    locked_status?: BoolFieldUpdateOperationsInput | boolean
    jenis_pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_produk?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type nd_customerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customer_type_id?: BoolFieldUpdateOperationsInput | boolean
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    telepon1?: NullableStringFieldUpdateOperationsInput | string | null
    telepon2?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    provinsi?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    contact_person?: StringFieldUpdateOperationsInput | string
    tempo_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    warning_kredit?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_type?: NullableIntFieldUpdateOperationsInput | number | null
    limit_amount?: NullableIntFieldUpdateOperationsInput | number | null
    limit_atas?: NullableIntFieldUpdateOperationsInput | number | null
    limit_warning_amount?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: BoolFieldUpdateOperationsInput | boolean
    img_link?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_link?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_link?: NullableStringFieldUpdateOperationsInput | string | null
    medsos_link?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipe_company?: NullableStringFieldUpdateOperationsInput | string | null
    blok?: StringFieldUpdateOperationsInput | string
    no?: NullableStringFieldUpdateOperationsInput | string | null
    rt?: StringFieldUpdateOperationsInput | string
    rw?: StringFieldUpdateOperationsInput | string
    kecamatan?: StringFieldUpdateOperationsInput | string
    kelurahan?: StringFieldUpdateOperationsInput | string
    locked_status?: BoolFieldUpdateOperationsInput | boolean
    jenis_pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_produk?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type nd_departmentCreateInput = {
    kode: string
    nama: string
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_departmentUncheckedCreateInput = {
    id?: number
    kode: string
    nama: string
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_departmentUpdateInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_departmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_departmentCreateManyInput = {
    id?: number
    kode: string
    nama: string
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_departmentUpdateManyMutationInput = {
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_departmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_documentCreateInput = {
    toko_id?: number
    tanggal?: Date | string | null
    document_control_id?: number
    document_number_raw?: number | null
    document_number?: string | null
    document_status: string
    judul?: string
    dari?: string
    kepada?: string
    keterangan?: string
    penanggung_jawab?: string
    username?: string
    status_aktif?: number
  }

  export type nd_documentUncheckedCreateInput = {
    id?: number
    toko_id?: number
    tanggal?: Date | string | null
    document_control_id?: number
    document_number_raw?: number | null
    document_number?: string | null
    document_status: string
    judul?: string
    dari?: string
    kepada?: string
    keterangan?: string
    penanggung_jawab?: string
    username?: string
    status_aktif?: number
  }

  export type nd_documentUpdateInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_control_id?: IntFieldUpdateOperationsInput | number
    document_number_raw?: NullableIntFieldUpdateOperationsInput | number | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    document_status?: StringFieldUpdateOperationsInput | string
    judul?: StringFieldUpdateOperationsInput | string
    dari?: StringFieldUpdateOperationsInput | string
    kepada?: StringFieldUpdateOperationsInput | string
    keterangan?: StringFieldUpdateOperationsInput | string
    penanggung_jawab?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_documentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_control_id?: IntFieldUpdateOperationsInput | number
    document_number_raw?: NullableIntFieldUpdateOperationsInput | number | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    document_status?: StringFieldUpdateOperationsInput | string
    judul?: StringFieldUpdateOperationsInput | string
    dari?: StringFieldUpdateOperationsInput | string
    kepada?: StringFieldUpdateOperationsInput | string
    keterangan?: StringFieldUpdateOperationsInput | string
    penanggung_jawab?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_documentCreateManyInput = {
    id?: number
    toko_id?: number
    tanggal?: Date | string | null
    document_control_id?: number
    document_number_raw?: number | null
    document_number?: string | null
    document_status: string
    judul?: string
    dari?: string
    kepada?: string
    keterangan?: string
    penanggung_jawab?: string
    username?: string
    status_aktif?: number
  }

  export type nd_documentUpdateManyMutationInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_control_id?: IntFieldUpdateOperationsInput | number
    document_number_raw?: NullableIntFieldUpdateOperationsInput | number | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    document_status?: StringFieldUpdateOperationsInput | string
    judul?: StringFieldUpdateOperationsInput | string
    dari?: StringFieldUpdateOperationsInput | string
    kepada?: StringFieldUpdateOperationsInput | string
    keterangan?: StringFieldUpdateOperationsInput | string
    penanggung_jawab?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_documentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_control_id?: IntFieldUpdateOperationsInput | number
    document_number_raw?: NullableIntFieldUpdateOperationsInput | number | null
    document_number?: NullableStringFieldUpdateOperationsInput | string | null
    document_status?: StringFieldUpdateOperationsInput | string
    judul?: StringFieldUpdateOperationsInput | string
    dari?: StringFieldUpdateOperationsInput | string
    kepada?: StringFieldUpdateOperationsInput | string
    keterangan?: StringFieldUpdateOperationsInput | string
    penanggung_jawab?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_document_controlCreateInput = {
    department_id: number
    tipe_dokumen?: string | null
    no_kode?: number | null
    kode: string
    nama: string
    keterangan?: string | null
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_document_controlUncheckedCreateInput = {
    id?: number
    department_id: number
    tipe_dokumen?: string | null
    no_kode?: number | null
    kode: string
    nama: string
    keterangan?: string | null
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_document_controlUpdateInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    tipe_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    no_kode?: NullableIntFieldUpdateOperationsInput | number | null
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_document_controlUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_id?: IntFieldUpdateOperationsInput | number
    tipe_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    no_kode?: NullableIntFieldUpdateOperationsInput | number | null
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_document_controlCreateManyInput = {
    id?: number
    department_id: number
    tipe_dokumen?: string | null
    no_kode?: number | null
    kode: string
    nama: string
    keterangan?: string | null
    status_aktif?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_document_controlUpdateManyMutationInput = {
    department_id?: IntFieldUpdateOperationsInput | number
    tipe_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    no_kode?: NullableIntFieldUpdateOperationsInput | number | null
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_document_controlUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_id?: IntFieldUpdateOperationsInput | number
    tipe_dokumen?: NullableStringFieldUpdateOperationsInput | string | null
    no_kode?: NullableIntFieldUpdateOperationsInput | number | null
    kode?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_gudangCreateInput = {
    nama?: string | null
    lokasi?: string | null
    status_default?: number
    visible?: boolean
    gudang_group_id?: number | null
    urutan: number
    status_aktif?: number
  }

  export type nd_gudangUncheckedCreateInput = {
    id?: number
    nama?: string | null
    lokasi?: string | null
    status_default?: number
    visible?: boolean
    gudang_group_id?: number | null
    urutan: number
    status_aktif?: number
  }

  export type nd_gudangUpdateInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    lokasi?: NullableStringFieldUpdateOperationsInput | string | null
    status_default?: IntFieldUpdateOperationsInput | number
    visible?: BoolFieldUpdateOperationsInput | boolean
    gudang_group_id?: NullableIntFieldUpdateOperationsInput | number | null
    urutan?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_gudangUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    lokasi?: NullableStringFieldUpdateOperationsInput | string | null
    status_default?: IntFieldUpdateOperationsInput | number
    visible?: BoolFieldUpdateOperationsInput | boolean
    gudang_group_id?: NullableIntFieldUpdateOperationsInput | number | null
    urutan?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_gudangCreateManyInput = {
    id?: number
    nama?: string | null
    lokasi?: string | null
    status_default?: number
    visible?: boolean
    gudang_group_id?: number | null
    urutan: number
    status_aktif?: number
  }

  export type nd_gudangUpdateManyMutationInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    lokasi?: NullableStringFieldUpdateOperationsInput | string | null
    status_default?: IntFieldUpdateOperationsInput | number
    visible?: BoolFieldUpdateOperationsInput | boolean
    gudang_group_id?: NullableIntFieldUpdateOperationsInput | number | null
    urutan?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_gudangUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    lokasi?: NullableStringFieldUpdateOperationsInput | string | null
    status_default?: IntFieldUpdateOperationsInput | number
    visible?: BoolFieldUpdateOperationsInput | boolean
    gudang_group_id?: NullableIntFieldUpdateOperationsInput | number | null
    urutan?: IntFieldUpdateOperationsInput | number
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_posisiCreateInput = {
    name?: string | null
    nd_user?: nd_userCreateNestedManyWithoutNd_posisiInput
  }

  export type nd_posisiUncheckedCreateInput = {
    id?: number
    name?: string | null
    nd_user?: nd_userUncheckedCreateNestedManyWithoutNd_posisiInput
  }

  export type nd_posisiUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nd_user?: nd_userUpdateManyWithoutNd_posisiNestedInput
  }

  export type nd_posisiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    nd_user?: nd_userUncheckedUpdateManyWithoutNd_posisiNestedInput
  }

  export type nd_posisiCreateManyInput = {
    id?: number
    name?: string | null
  }

  export type nd_posisiUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nd_posisiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nd_satuanCreateInput = {
    nama?: string | null
    status_aktif?: number | null
    nd_barang?: nd_barangCreateNestedManyWithoutNd_satuanInput
  }

  export type nd_satuanUncheckedCreateInput = {
    id?: number
    nama?: string | null
    status_aktif?: number | null
    nd_barang?: nd_barangUncheckedCreateNestedManyWithoutNd_satuanInput
  }

  export type nd_satuanUpdateInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    nd_barang?: nd_barangUpdateManyWithoutNd_satuanNestedInput
  }

  export type nd_satuanUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    nd_barang?: nd_barangUncheckedUpdateManyWithoutNd_satuanNestedInput
  }

  export type nd_satuanCreateManyInput = {
    id?: number
    nama?: string | null
    status_aktif?: number | null
  }

  export type nd_satuanUpdateManyMutationInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_satuanUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_supplierCreateInput = {
    kode?: string | null
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    kota?: string | null
    fax?: string | null
    kode_pos?: string | null
    nama_bank?: string | null
    no_rek_bank?: string | null
    email?: string | null
    website?: string | null
    status_aktif?: number
  }

  export type nd_supplierUncheckedCreateInput = {
    id?: number
    kode?: string | null
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    kota?: string | null
    fax?: string | null
    kode_pos?: string | null
    nama_bank?: string | null
    no_rek_bank?: string | null
    email?: string | null
    website?: string | null
    status_aktif?: number
  }

  export type nd_supplierUpdateInput = {
    kode?: NullableStringFieldUpdateOperationsInput | string | null
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    no_rek_bank?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_supplierUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: NullableStringFieldUpdateOperationsInput | string | null
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    no_rek_bank?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_supplierCreateManyInput = {
    id?: number
    kode?: string | null
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    kota?: string | null
    fax?: string | null
    kode_pos?: string | null
    nama_bank?: string | null
    no_rek_bank?: string | null
    email?: string | null
    website?: string | null
    status_aktif?: number
  }

  export type nd_supplierUpdateManyMutationInput = {
    kode?: NullableStringFieldUpdateOperationsInput | string | null
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    no_rek_bank?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_supplierUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    kode?: NullableStringFieldUpdateOperationsInput | string | null
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    nama_bank?: NullableStringFieldUpdateOperationsInput | string | null
    no_rek_bank?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_tokoCreateInput = {
    nama?: string | null
    alias?: string
    alamat?: string | null
    telepon?: string | null
    email?: string | null
    fax?: string | null
    kota?: string | null
    kode_pos?: string | null
    NPWP?: string | null
    pre_faktur?: string | null
    kode_toko?: string | null
    status_aktif?: number
    nama_domain?: string | null
    email_pajak?: string | null
    index?: number | null
  }

  export type nd_tokoUncheckedCreateInput = {
    id?: number
    nama?: string | null
    alias?: string
    alamat?: string | null
    telepon?: string | null
    email?: string | null
    fax?: string | null
    kota?: string | null
    kode_pos?: string | null
    NPWP?: string | null
    pre_faktur?: string | null
    kode_toko?: string | null
    status_aktif?: number
    nama_domain?: string | null
    email_pajak?: string | null
    index?: number | null
  }

  export type nd_tokoUpdateInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    NPWP?: NullableStringFieldUpdateOperationsInput | string | null
    pre_faktur?: NullableStringFieldUpdateOperationsInput | string | null
    kode_toko?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    nama_domain?: NullableStringFieldUpdateOperationsInput | string | null
    email_pajak?: NullableStringFieldUpdateOperationsInput | string | null
    index?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_tokoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    NPWP?: NullableStringFieldUpdateOperationsInput | string | null
    pre_faktur?: NullableStringFieldUpdateOperationsInput | string | null
    kode_toko?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    nama_domain?: NullableStringFieldUpdateOperationsInput | string | null
    email_pajak?: NullableStringFieldUpdateOperationsInput | string | null
    index?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_tokoCreateManyInput = {
    id?: number
    nama?: string | null
    alias?: string
    alamat?: string | null
    telepon?: string | null
    email?: string | null
    fax?: string | null
    kota?: string | null
    kode_pos?: string | null
    NPWP?: string | null
    pre_faktur?: string | null
    kode_toko?: string | null
    status_aktif?: number
    nama_domain?: string | null
    email_pajak?: string | null
    index?: number | null
  }

  export type nd_tokoUpdateManyMutationInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    NPWP?: NullableStringFieldUpdateOperationsInput | string | null
    pre_faktur?: NullableStringFieldUpdateOperationsInput | string | null
    kode_toko?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    nama_domain?: NullableStringFieldUpdateOperationsInput | string | null
    email_pajak?: NullableStringFieldUpdateOperationsInput | string | null
    index?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_tokoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: StringFieldUpdateOperationsInput | string
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    fax?: NullableStringFieldUpdateOperationsInput | string | null
    kota?: NullableStringFieldUpdateOperationsInput | string | null
    kode_pos?: NullableStringFieldUpdateOperationsInput | string | null
    NPWP?: NullableStringFieldUpdateOperationsInput | string | null
    pre_faktur?: NullableStringFieldUpdateOperationsInput | string | null
    kode_toko?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
    nama_domain?: NullableStringFieldUpdateOperationsInput | string | null
    email_pajak?: NullableStringFieldUpdateOperationsInput | string | null
    index?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_toko_barang_assignmentCreateInput = {
    toko_id?: number
    barang_id?: number
    is_synced?: number
    last_synced?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type nd_toko_barang_assignmentUncheckedCreateInput = {
    id?: number
    toko_id?: number
    barang_id?: number
    is_synced?: number
    last_synced?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type nd_toko_barang_assignmentUpdateInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    barang_id?: IntFieldUpdateOperationsInput | number
    is_synced?: IntFieldUpdateOperationsInput | number
    last_synced?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_barang_assignmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    barang_id?: IntFieldUpdateOperationsInput | number
    is_synced?: IntFieldUpdateOperationsInput | number
    last_synced?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_barang_assignmentCreateManyInput = {
    id?: number
    toko_id?: number
    barang_id?: number
    is_synced?: number
    last_synced?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type nd_toko_barang_assignmentUpdateManyMutationInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    barang_id?: IntFieldUpdateOperationsInput | number
    is_synced?: IntFieldUpdateOperationsInput | number
    last_synced?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_barang_assignmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    barang_id?: IntFieldUpdateOperationsInput | number
    is_synced?: IntFieldUpdateOperationsInput | number
    last_synced?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_userCreateInput = {
    toko_id: number
    user_id: number
    user_id_creator: number
    created_at: Date | string
    updated_at: Date | string
  }

  export type nd_toko_userUncheckedCreateInput = {
    id?: number
    toko_id: number
    user_id: number
    user_id_creator: number
    created_at: Date | string
    updated_at: Date | string
  }

  export type nd_toko_userUpdateInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_id_creator?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_id_creator?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_userCreateManyInput = {
    id?: number
    toko_id: number
    user_id: number
    user_id_creator: number
    created_at: Date | string
    updated_at: Date | string
  }

  export type nd_toko_userUpdateManyMutationInput = {
    toko_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_id_creator?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_toko_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    toko_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    user_id_creator?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_userCreateInput = {
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nd_posisi?: nd_posisiCreateNestedOneWithoutNd_userInput
  }

  export type nd_userUncheckedCreateInput = {
    id?: number
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    posisi_id?: number | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_userUpdateInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nd_posisi?: nd_posisiUpdateOneWithoutNd_userNestedInput
  }

  export type nd_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    posisi_id?: NullableIntFieldUpdateOperationsInput | number | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_userCreateManyInput = {
    id?: number
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    posisi_id?: number | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_userUpdateManyMutationInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    posisi_id?: NullableIntFieldUpdateOperationsInput | number | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_warnaCreateInput = {
    warna_beli?: string | null
    warna_jual?: string | null
    kode_warna?: string | null
    status_aktif?: number
  }

  export type nd_warnaUncheckedCreateInput = {
    id?: number
    warna_beli?: string | null
    warna_jual?: string | null
    kode_warna?: string | null
    status_aktif?: number
  }

  export type nd_warnaUpdateInput = {
    warna_beli?: NullableStringFieldUpdateOperationsInput | string | null
    warna_jual?: NullableStringFieldUpdateOperationsInput | string | null
    kode_warna?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_warnaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    warna_beli?: NullableStringFieldUpdateOperationsInput | string | null
    warna_jual?: NullableStringFieldUpdateOperationsInput | string | null
    kode_warna?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_warnaCreateManyInput = {
    id?: number
    warna_beli?: string | null
    warna_jual?: string | null
    kode_warna?: string | null
    status_aktif?: number
  }

  export type nd_warnaUpdateManyMutationInput = {
    warna_beli?: NullableStringFieldUpdateOperationsInput | string | null
    warna_jual?: NullableStringFieldUpdateOperationsInput | string | null
    kode_warna?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type nd_warnaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    warna_beli?: NullableStringFieldUpdateOperationsInput | string | null
    warna_jual?: NullableStringFieldUpdateOperationsInput | string | null
    kode_warna?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: IntFieldUpdateOperationsInput | number
  }

  export type query_logCreateInput = {
    table_name?: string
    affected_id?: number
    query?: string
    params?: string
    username?: string | null
    timestamp?: Date | string
  }

  export type query_logUncheckedCreateInput = {
    id?: number
    table_name?: string
    affected_id?: number
    query?: string
    params?: string
    username?: string | null
    timestamp?: Date | string
  }

  export type query_logUpdateInput = {
    table_name?: StringFieldUpdateOperationsInput | string
    affected_id?: IntFieldUpdateOperationsInput | number
    query?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type query_logUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_name?: StringFieldUpdateOperationsInput | string
    affected_id?: IntFieldUpdateOperationsInput | number
    query?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type query_logCreateManyInput = {
    id?: number
    table_name?: string
    affected_id?: number
    query?: string
    params?: string
    username?: string | null
    timestamp?: Date | string
  }

  export type query_logUpdateManyMutationInput = {
    table_name?: StringFieldUpdateOperationsInput | string
    affected_id?: IntFieldUpdateOperationsInput | number
    query?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type query_logUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_name?: StringFieldUpdateOperationsInput | string
    affected_id?: IntFieldUpdateOperationsInput | number
    query?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    username?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_logCreateInput = {
    user_id?: number
    activity?: string
    timestamp?: Date | string
  }

  export type user_logUncheckedCreateInput = {
    id?: number
    user_id?: number
    activity?: string
    timestamp?: Date | string
  }

  export type user_logUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_logUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_logCreateManyInput = {
    id?: number
    user_id?: number
    activity?: string
    timestamp?: Date | string
  }

  export type user_logUpdateManyMutationInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_logUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    activity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Nd_satuanNullableScalarRelationFilter = {
    is?: nd_satuanWhereInput | null
    isNot?: nd_satuanWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type nd_barangOrderByRelevanceInput = {
    fields: nd_barangOrderByRelevanceFieldEnum | nd_barangOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barangNama_jualSatuan_idCompoundUniqueInput = {
    nama_jual: string
    satuan_id: number
  }

  export type nd_barangCountOrderByAggregateInput = {
    id?: SortOrder
    jenis_barang?: SortOrder
    nama_jual?: SortOrder
    satuan_id?: SortOrder
    qty_warning?: SortOrder
    deskripsi_info?: SortOrder
    status_aktif?: SortOrder
    tipe_qty?: SortOrder
    grade?: SortOrder
    bahan?: SortOrder
    fitur?: SortOrder
    tipe?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barangAvgOrderByAggregateInput = {
    id?: SortOrder
    satuan_id?: SortOrder
    qty_warning?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barangMaxOrderByAggregateInput = {
    id?: SortOrder
    jenis_barang?: SortOrder
    nama_jual?: SortOrder
    satuan_id?: SortOrder
    qty_warning?: SortOrder
    deskripsi_info?: SortOrder
    status_aktif?: SortOrder
    tipe_qty?: SortOrder
    grade?: SortOrder
    bahan?: SortOrder
    fitur?: SortOrder
    tipe?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barangMinOrderByAggregateInput = {
    id?: SortOrder
    jenis_barang?: SortOrder
    nama_jual?: SortOrder
    satuan_id?: SortOrder
    qty_warning?: SortOrder
    deskripsi_info?: SortOrder
    status_aktif?: SortOrder
    tipe_qty?: SortOrder
    grade?: SortOrder
    bahan?: SortOrder
    fitur?: SortOrder
    tipe?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barangSumOrderByAggregateInput = {
    id?: SortOrder
    satuan_id?: SortOrder
    qty_warning?: SortOrder
    status_aktif?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type nd_barang_bahanOrderByRelevanceInput = {
    fields: nd_barang_bahanOrderByRelevanceFieldEnum | nd_barang_bahanOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_bahanCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_bahanAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_bahanMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_bahanMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_bahanSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type nd_barang_beliOrderByRelevanceInput = {
    fields: nd_barang_beliOrderByRelevanceFieldEnum | nd_barang_beliOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_beliNamaBarang_idCompoundUniqueInput = {
    nama: string
    barang_id: number
  }

  export type nd_barang_beliCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    barang_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_beliAvgOrderByAggregateInput = {
    id?: SortOrder
    barang_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_beliMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    barang_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_beliMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    barang_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_beliSumOrderByAggregateInput = {
    id?: SortOrder
    barang_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_fiturOrderByRelevanceInput = {
    fields: nd_barang_fiturOrderByRelevanceFieldEnum | nd_barang_fiturOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_fiturCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_fiturAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_fiturMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_fiturMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_fiturSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_gradeOrderByRelevanceInput = {
    fields: nd_barang_gradeOrderByRelevanceFieldEnum | nd_barang_gradeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_gradeCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_gradeAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_gradeMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_gradeMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_gradeSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_skuOrderByRelevanceInput = {
    fields: nd_barang_skuOrderByRelevanceFieldEnum | nd_barang_skuOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_skuBarang_idWarna_idSatuan_idCompoundUniqueInput = {
    barang_id: number
    warna_id: number
    satuan_id: number
  }

  export type nd_barang_skuCountOrderByAggregateInput = {
    id?: SortOrder
    sku_id?: SortOrder
    nama_barang?: SortOrder
    nama_jual?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_skuAvgOrderByAggregateInput = {
    id?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_skuMaxOrderByAggregateInput = {
    id?: SortOrder
    sku_id?: SortOrder
    nama_barang?: SortOrder
    nama_jual?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_skuMinOrderByAggregateInput = {
    id?: SortOrder
    sku_id?: SortOrder
    nama_barang?: SortOrder
    nama_jual?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_barang_skuSumOrderByAggregateInput = {
    id?: SortOrder
    barang_id?: SortOrder
    warna_id?: SortOrder
    satuan_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_tipeOrderByRelevanceInput = {
    fields: nd_barang_tipeOrderByRelevanceFieldEnum | nd_barang_tipeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_barang_tipeCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_tipeAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_tipeMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_tipeMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    kode?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_barang_tipeSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type nd_customerOrderByRelevanceInput = {
    fields: nd_customerOrderByRelevanceFieldEnum | nd_customerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_customerCountOrderByAggregateInput = {
    id?: SortOrder
    customer_type_id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    telepon1?: SortOrder
    telepon2?: SortOrder
    npwp?: SortOrder
    nik?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    tempo_kredit?: SortOrder
    warning_kredit?: SortOrder
    limit_warning_type?: SortOrder
    limit_amount?: SortOrder
    limit_atas?: SortOrder
    limit_warning_amount?: SortOrder
    status_aktif?: SortOrder
    img_link?: SortOrder
    npwp_link?: SortOrder
    ktp_link?: SortOrder
    medsos_link?: SortOrder
    updated_at?: SortOrder
    tipe_company?: SortOrder
    blok?: SortOrder
    no?: SortOrder
    rt?: SortOrder
    rw?: SortOrder
    kecamatan?: SortOrder
    kelurahan?: SortOrder
    locked_status?: SortOrder
    jenis_pekerjaan?: SortOrder
    jenis_produk?: SortOrder
    user_id?: SortOrder
  }

  export type nd_customerAvgOrderByAggregateInput = {
    id?: SortOrder
    tempo_kredit?: SortOrder
    warning_kredit?: SortOrder
    limit_warning_type?: SortOrder
    limit_amount?: SortOrder
    limit_atas?: SortOrder
    limit_warning_amount?: SortOrder
    user_id?: SortOrder
  }

  export type nd_customerMaxOrderByAggregateInput = {
    id?: SortOrder
    customer_type_id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    telepon1?: SortOrder
    telepon2?: SortOrder
    npwp?: SortOrder
    nik?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    tempo_kredit?: SortOrder
    warning_kredit?: SortOrder
    limit_warning_type?: SortOrder
    limit_amount?: SortOrder
    limit_atas?: SortOrder
    limit_warning_amount?: SortOrder
    status_aktif?: SortOrder
    img_link?: SortOrder
    npwp_link?: SortOrder
    ktp_link?: SortOrder
    medsos_link?: SortOrder
    updated_at?: SortOrder
    tipe_company?: SortOrder
    blok?: SortOrder
    no?: SortOrder
    rt?: SortOrder
    rw?: SortOrder
    kecamatan?: SortOrder
    kelurahan?: SortOrder
    locked_status?: SortOrder
    jenis_pekerjaan?: SortOrder
    jenis_produk?: SortOrder
    user_id?: SortOrder
  }

  export type nd_customerMinOrderByAggregateInput = {
    id?: SortOrder
    customer_type_id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    telepon1?: SortOrder
    telepon2?: SortOrder
    npwp?: SortOrder
    nik?: SortOrder
    kota?: SortOrder
    provinsi?: SortOrder
    kode_pos?: SortOrder
    email?: SortOrder
    contact_person?: SortOrder
    tempo_kredit?: SortOrder
    warning_kredit?: SortOrder
    limit_warning_type?: SortOrder
    limit_amount?: SortOrder
    limit_atas?: SortOrder
    limit_warning_amount?: SortOrder
    status_aktif?: SortOrder
    img_link?: SortOrder
    npwp_link?: SortOrder
    ktp_link?: SortOrder
    medsos_link?: SortOrder
    updated_at?: SortOrder
    tipe_company?: SortOrder
    blok?: SortOrder
    no?: SortOrder
    rt?: SortOrder
    rw?: SortOrder
    kecamatan?: SortOrder
    kelurahan?: SortOrder
    locked_status?: SortOrder
    jenis_pekerjaan?: SortOrder
    jenis_produk?: SortOrder
    user_id?: SortOrder
  }

  export type nd_customerSumOrderByAggregateInput = {
    id?: SortOrder
    tempo_kredit?: SortOrder
    warning_kredit?: SortOrder
    limit_warning_type?: SortOrder
    limit_amount?: SortOrder
    limit_atas?: SortOrder
    limit_warning_amount?: SortOrder
    user_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type nd_departmentOrderByRelevanceInput = {
    fields: nd_departmentOrderByRelevanceFieldEnum | nd_departmentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_departmentKodeNamaCompoundUniqueInput = {
    kode: string
    nama: string
  }

  export type nd_departmentCountOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_departmentAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_departmentMaxOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_departmentMinOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_departmentSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type nd_documentOrderByRelevanceInput = {
    fields: nd_documentOrderByRelevanceFieldEnum | nd_documentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_documentCountOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    tanggal?: SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrder
    document_number?: SortOrder
    document_status?: SortOrder
    judul?: SortOrder
    dari?: SortOrder
    kepada?: SortOrder
    keterangan?: SortOrder
    penanggung_jawab?: SortOrder
    username?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_documentAvgOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_documentMaxOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    tanggal?: SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrder
    document_number?: SortOrder
    document_status?: SortOrder
    judul?: SortOrder
    dari?: SortOrder
    kepada?: SortOrder
    keterangan?: SortOrder
    penanggung_jawab?: SortOrder
    username?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_documentMinOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    tanggal?: SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrder
    document_number?: SortOrder
    document_status?: SortOrder
    judul?: SortOrder
    dari?: SortOrder
    kepada?: SortOrder
    keterangan?: SortOrder
    penanggung_jawab?: SortOrder
    username?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_documentSumOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    document_control_id?: SortOrder
    document_number_raw?: SortOrder
    status_aktif?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type nd_document_controlOrderByRelevanceInput = {
    fields: nd_document_controlOrderByRelevanceFieldEnum | nd_document_controlOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_document_controlKodeNamaCompoundUniqueInput = {
    kode: string
    nama: string
  }

  export type nd_document_controlCountOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    tipe_dokumen?: SortOrder
    no_kode?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_document_controlAvgOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    no_kode?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_document_controlMaxOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    tipe_dokumen?: SortOrder
    no_kode?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_document_controlMinOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    tipe_dokumen?: SortOrder
    no_kode?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    keterangan?: SortOrder
    status_aktif?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_document_controlSumOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    no_kode?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_gudangOrderByRelevanceInput = {
    fields: nd_gudangOrderByRelevanceFieldEnum | nd_gudangOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_gudangCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    lokasi?: SortOrder
    status_default?: SortOrder
    visible?: SortOrder
    gudang_group_id?: SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_gudangAvgOrderByAggregateInput = {
    id?: SortOrder
    status_default?: SortOrder
    gudang_group_id?: SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_gudangMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    lokasi?: SortOrder
    status_default?: SortOrder
    visible?: SortOrder
    gudang_group_id?: SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_gudangMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    lokasi?: SortOrder
    status_default?: SortOrder
    visible?: SortOrder
    gudang_group_id?: SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_gudangSumOrderByAggregateInput = {
    id?: SortOrder
    status_default?: SortOrder
    gudang_group_id?: SortOrder
    urutan?: SortOrder
    status_aktif?: SortOrder
  }

  export type Nd_userListRelationFilter = {
    every?: nd_userWhereInput
    some?: nd_userWhereInput
    none?: nd_userWhereInput
  }

  export type nd_userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type nd_posisiOrderByRelevanceInput = {
    fields: nd_posisiOrderByRelevanceFieldEnum | nd_posisiOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_posisiCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type nd_posisiAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type nd_posisiMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type nd_posisiMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type nd_posisiSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Nd_barangListRelationFilter = {
    every?: nd_barangWhereInput
    some?: nd_barangWhereInput
    none?: nd_barangWhereInput
  }

  export type nd_barangOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type nd_satuanOrderByRelevanceInput = {
    fields: nd_satuanOrderByRelevanceFieldEnum | nd_satuanOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_satuanCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_satuanAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_satuanMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_satuanMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_satuanSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_supplierOrderByRelevanceInput = {
    fields: nd_supplierOrderByRelevanceFieldEnum | nd_supplierOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_supplierCountOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    kota?: SortOrder
    fax?: SortOrder
    kode_pos?: SortOrder
    nama_bank?: SortOrder
    no_rek_bank?: SortOrder
    email?: SortOrder
    website?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_supplierAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_supplierMaxOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    kota?: SortOrder
    fax?: SortOrder
    kode_pos?: SortOrder
    nama_bank?: SortOrder
    no_rek_bank?: SortOrder
    email?: SortOrder
    website?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_supplierMinOrderByAggregateInput = {
    id?: SortOrder
    kode?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    kota?: SortOrder
    fax?: SortOrder
    kode_pos?: SortOrder
    nama_bank?: SortOrder
    no_rek_bank?: SortOrder
    email?: SortOrder
    website?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_supplierSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_tokoOrderByRelevanceInput = {
    fields: nd_tokoOrderByRelevanceFieldEnum | nd_tokoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_tokoCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    email?: SortOrder
    fax?: SortOrder
    kota?: SortOrder
    kode_pos?: SortOrder
    NPWP?: SortOrder
    pre_faktur?: SortOrder
    kode_toko?: SortOrder
    status_aktif?: SortOrder
    nama_domain?: SortOrder
    email_pajak?: SortOrder
    index?: SortOrder
  }

  export type nd_tokoAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
    index?: SortOrder
  }

  export type nd_tokoMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    email?: SortOrder
    fax?: SortOrder
    kota?: SortOrder
    kode_pos?: SortOrder
    NPWP?: SortOrder
    pre_faktur?: SortOrder
    kode_toko?: SortOrder
    status_aktif?: SortOrder
    nama_domain?: SortOrder
    email_pajak?: SortOrder
    index?: SortOrder
  }

  export type nd_tokoMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    alias?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    email?: SortOrder
    fax?: SortOrder
    kota?: SortOrder
    kode_pos?: SortOrder
    NPWP?: SortOrder
    pre_faktur?: SortOrder
    kode_toko?: SortOrder
    status_aktif?: SortOrder
    nama_domain?: SortOrder
    email_pajak?: SortOrder
    index?: SortOrder
  }

  export type nd_tokoSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
    index?: SortOrder
  }

  export type nd_toko_barang_assignmentToko_idBarang_idCompoundUniqueInput = {
    toko_id: number
    barang_id: number
  }

  export type nd_toko_barang_assignmentCountOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
    last_synced?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type nd_toko_barang_assignmentAvgOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
  }

  export type nd_toko_barang_assignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
    last_synced?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type nd_toko_barang_assignmentMinOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
    last_synced?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type nd_toko_barang_assignmentSumOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    barang_id?: SortOrder
    is_synced?: SortOrder
  }

  export type nd_toko_userCountOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_toko_userAvgOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
  }

  export type nd_toko_userMaxOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_toko_userMinOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_toko_userSumOrderByAggregateInput = {
    id?: SortOrder
    toko_id?: SortOrder
    user_id?: SortOrder
    user_id_creator?: SortOrder
  }

  export type Nd_posisiNullableScalarRelationFilter = {
    is?: nd_posisiWhereInput | null
    isNot?: nd_posisiWhereInput | null
  }

  export type nd_userOrderByRelevanceInput = {
    fields: nd_userOrderByRelevanceFieldEnum | nd_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_userUsernameNamaCompoundUniqueInput = {
    username: string
    nama: string
  }

  export type nd_userCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    has_account?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    jenis_kelamin?: SortOrder
    kota_lahir?: SortOrder
    tgl_lahir?: SortOrder
    status_perkawinan?: SortOrder
    jumlah_anak?: SortOrder
    agama?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    profile_picture?: SortOrder
    ktp_picture?: SortOrder
    npwp_picture?: SortOrder
    posisi_id?: SortOrder
    time_start?: SortOrder
    time_end?: SortOrder
    printer_list_id?: SortOrder
    status_aktif?: SortOrder
    PIN?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_userAvgOrderByAggregateInput = {
    id?: SortOrder
    has_account?: SortOrder
    jumlah_anak?: SortOrder
    posisi_id?: SortOrder
    printer_list_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_userMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    has_account?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    jenis_kelamin?: SortOrder
    kota_lahir?: SortOrder
    tgl_lahir?: SortOrder
    status_perkawinan?: SortOrder
    jumlah_anak?: SortOrder
    agama?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    profile_picture?: SortOrder
    ktp_picture?: SortOrder
    npwp_picture?: SortOrder
    posisi_id?: SortOrder
    time_start?: SortOrder
    time_end?: SortOrder
    printer_list_id?: SortOrder
    status_aktif?: SortOrder
    PIN?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_userMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    roles?: SortOrder
    has_account?: SortOrder
    nama?: SortOrder
    alamat?: SortOrder
    telepon?: SortOrder
    jenis_kelamin?: SortOrder
    kota_lahir?: SortOrder
    tgl_lahir?: SortOrder
    status_perkawinan?: SortOrder
    jumlah_anak?: SortOrder
    agama?: SortOrder
    nik?: SortOrder
    npwp?: SortOrder
    profile_picture?: SortOrder
    ktp_picture?: SortOrder
    npwp_picture?: SortOrder
    posisi_id?: SortOrder
    time_start?: SortOrder
    time_end?: SortOrder
    printer_list_id?: SortOrder
    status_aktif?: SortOrder
    PIN?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type nd_userSumOrderByAggregateInput = {
    id?: SortOrder
    has_account?: SortOrder
    jumlah_anak?: SortOrder
    posisi_id?: SortOrder
    printer_list_id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_warnaOrderByRelevanceInput = {
    fields: nd_warnaOrderByRelevanceFieldEnum | nd_warnaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type nd_warnaCountOrderByAggregateInput = {
    id?: SortOrder
    warna_beli?: SortOrder
    warna_jual?: SortOrder
    kode_warna?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_warnaAvgOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_warnaMaxOrderByAggregateInput = {
    id?: SortOrder
    warna_beli?: SortOrder
    warna_jual?: SortOrder
    kode_warna?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_warnaMinOrderByAggregateInput = {
    id?: SortOrder
    warna_beli?: SortOrder
    warna_jual?: SortOrder
    kode_warna?: SortOrder
    status_aktif?: SortOrder
  }

  export type nd_warnaSumOrderByAggregateInput = {
    id?: SortOrder
    status_aktif?: SortOrder
  }

  export type query_logOrderByRelevanceInput = {
    fields: query_logOrderByRelevanceFieldEnum | query_logOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type query_logCountOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    affected_id?: SortOrder
    query?: SortOrder
    params?: SortOrder
    username?: SortOrder
    timestamp?: SortOrder
  }

  export type query_logAvgOrderByAggregateInput = {
    id?: SortOrder
    affected_id?: SortOrder
  }

  export type query_logMaxOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    affected_id?: SortOrder
    query?: SortOrder
    params?: SortOrder
    username?: SortOrder
    timestamp?: SortOrder
  }

  export type query_logMinOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    affected_id?: SortOrder
    query?: SortOrder
    params?: SortOrder
    username?: SortOrder
    timestamp?: SortOrder
  }

  export type query_logSumOrderByAggregateInput = {
    id?: SortOrder
    affected_id?: SortOrder
  }

  export type user_logOrderByRelevanceInput = {
    fields: user_logOrderByRelevanceFieldEnum | user_logOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type user_logCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    activity?: SortOrder
    timestamp?: SortOrder
  }

  export type user_logAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type user_logMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    activity?: SortOrder
    timestamp?: SortOrder
  }

  export type user_logMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    activity?: SortOrder
    timestamp?: SortOrder
  }

  export type user_logSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type nd_satuanCreateNestedOneWithoutNd_barangInput = {
    create?: XOR<nd_satuanCreateWithoutNd_barangInput, nd_satuanUncheckedCreateWithoutNd_barangInput>
    connectOrCreate?: nd_satuanCreateOrConnectWithoutNd_barangInput
    connect?: nd_satuanWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type nd_satuanUpdateOneWithoutNd_barangNestedInput = {
    create?: XOR<nd_satuanCreateWithoutNd_barangInput, nd_satuanUncheckedCreateWithoutNd_barangInput>
    connectOrCreate?: nd_satuanCreateOrConnectWithoutNd_barangInput
    upsert?: nd_satuanUpsertWithoutNd_barangInput
    disconnect?: nd_satuanWhereInput | boolean
    delete?: nd_satuanWhereInput | boolean
    connect?: nd_satuanWhereUniqueInput
    update?: XOR<XOR<nd_satuanUpdateToOneWithWhereWithoutNd_barangInput, nd_satuanUpdateWithoutNd_barangInput>, nd_satuanUncheckedUpdateWithoutNd_barangInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type nd_userCreateNestedManyWithoutNd_posisiInput = {
    create?: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput> | nd_userCreateWithoutNd_posisiInput[] | nd_userUncheckedCreateWithoutNd_posisiInput[]
    connectOrCreate?: nd_userCreateOrConnectWithoutNd_posisiInput | nd_userCreateOrConnectWithoutNd_posisiInput[]
    createMany?: nd_userCreateManyNd_posisiInputEnvelope
    connect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
  }

  export type nd_userUncheckedCreateNestedManyWithoutNd_posisiInput = {
    create?: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput> | nd_userCreateWithoutNd_posisiInput[] | nd_userUncheckedCreateWithoutNd_posisiInput[]
    connectOrCreate?: nd_userCreateOrConnectWithoutNd_posisiInput | nd_userCreateOrConnectWithoutNd_posisiInput[]
    createMany?: nd_userCreateManyNd_posisiInputEnvelope
    connect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
  }

  export type nd_userUpdateManyWithoutNd_posisiNestedInput = {
    create?: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput> | nd_userCreateWithoutNd_posisiInput[] | nd_userUncheckedCreateWithoutNd_posisiInput[]
    connectOrCreate?: nd_userCreateOrConnectWithoutNd_posisiInput | nd_userCreateOrConnectWithoutNd_posisiInput[]
    upsert?: nd_userUpsertWithWhereUniqueWithoutNd_posisiInput | nd_userUpsertWithWhereUniqueWithoutNd_posisiInput[]
    createMany?: nd_userCreateManyNd_posisiInputEnvelope
    set?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    disconnect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    delete?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    connect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    update?: nd_userUpdateWithWhereUniqueWithoutNd_posisiInput | nd_userUpdateWithWhereUniqueWithoutNd_posisiInput[]
    updateMany?: nd_userUpdateManyWithWhereWithoutNd_posisiInput | nd_userUpdateManyWithWhereWithoutNd_posisiInput[]
    deleteMany?: nd_userScalarWhereInput | nd_userScalarWhereInput[]
  }

  export type nd_userUncheckedUpdateManyWithoutNd_posisiNestedInput = {
    create?: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput> | nd_userCreateWithoutNd_posisiInput[] | nd_userUncheckedCreateWithoutNd_posisiInput[]
    connectOrCreate?: nd_userCreateOrConnectWithoutNd_posisiInput | nd_userCreateOrConnectWithoutNd_posisiInput[]
    upsert?: nd_userUpsertWithWhereUniqueWithoutNd_posisiInput | nd_userUpsertWithWhereUniqueWithoutNd_posisiInput[]
    createMany?: nd_userCreateManyNd_posisiInputEnvelope
    set?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    disconnect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    delete?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    connect?: nd_userWhereUniqueInput | nd_userWhereUniqueInput[]
    update?: nd_userUpdateWithWhereUniqueWithoutNd_posisiInput | nd_userUpdateWithWhereUniqueWithoutNd_posisiInput[]
    updateMany?: nd_userUpdateManyWithWhereWithoutNd_posisiInput | nd_userUpdateManyWithWhereWithoutNd_posisiInput[]
    deleteMany?: nd_userScalarWhereInput | nd_userScalarWhereInput[]
  }

  export type nd_barangCreateNestedManyWithoutNd_satuanInput = {
    create?: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput> | nd_barangCreateWithoutNd_satuanInput[] | nd_barangUncheckedCreateWithoutNd_satuanInput[]
    connectOrCreate?: nd_barangCreateOrConnectWithoutNd_satuanInput | nd_barangCreateOrConnectWithoutNd_satuanInput[]
    createMany?: nd_barangCreateManyNd_satuanInputEnvelope
    connect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
  }

  export type nd_barangUncheckedCreateNestedManyWithoutNd_satuanInput = {
    create?: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput> | nd_barangCreateWithoutNd_satuanInput[] | nd_barangUncheckedCreateWithoutNd_satuanInput[]
    connectOrCreate?: nd_barangCreateOrConnectWithoutNd_satuanInput | nd_barangCreateOrConnectWithoutNd_satuanInput[]
    createMany?: nd_barangCreateManyNd_satuanInputEnvelope
    connect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
  }

  export type nd_barangUpdateManyWithoutNd_satuanNestedInput = {
    create?: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput> | nd_barangCreateWithoutNd_satuanInput[] | nd_barangUncheckedCreateWithoutNd_satuanInput[]
    connectOrCreate?: nd_barangCreateOrConnectWithoutNd_satuanInput | nd_barangCreateOrConnectWithoutNd_satuanInput[]
    upsert?: nd_barangUpsertWithWhereUniqueWithoutNd_satuanInput | nd_barangUpsertWithWhereUniqueWithoutNd_satuanInput[]
    createMany?: nd_barangCreateManyNd_satuanInputEnvelope
    set?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    disconnect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    delete?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    connect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    update?: nd_barangUpdateWithWhereUniqueWithoutNd_satuanInput | nd_barangUpdateWithWhereUniqueWithoutNd_satuanInput[]
    updateMany?: nd_barangUpdateManyWithWhereWithoutNd_satuanInput | nd_barangUpdateManyWithWhereWithoutNd_satuanInput[]
    deleteMany?: nd_barangScalarWhereInput | nd_barangScalarWhereInput[]
  }

  export type nd_barangUncheckedUpdateManyWithoutNd_satuanNestedInput = {
    create?: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput> | nd_barangCreateWithoutNd_satuanInput[] | nd_barangUncheckedCreateWithoutNd_satuanInput[]
    connectOrCreate?: nd_barangCreateOrConnectWithoutNd_satuanInput | nd_barangCreateOrConnectWithoutNd_satuanInput[]
    upsert?: nd_barangUpsertWithWhereUniqueWithoutNd_satuanInput | nd_barangUpsertWithWhereUniqueWithoutNd_satuanInput[]
    createMany?: nd_barangCreateManyNd_satuanInputEnvelope
    set?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    disconnect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    delete?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    connect?: nd_barangWhereUniqueInput | nd_barangWhereUniqueInput[]
    update?: nd_barangUpdateWithWhereUniqueWithoutNd_satuanInput | nd_barangUpdateWithWhereUniqueWithoutNd_satuanInput[]
    updateMany?: nd_barangUpdateManyWithWhereWithoutNd_satuanInput | nd_barangUpdateManyWithWhereWithoutNd_satuanInput[]
    deleteMany?: nd_barangScalarWhereInput | nd_barangScalarWhereInput[]
  }

  export type nd_posisiCreateNestedOneWithoutNd_userInput = {
    create?: XOR<nd_posisiCreateWithoutNd_userInput, nd_posisiUncheckedCreateWithoutNd_userInput>
    connectOrCreate?: nd_posisiCreateOrConnectWithoutNd_userInput
    connect?: nd_posisiWhereUniqueInput
  }

  export type nd_posisiUpdateOneWithoutNd_userNestedInput = {
    create?: XOR<nd_posisiCreateWithoutNd_userInput, nd_posisiUncheckedCreateWithoutNd_userInput>
    connectOrCreate?: nd_posisiCreateOrConnectWithoutNd_userInput
    upsert?: nd_posisiUpsertWithoutNd_userInput
    disconnect?: nd_posisiWhereInput | boolean
    delete?: nd_posisiWhereInput | boolean
    connect?: nd_posisiWhereUniqueInput
    update?: XOR<XOR<nd_posisiUpdateToOneWithWhereWithoutNd_userInput, nd_posisiUpdateWithoutNd_userInput>, nd_posisiUncheckedUpdateWithoutNd_userInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type nd_satuanCreateWithoutNd_barangInput = {
    nama?: string | null
    status_aktif?: number | null
  }

  export type nd_satuanUncheckedCreateWithoutNd_barangInput = {
    id?: number
    nama?: string | null
    status_aktif?: number | null
  }

  export type nd_satuanCreateOrConnectWithoutNd_barangInput = {
    where: nd_satuanWhereUniqueInput
    create: XOR<nd_satuanCreateWithoutNd_barangInput, nd_satuanUncheckedCreateWithoutNd_barangInput>
  }

  export type nd_satuanUpsertWithoutNd_barangInput = {
    update: XOR<nd_satuanUpdateWithoutNd_barangInput, nd_satuanUncheckedUpdateWithoutNd_barangInput>
    create: XOR<nd_satuanCreateWithoutNd_barangInput, nd_satuanUncheckedCreateWithoutNd_barangInput>
    where?: nd_satuanWhereInput
  }

  export type nd_satuanUpdateToOneWithWhereWithoutNd_barangInput = {
    where?: nd_satuanWhereInput
    data: XOR<nd_satuanUpdateWithoutNd_barangInput, nd_satuanUncheckedUpdateWithoutNd_barangInput>
  }

  export type nd_satuanUpdateWithoutNd_barangInput = {
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_satuanUncheckedUpdateWithoutNd_barangInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type nd_userCreateWithoutNd_posisiInput = {
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_userUncheckedCreateWithoutNd_posisiInput = {
    id?: number
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_userCreateOrConnectWithoutNd_posisiInput = {
    where: nd_userWhereUniqueInput
    create: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput>
  }

  export type nd_userCreateManyNd_posisiInputEnvelope = {
    data: nd_userCreateManyNd_posisiInput | nd_userCreateManyNd_posisiInput[]
    skipDuplicates?: boolean
  }

  export type nd_userUpsertWithWhereUniqueWithoutNd_posisiInput = {
    where: nd_userWhereUniqueInput
    update: XOR<nd_userUpdateWithoutNd_posisiInput, nd_userUncheckedUpdateWithoutNd_posisiInput>
    create: XOR<nd_userCreateWithoutNd_posisiInput, nd_userUncheckedCreateWithoutNd_posisiInput>
  }

  export type nd_userUpdateWithWhereUniqueWithoutNd_posisiInput = {
    where: nd_userWhereUniqueInput
    data: XOR<nd_userUpdateWithoutNd_posisiInput, nd_userUncheckedUpdateWithoutNd_posisiInput>
  }

  export type nd_userUpdateManyWithWhereWithoutNd_posisiInput = {
    where: nd_userScalarWhereInput
    data: XOR<nd_userUpdateManyMutationInput, nd_userUncheckedUpdateManyWithoutNd_posisiInput>
  }

  export type nd_userScalarWhereInput = {
    AND?: nd_userScalarWhereInput | nd_userScalarWhereInput[]
    OR?: nd_userScalarWhereInput[]
    NOT?: nd_userScalarWhereInput | nd_userScalarWhereInput[]
    id?: IntFilter<"nd_user"> | number
    username?: StringNullableFilter<"nd_user"> | string | null
    password?: StringNullableFilter<"nd_user"> | string | null
    roles?: StringNullableFilter<"nd_user"> | string | null
    has_account?: IntFilter<"nd_user"> | number
    nama?: StringNullableFilter<"nd_user"> | string | null
    alamat?: StringNullableFilter<"nd_user"> | string | null
    telepon?: StringNullableFilter<"nd_user"> | string | null
    jenis_kelamin?: StringNullableFilter<"nd_user"> | string | null
    kota_lahir?: StringNullableFilter<"nd_user"> | string | null
    tgl_lahir?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    status_perkawinan?: StringNullableFilter<"nd_user"> | string | null
    jumlah_anak?: IntNullableFilter<"nd_user"> | number | null
    agama?: StringNullableFilter<"nd_user"> | string | null
    nik?: StringNullableFilter<"nd_user"> | string | null
    npwp?: StringNullableFilter<"nd_user"> | string | null
    profile_picture?: StringNullableFilter<"nd_user"> | string | null
    ktp_picture?: StringNullableFilter<"nd_user"> | string | null
    npwp_picture?: StringNullableFilter<"nd_user"> | string | null
    posisi_id?: IntNullableFilter<"nd_user"> | number | null
    time_start?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    time_end?: DateTimeNullableFilter<"nd_user"> | Date | string | null
    printer_list_id?: IntNullableFilter<"nd_user"> | number | null
    status_aktif?: IntNullableFilter<"nd_user"> | number | null
    PIN?: StringNullableFilter<"nd_user"> | string | null
    created_at?: DateTimeFilter<"nd_user"> | Date | string
    updated_at?: DateTimeFilter<"nd_user"> | Date | string
  }

  export type nd_barangCreateWithoutNd_satuanInput = {
    jenis_barang?: string | null
    nama_jual?: string | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barangUncheckedCreateWithoutNd_satuanInput = {
    id?: number
    jenis_barang?: string | null
    nama_jual?: string | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barangCreateOrConnectWithoutNd_satuanInput = {
    where: nd_barangWhereUniqueInput
    create: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput>
  }

  export type nd_barangCreateManyNd_satuanInputEnvelope = {
    data: nd_barangCreateManyNd_satuanInput | nd_barangCreateManyNd_satuanInput[]
    skipDuplicates?: boolean
  }

  export type nd_barangUpsertWithWhereUniqueWithoutNd_satuanInput = {
    where: nd_barangWhereUniqueInput
    update: XOR<nd_barangUpdateWithoutNd_satuanInput, nd_barangUncheckedUpdateWithoutNd_satuanInput>
    create: XOR<nd_barangCreateWithoutNd_satuanInput, nd_barangUncheckedCreateWithoutNd_satuanInput>
  }

  export type nd_barangUpdateWithWhereUniqueWithoutNd_satuanInput = {
    where: nd_barangWhereUniqueInput
    data: XOR<nd_barangUpdateWithoutNd_satuanInput, nd_barangUncheckedUpdateWithoutNd_satuanInput>
  }

  export type nd_barangUpdateManyWithWhereWithoutNd_satuanInput = {
    where: nd_barangScalarWhereInput
    data: XOR<nd_barangUpdateManyMutationInput, nd_barangUncheckedUpdateManyWithoutNd_satuanInput>
  }

  export type nd_barangScalarWhereInput = {
    AND?: nd_barangScalarWhereInput | nd_barangScalarWhereInput[]
    OR?: nd_barangScalarWhereInput[]
    NOT?: nd_barangScalarWhereInput | nd_barangScalarWhereInput[]
    id?: IntFilter<"nd_barang"> | number
    jenis_barang?: StringNullableFilter<"nd_barang"> | string | null
    nama_jual?: StringNullableFilter<"nd_barang"> | string | null
    satuan_id?: IntNullableFilter<"nd_barang"> | number | null
    qty_warning?: IntFilter<"nd_barang"> | number
    deskripsi_info?: StringNullableFilter<"nd_barang"> | string | null
    status_aktif?: IntNullableFilter<"nd_barang"> | number | null
    tipe_qty?: BoolNullableFilter<"nd_barang"> | boolean | null
    grade?: StringNullableFilter<"nd_barang"> | string | null
    bahan?: StringNullableFilter<"nd_barang"> | string | null
    fitur?: StringNullableFilter<"nd_barang"> | string | null
    tipe?: StringNullableFilter<"nd_barang"> | string | null
    created_at?: DateTimeFilter<"nd_barang"> | Date | string
    updated_at?: DateTimeFilter<"nd_barang"> | Date | string
  }

  export type nd_posisiCreateWithoutNd_userInput = {
    name?: string | null
  }

  export type nd_posisiUncheckedCreateWithoutNd_userInput = {
    id?: number
    name?: string | null
  }

  export type nd_posisiCreateOrConnectWithoutNd_userInput = {
    where: nd_posisiWhereUniqueInput
    create: XOR<nd_posisiCreateWithoutNd_userInput, nd_posisiUncheckedCreateWithoutNd_userInput>
  }

  export type nd_posisiUpsertWithoutNd_userInput = {
    update: XOR<nd_posisiUpdateWithoutNd_userInput, nd_posisiUncheckedUpdateWithoutNd_userInput>
    create: XOR<nd_posisiCreateWithoutNd_userInput, nd_posisiUncheckedCreateWithoutNd_userInput>
    where?: nd_posisiWhereInput
  }

  export type nd_posisiUpdateToOneWithWhereWithoutNd_userInput = {
    where?: nd_posisiWhereInput
    data: XOR<nd_posisiUpdateWithoutNd_userInput, nd_posisiUncheckedUpdateWithoutNd_userInput>
  }

  export type nd_posisiUpdateWithoutNd_userInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nd_posisiUncheckedUpdateWithoutNd_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type nd_userCreateManyNd_posisiInput = {
    id?: number
    username?: string | null
    password?: string | null
    roles?: string | null
    has_account?: number
    nama?: string | null
    alamat?: string | null
    telepon?: string | null
    jenis_kelamin?: string | null
    kota_lahir?: string | null
    tgl_lahir?: Date | string | null
    status_perkawinan?: string | null
    jumlah_anak?: number | null
    agama?: string | null
    nik?: string | null
    npwp?: string | null
    profile_picture?: string | null
    ktp_picture?: string | null
    npwp_picture?: string | null
    time_start?: Date | string | null
    time_end?: Date | string | null
    printer_list_id?: number | null
    status_aktif?: number | null
    PIN?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_userUpdateWithoutNd_posisiInput = {
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_userUncheckedUpdateWithoutNd_posisiInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_userUncheckedUpdateManyWithoutNd_posisiInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: NullableStringFieldUpdateOperationsInput | string | null
    has_account?: IntFieldUpdateOperationsInput | number
    nama?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    telepon?: NullableStringFieldUpdateOperationsInput | string | null
    jenis_kelamin?: NullableStringFieldUpdateOperationsInput | string | null
    kota_lahir?: NullableStringFieldUpdateOperationsInput | string | null
    tgl_lahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_perkawinan?: NullableStringFieldUpdateOperationsInput | string | null
    jumlah_anak?: NullableIntFieldUpdateOperationsInput | number | null
    agama?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    npwp?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    npwp_picture?: NullableStringFieldUpdateOperationsInput | string | null
    time_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    time_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    printer_list_id?: NullableIntFieldUpdateOperationsInput | number | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    PIN?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barangCreateManyNd_satuanInput = {
    id?: number
    jenis_barang?: string | null
    nama_jual?: string | null
    qty_warning?: number
    deskripsi_info?: string | null
    status_aktif?: number | null
    tipe_qty?: boolean | null
    grade?: string | null
    bahan?: string | null
    fitur?: string | null
    tipe?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type nd_barangUpdateWithoutNd_satuanInput = {
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barangUncheckedUpdateWithoutNd_satuanInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type nd_barangUncheckedUpdateManyWithoutNd_satuanInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenis_barang?: NullableStringFieldUpdateOperationsInput | string | null
    nama_jual?: NullableStringFieldUpdateOperationsInput | string | null
    qty_warning?: IntFieldUpdateOperationsInput | number
    deskripsi_info?: NullableStringFieldUpdateOperationsInput | string | null
    status_aktif?: NullableIntFieldUpdateOperationsInput | number | null
    tipe_qty?: NullableBoolFieldUpdateOperationsInput | boolean | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    bahan?: NullableStringFieldUpdateOperationsInput | string | null
    fitur?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}